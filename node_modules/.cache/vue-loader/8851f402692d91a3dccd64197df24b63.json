{"remainingRequest":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\views\\system\\modules\\UserModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\views\\system\\modules\\UserModal.vue","mtime":1665386876000},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\babel-loader\\lib\\index.js","mtime":1665642924601},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js","mtime":1665642924058}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport moment from 'moment'\nimport Vue from 'vue'\nimport { ACCESS_TOKEN } from \"@/store/mutation-types\"\nimport { getAction } from '@/api/manage'\nimport { addUser,editUser,queryUserRole,queryall } from '@/api/api'\nimport { disabledAuthFilter } from \"@/utils/authFilter\"\nimport { duplicateCheck } from '@/api/api'\n\nexport default {\n  name: \"UserModal\",\n  components: {\n  },\n  data () {\n    return {\n      departDisabled: false, //是否是我的部门调用该页面\n      roleDisabled: false, //是否是角色维护调用该页面\n      modalWidth:800,\n      drawerWidth:700,\n      modaltoggleFlag:true,\n      confirmDirty: false,\n      userId:\"\", //保存用户id\n      disableSubmit:false,\n      dateFormat:\"YYYY-MM-DD\",\n      validatorRules:{\n        username:[{required: true, message: '请输入用户账号!'},\n          {validator: this.validateUsername,}],\n        password: [{required: true,pattern:/^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[~!@#$%^&*()_+`\\-={}:\";'<>?,./]).{8,}$/,message: '密码由8位数字、大小写字母和特殊符号组成!'},\n          {validator: this.validateToNextPassword,trigger: 'change'}],\n        confirmpassword: [{required: true, message: '请重新输入登录密码!',},\n          { validator: this.compareToFirstPassword,}],\n        realname:[{ required: true, message: '请输入用户名称!' }],\n        phone: [{required: true, message: '请输入手机号!'}, {validator: this.validatePhone}],\n        email: [{validator: this.validateEmail}],\n        roles:{},\n        workNo:[ { required: true, message: '请输入工号' },\n          { validator: this.validateWorkNo }],\n        telephone: [{ pattern: /^0\\d{2,3}-[1-9]\\d{6,7}$/, message: '请输入正确的座机号码' },]\n      },\n      departIdShow:false,\n      title:\"操作\",\n      visible: false,\n      model: {},\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n      uploadLoading:false,\n      confirmLoading: false,\n      headers:{},\n      url: {\n        fileUpload: window._CONFIG['domianURL']+\"/sys/common/upload\",\n        userWithDepart: \"/sys/user/userDepartList\", // 引入为指定用户查看部门信息需要的url\n        userId:\"/sys/user/generateUserId\", // 引入生成添加用户情况下的url\n        syncUserByUserName:\"/act/process/extActProcess/doSyncUserByUserName\",//同步用户到工作流\n        queryTenantList: '/sys/tenant/queryList'\n      },\n      tenantsOptions: [],\n      rolesOptions:[],\n      nextDepartOptions:[],\n    }\n  },\n  created () {\n    const token = Vue.ls.get(ACCESS_TOKEN);\n    this.headers = {\"X-Access-Token\":token}\n    this.initRoleList()\n    this.initTenantList()\n  },\n  computed:{\n    uploadAction:function () {\n      return this.url.fileUpload;\n    }\n  },\n  methods: {\n    add () {\n      this.refresh();\n      this.edit({activitiSync:'1',userIdentity:1});\n    },\n    edit (record) {\n      let that = this;\n      that.visible = true;\n      //根据屏幕宽度自适应抽屉宽度\n      this.resetScreenSize();\n      that.userId = record.id;\n      that.model = Object.assign({},{selectedroles:'',selecteddeparts:''}, record);\n      //身份为上级显示负责部门，否则不显示\n      if(this.model.userIdentity==2){\n        this.departIdShow=true;\n      }else{\n        this.departIdShow=false;\n      }\n\n      if(record.hasOwnProperty(\"id\")){\n        that.getUserRoles(record.id);\n        that.getUserDeparts(record.id);\n      }\n      console.log('that.model=',that.model)\n    },\n    isDisabledAuth(code){\n      return disabledAuthFilter(code);\n    },\n    //窗口最大化切换\n    toggleScreen(){\n      if(this.modaltoggleFlag){\n        this.modalWidth = window.innerWidth;\n      }else{\n        this.modalWidth = 800;\n      }\n      this.modaltoggleFlag = !this.modaltoggleFlag;\n    },\n    // 根据屏幕变化,设置抽屉尺寸\n    resetScreenSize(){\n      let screenWidth = document.body.clientWidth;\n      if(screenWidth < 500){\n        this.drawerWidth = screenWidth;\n      }else{\n        this.drawerWidth = 700;\n      }\n    },\n    //初始化租户字典\n    initTenantList(){\n      getAction(this.url.queryTenantList).then(res=>{\n        if(res.success){\n          this.tenantsOptions = res.result.map((item,index,arr)=>{\n            let c = {label:item.name, value: item.id+\"\"}\n            return c;\n          })\n          console.log('this.tenantsOptions: ',this.tenantsOptions)\n        }\n      })\n    },\n    //初始化角色字典\n    initRoleList(){\n      queryall().then((res)=>{\n        if(res.success){\n          this.rolesOptions = res.result.map((item,index,arr)=>{\n            let c = {label:item.roleName, value:item.id}\n            return c;\n          })\n          console.log('this.rolesOptions: ',this.rolesOptions)\n        }\n      });\n    },\n    getUserRoles(userid){\n      queryUserRole({userid:userid}).then((res)=>{\n        if(res.success){\n          this.model.selectedroles = res.result.join(\",\");\n          console.log('that.model.selectedroles=',this.model.selectedroles)\n        }\n      });\n    },\n    getUserDeparts(userid){\n      let that = this;\n      getAction(that.url.userWithDepart,{userId:userid}).then((res)=>{\n        if(res.success){\n          let departOptions=[];\n          let selectDepartKeys=[]\n          for (let i = 0; i < res.result.length; i++) {\n            selectDepartKeys.push(res.result[i].key);\n            //新增负责部门选择下拉框\n            departOptions.push({\n              value: res.result[i].key,\n              label: res.result[i].title\n            })\n          }\n          that.model.selecteddeparts = selectDepartKeys.join(\",\")\n          that.nextDepartOptions=departOptions;\n          console.log('that.nextDepartOptions=',that.nextDepartOptions)\n        }\n      })\n    },\n    backDepartInfo(info) {\n      this.model.departIds = this.model.selecteddeparts;\n      this.nextDepartOptions = info.map((item,index,arr)=>{\n        let c = {label:item.text, value: item.value+\"\"}\n        return c;\n      })\n    },\n    refresh () {\n      this.userId=\"\"\n      this.nextDepartOptions=[];\n      this.departIdShow=false;\n    },\n    close () {\n      this.$emit('close');\n      this.visible = false;\n      this.disableSubmit = false;\n      this.nextDepartOptions=[];\n      this.departIdShow=false;\n      this.$refs.form.resetFields();\n    },\n    moment,\n    handleSubmit () {\n      const that = this;\n      // 触发表单验证\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          that.confirmLoading = true;\n          //如果是上级择传入departIds,否则为空\n          if(this.model.userIdentity!==2){\n            this.model.departIds=\"\";\n          }\n          let obj;\n          if(!this.model.id){\n            this.model.id = this.userId;\n            obj=addUser(this.model);\n          }else{\n            obj=editUser(this.model);\n          }\n          obj.then((res)=>{\n            if(res.success){\n              that.$message.success(res.message);\n              that.$emit('ok');\n            }else{\n              that.$message.warning(res.message);\n            }\n          }).finally(() => {\n            that.confirmLoading = false;\n            that.close();\n          })\n        }else{\n          return false;\n        }\n      })\n    },\n    handleCancel () {\n      this.close()\n    },\n    validateToNextPassword (rule, value, callback) {\n      const confirmpassword=this.model.confirmpassword;\n      if (value && confirmpassword && value !== confirmpassword) {\n        callback('两次输入的密码不一样！');\n      }\n      if (value && this.confirmDirty) {\n        this.$refs.form.validateField(['confirmpassword']);\n      }\n      callback();\n    },\n    compareToFirstPassword (rule, value, callback) {\n      if (value && value !== this.model.password) {\n        callback('两次输入的密码不一样！');\n      } else {\n        callback()\n      }\n    },\n    validatePhone(rule, value, callback){\n      if(!value){\n        callback()\n      }else{\n        if(new RegExp(/^1[3|4|5|7|8|9][0-9]\\d{8}$/).test(value)){\n          var params = {\n            tableName: 'sys_user',\n            fieldName: 'phone',\n            fieldVal: value,\n            dataId: this.userId\n          };\n          duplicateCheck(params).then((res) => {\n            if (res.success) {\n              callback()\n            } else {\n              callback(\"手机号已存在!\")\n            }\n          })\n        }else{\n          callback(\"请输入正确格式的手机号码!\");\n        }\n      }\n    },\n    validateEmail(rule, value, callback){\n      if(!value){\n        callback()\n      }else{\n        if(new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/).test(value)){\n          var params = {\n            tableName: 'sys_user',\n            fieldName: 'email',\n            fieldVal: value,\n            dataId: this.userId\n          };\n          duplicateCheck(params).then((res) => {\n            console.log(res)\n            if (res.success) {\n              callback()\n            } else {\n              callback(\"邮箱已存在!\")\n            }\n          })\n        }else{\n          callback(\"请输入正确格式的邮箱!\")\n        }\n      }\n    },\n    validateUsername(rule, value, callback){\n      var params = {\n        tableName: 'sys_user',\n        fieldName: 'username',\n        fieldVal: value,\n        dataId: this.userId\n      };\n      duplicateCheck(params).then((res) => {\n        if (res.success) {\n          callback()\n        } else {\n          callback(\"用户名已存在!\")\n        }\n      })\n    },\n    validateWorkNo(rule, value, callback){\n      var params = {\n        tableName: 'sys_user',\n        fieldName: 'work_no',\n        fieldVal: value,\n        dataId: this.userId\n      };\n      duplicateCheck(params).then((res) => {\n        if (res.success) {\n          callback()\n        } else {\n          callback(\"工号已存在!\")\n        }\n      })\n    },\n    handleConfirmBlur(e) {\n      const value = e.target.value;\n      this.confirmDirty = this.confirmDirty || !!value\n    },\n    beforeUpload: function(file){\n      var fileType = file.type;\n      if(fileType.indexOf('image')<0){\n        this.$message.warning('请上传图片');\n        return false;\n      }\n      //TODO 验证文件大小\n    },\n    identityChange(e){\n      if(e.target.value===1){\n        this.departIdShow=false;\n      }else{\n        this.departIdShow=true;\n      }\n    }\n  }\n}\n",{"version":3,"sources":["UserModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2IA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UserModal.vue","sourceRoot":"src/views/system/modules","sourcesContent":["<template>\n  <a-drawer\n          :title=\"title\"\n          :maskClosable=\"true\"\n          :width=\"drawerWidth\"\n          placement=\"right\"\n          :closable=\"true\"\n          @close=\"handleCancel\"\n          :visible=\"visible\"\n          style=\"height: 100%;\">\n\n    <template slot=\"title\">\n      <div style=\"width: 100%;\">\n        <span>{{ title }}</span>\n        <span style=\"display:inline-block;width:calc(100% - 51px);padding-right:10px;text-align: right\">\n          <a-button @click=\"toggleScreen\" icon=\"appstore\" style=\"height:20px;width:20px;border:0px\"></a-button>\n        </span>\n      </div>\n\n    </template>\n\n    <a-spin :spinning=\"confirmLoading\">\n      <a-form-model ref=\"form\" :model=\"model\" :rules=\"validatorRules\">\n\n        <a-form-model-item label=\"用户账号\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" prop=\"username\">\n          <a-input placeholder=\"请输入用户账号\" v-model=\"model.username\" :readOnly=\"!!model.id\"/>\n        </a-form-model-item>\n\n        <template v-if=\"!model.id\">\n          <a-form-model-item label=\"登录密码\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" prop=\"password\" >\n            <a-input type=\"password\" placeholder=\"请输入登录密码\" v-model=\"model.password\" />\n          </a-form-model-item>\n\n          <a-form-model-item label=\"确认密码\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" prop=\"confirmpassword\" >\n            <a-input type=\"password\" @blur=\"handleConfirmBlur\" placeholder=\"请重新输入登录密码\" v-model=\"model.confirmpassword\"/>\n          </a-form-model-item>\n        </template>\n\n        <a-form-model-item label=\"用户姓名\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" prop=\"realname\">\n          <a-input placeholder=\"请输入用户姓名\" v-model=\"model.realname\" />\n        </a-form-model-item>\n\n        <a-form-model-item label=\"工号\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" prop=\"workNo\">\n          <a-input placeholder=\"请输入工号\" v-model=\"model.workNo\" />\n        </a-form-model-item>\n\n        <a-form-model-item label=\"手机号码\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" prop=\"phone\">\n          <a-input placeholder=\"请输入手机号码\" v-model=\"model.phone\" />\n        </a-form-model-item>\n\n        <a-form-model-item label=\"职务\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n          <j-select-position placeholder=\"请选择职务\" :multiple=\"false\" v-model=\"model.post\"/>\n        </a-form-model-item>\n\n        <a-form-model-item label=\"角色分配\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" v-show=\"!roleDisabled\" >\n          <j-multi-select-tag\n                  :disabled=\"disableSubmit\"\n                  v-model=\"model.selectedroles\"\n                  :options=\"rolesOptions\"\n                  placeholder=\"请选择角色\">\n          </j-multi-select-tag>\n        </a-form-model-item>\n\n        <!--部门分配-->\n        <a-form-model-item label=\"部门分配\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" v-show=\"!departDisabled\">\n          <j-select-depart v-model=\"model.selecteddeparts\" :multi=\"true\" @back=\"backDepartInfo\" :backDepart=\"true\" :treeOpera=\"true\">></j-select-depart>\n        </a-form-model-item>\n\n        <!--租户分配-->\n        <a-form-model-item label=\"租户分配\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" v-show=\"!departDisabled\">\n          <j-multi-select-tag\n                  :disabled=\"disableSubmit\"\n                  v-model=\"model.relTenantIds\"\n                  :options=\"tenantsOptions\"\n                  placeholder=\"请选择租户\">\n          </j-multi-select-tag>\n        </a-form-model-item>\n\n        <a-form-model-item label=\"身份\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n          <a-radio-group  v-model=\"model.userIdentity\"  @change=\"identityChange\">\n            <a-radio :value=\"1\">普通用户</a-radio>\n            <a-radio :value=\"2\">上级</a-radio>\n          </a-radio-group>\n        </a-form-model-item>\n        <a-form-model-item label=\"负责部门\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\"  v-show=\"departIdShow==true\">\n          <j-multi-select-tag\n                  :disabled=\"disableSubmit\"\n                  v-model=\"model.departIds\"\n                  :options=\"nextDepartOptions\"\n                  placeholder=\"请选择负责部门\">\n          </j-multi-select-tag>\n        </a-form-model-item>\n\n        <a-form-model-item label=\"头像\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n          <j-image-upload class=\"avatar-uploader\" text=\"上传\" v-model=\"model.avatar\" ></j-image-upload>\n        </a-form-model-item>\n\n        <a-form-model-item label=\"生日\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n          <a-date-picker\n                  style=\"width: 100%\"\n                  placeholder=\"请选择生日\"\n                  v-model=\"model.birthday\"\n                  :format=\"dateFormat\"\n                  :getCalendarContainer=\"node => node.parentNode\"/>\n        </a-form-model-item>\n\n        <a-form-model-item label=\"性别\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n          <a-select  v-model=\"model.sex\"  placeholder=\"请选择性别\" :getPopupContainer= \"(target) => target.parentNode\">\n            <a-select-option :value=\"1\">男</a-select-option>\n            <a-select-option :value=\"2\">女</a-select-option>\n          </a-select>\n        </a-form-model-item>\n\n        <a-form-model-item label=\"邮箱\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" prop=\"email\">\n          <a-input placeholder=\"请输入邮箱\" v-model=\"model.email\" />\n        </a-form-model-item>\n\n        <a-form-model-item label=\"座机\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" prop=\"telephone\">\n          <a-input placeholder=\"请输入座机\" v-model=\"model.telephone\" />\n        </a-form-model-item>\n\n        <a-form-model-item label=\"工作流引擎\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n          <j-dict-select-tag  v-model=\"model.activitiSync\"  placeholder=\"请选择是否同步工作流引擎\" :type=\"'radio'\" dictCode=\"activiti_sync\"/>\n        </a-form-model-item>\n\n      </a-form-model>\n    </a-spin>\n\n\n    <div class=\"drawer-bootom-button\" v-show=\"!disableSubmit\">\n      <a-popconfirm title=\"确定放弃编辑？\" @confirm=\"handleCancel\" okText=\"确定\" cancelText=\"取消\">\n        <a-button style=\"margin-right: .8rem\">取消</a-button>\n      </a-popconfirm>\n      <a-button @click=\"handleSubmit\" type=\"primary\" :loading=\"confirmLoading\">提交</a-button>\n    </div>\n  </a-drawer>\n</template>\n\n<script>\n  import moment from 'moment'\n  import Vue from 'vue'\n  import { ACCESS_TOKEN } from \"@/store/mutation-types\"\n  import { getAction } from '@/api/manage'\n  import { addUser,editUser,queryUserRole,queryall } from '@/api/api'\n  import { disabledAuthFilter } from \"@/utils/authFilter\"\n  import { duplicateCheck } from '@/api/api'\n\n  export default {\n    name: \"UserModal\",\n    components: {\n    },\n    data () {\n      return {\n        departDisabled: false, //是否是我的部门调用该页面\n        roleDisabled: false, //是否是角色维护调用该页面\n        modalWidth:800,\n        drawerWidth:700,\n        modaltoggleFlag:true,\n        confirmDirty: false,\n        userId:\"\", //保存用户id\n        disableSubmit:false,\n        dateFormat:\"YYYY-MM-DD\",\n        validatorRules:{\n          username:[{required: true, message: '请输入用户账号!'},\n            {validator: this.validateUsername,}],\n          password: [{required: true,pattern:/^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[~!@#$%^&*()_+`\\-={}:\";'<>?,./]).{8,}$/,message: '密码由8位数字、大小写字母和特殊符号组成!'},\n            {validator: this.validateToNextPassword,trigger: 'change'}],\n          confirmpassword: [{required: true, message: '请重新输入登录密码!',},\n            { validator: this.compareToFirstPassword,}],\n          realname:[{ required: true, message: '请输入用户名称!' }],\n          phone: [{required: true, message: '请输入手机号!'}, {validator: this.validatePhone}],\n          email: [{validator: this.validateEmail}],\n          roles:{},\n          workNo:[ { required: true, message: '请输入工号' },\n            { validator: this.validateWorkNo }],\n          telephone: [{ pattern: /^0\\d{2,3}-[1-9]\\d{6,7}$/, message: '请输入正确的座机号码' },]\n        },\n        departIdShow:false,\n        title:\"操作\",\n        visible: false,\n        model: {},\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 5 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 16 },\n        },\n        uploadLoading:false,\n        confirmLoading: false,\n        headers:{},\n        url: {\n          fileUpload: window._CONFIG['domianURL']+\"/sys/common/upload\",\n          userWithDepart: \"/sys/user/userDepartList\", // 引入为指定用户查看部门信息需要的url\n          userId:\"/sys/user/generateUserId\", // 引入生成添加用户情况下的url\n          syncUserByUserName:\"/act/process/extActProcess/doSyncUserByUserName\",//同步用户到工作流\n          queryTenantList: '/sys/tenant/queryList'\n        },\n        tenantsOptions: [],\n        rolesOptions:[],\n        nextDepartOptions:[],\n      }\n    },\n    created () {\n      const token = Vue.ls.get(ACCESS_TOKEN);\n      this.headers = {\"X-Access-Token\":token}\n      this.initRoleList()\n      this.initTenantList()\n    },\n    computed:{\n      uploadAction:function () {\n        return this.url.fileUpload;\n      }\n    },\n    methods: {\n      add () {\n        this.refresh();\n        this.edit({activitiSync:'1',userIdentity:1});\n      },\n      edit (record) {\n        let that = this;\n        that.visible = true;\n        //根据屏幕宽度自适应抽屉宽度\n        this.resetScreenSize();\n        that.userId = record.id;\n        that.model = Object.assign({},{selectedroles:'',selecteddeparts:''}, record);\n        //身份为上级显示负责部门，否则不显示\n        if(this.model.userIdentity==2){\n          this.departIdShow=true;\n        }else{\n          this.departIdShow=false;\n        }\n\n        if(record.hasOwnProperty(\"id\")){\n          that.getUserRoles(record.id);\n          that.getUserDeparts(record.id);\n        }\n        console.log('that.model=',that.model)\n      },\n      isDisabledAuth(code){\n        return disabledAuthFilter(code);\n      },\n      //窗口最大化切换\n      toggleScreen(){\n        if(this.modaltoggleFlag){\n          this.modalWidth = window.innerWidth;\n        }else{\n          this.modalWidth = 800;\n        }\n        this.modaltoggleFlag = !this.modaltoggleFlag;\n      },\n      // 根据屏幕变化,设置抽屉尺寸\n      resetScreenSize(){\n        let screenWidth = document.body.clientWidth;\n        if(screenWidth < 500){\n          this.drawerWidth = screenWidth;\n        }else{\n          this.drawerWidth = 700;\n        }\n      },\n      //初始化租户字典\n      initTenantList(){\n        getAction(this.url.queryTenantList).then(res=>{\n          if(res.success){\n            this.tenantsOptions = res.result.map((item,index,arr)=>{\n              let c = {label:item.name, value: item.id+\"\"}\n              return c;\n            })\n            console.log('this.tenantsOptions: ',this.tenantsOptions)\n          }\n        })\n      },\n      //初始化角色字典\n      initRoleList(){\n        queryall().then((res)=>{\n          if(res.success){\n            this.rolesOptions = res.result.map((item,index,arr)=>{\n              let c = {label:item.roleName, value:item.id}\n              return c;\n            })\n            console.log('this.rolesOptions: ',this.rolesOptions)\n          }\n        });\n      },\n      getUserRoles(userid){\n        queryUserRole({userid:userid}).then((res)=>{\n          if(res.success){\n            this.model.selectedroles = res.result.join(\",\");\n            console.log('that.model.selectedroles=',this.model.selectedroles)\n          }\n        });\n      },\n      getUserDeparts(userid){\n        let that = this;\n        getAction(that.url.userWithDepart,{userId:userid}).then((res)=>{\n          if(res.success){\n            let departOptions=[];\n            let selectDepartKeys=[]\n            for (let i = 0; i < res.result.length; i++) {\n              selectDepartKeys.push(res.result[i].key);\n              //新增负责部门选择下拉框\n              departOptions.push({\n                value: res.result[i].key,\n                label: res.result[i].title\n              })\n            }\n            that.model.selecteddeparts = selectDepartKeys.join(\",\")\n            that.nextDepartOptions=departOptions;\n            console.log('that.nextDepartOptions=',that.nextDepartOptions)\n          }\n        })\n      },\n      backDepartInfo(info) {\n        this.model.departIds = this.model.selecteddeparts;\n        this.nextDepartOptions = info.map((item,index,arr)=>{\n          let c = {label:item.text, value: item.value+\"\"}\n          return c;\n        })\n      },\n      refresh () {\n        this.userId=\"\"\n        this.nextDepartOptions=[];\n        this.departIdShow=false;\n      },\n      close () {\n        this.$emit('close');\n        this.visible = false;\n        this.disableSubmit = false;\n        this.nextDepartOptions=[];\n        this.departIdShow=false;\n        this.$refs.form.resetFields();\n      },\n      moment,\n      handleSubmit () {\n        const that = this;\n        // 触发表单验证\n        this.$refs.form.validate(valid => {\n          if (valid) {\n            that.confirmLoading = true;\n            //如果是上级择传入departIds,否则为空\n            if(this.model.userIdentity!==2){\n              this.model.departIds=\"\";\n            }\n            let obj;\n            if(!this.model.id){\n              this.model.id = this.userId;\n              obj=addUser(this.model);\n            }else{\n              obj=editUser(this.model);\n            }\n            obj.then((res)=>{\n              if(res.success){\n                that.$message.success(res.message);\n                that.$emit('ok');\n              }else{\n                that.$message.warning(res.message);\n              }\n            }).finally(() => {\n              that.confirmLoading = false;\n              that.close();\n            })\n          }else{\n            return false;\n          }\n        })\n      },\n      handleCancel () {\n        this.close()\n      },\n      validateToNextPassword (rule, value, callback) {\n        const confirmpassword=this.model.confirmpassword;\n        if (value && confirmpassword && value !== confirmpassword) {\n          callback('两次输入的密码不一样！');\n        }\n        if (value && this.confirmDirty) {\n          this.$refs.form.validateField(['confirmpassword']);\n        }\n        callback();\n      },\n      compareToFirstPassword (rule, value, callback) {\n        if (value && value !== this.model.password) {\n          callback('两次输入的密码不一样！');\n        } else {\n          callback()\n        }\n      },\n      validatePhone(rule, value, callback){\n        if(!value){\n          callback()\n        }else{\n          if(new RegExp(/^1[3|4|5|7|8|9][0-9]\\d{8}$/).test(value)){\n            var params = {\n              tableName: 'sys_user',\n              fieldName: 'phone',\n              fieldVal: value,\n              dataId: this.userId\n            };\n            duplicateCheck(params).then((res) => {\n              if (res.success) {\n                callback()\n              } else {\n                callback(\"手机号已存在!\")\n              }\n            })\n          }else{\n            callback(\"请输入正确格式的手机号码!\");\n          }\n        }\n      },\n      validateEmail(rule, value, callback){\n        if(!value){\n          callback()\n        }else{\n          if(new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/).test(value)){\n            var params = {\n              tableName: 'sys_user',\n              fieldName: 'email',\n              fieldVal: value,\n              dataId: this.userId\n            };\n            duplicateCheck(params).then((res) => {\n              console.log(res)\n              if (res.success) {\n                callback()\n              } else {\n                callback(\"邮箱已存在!\")\n              }\n            })\n          }else{\n            callback(\"请输入正确格式的邮箱!\")\n          }\n        }\n      },\n      validateUsername(rule, value, callback){\n        var params = {\n          tableName: 'sys_user',\n          fieldName: 'username',\n          fieldVal: value,\n          dataId: this.userId\n        };\n        duplicateCheck(params).then((res) => {\n          if (res.success) {\n            callback()\n          } else {\n            callback(\"用户名已存在!\")\n          }\n        })\n      },\n      validateWorkNo(rule, value, callback){\n        var params = {\n          tableName: 'sys_user',\n          fieldName: 'work_no',\n          fieldVal: value,\n          dataId: this.userId\n        };\n        duplicateCheck(params).then((res) => {\n          if (res.success) {\n            callback()\n          } else {\n            callback(\"工号已存在!\")\n          }\n        })\n      },\n      handleConfirmBlur(e) {\n        const value = e.target.value;\n        this.confirmDirty = this.confirmDirty || !!value\n      },\n      beforeUpload: function(file){\n        var fileType = file.type;\n        if(fileType.indexOf('image')<0){\n          this.$message.warning('请上传图片');\n          return false;\n        }\n        //TODO 验证文件大小\n      },\n      identityChange(e){\n        if(e.target.value===1){\n          this.departIdShow=false;\n        }else{\n          this.departIdShow=true;\n        }\n      }\n    }\n  }\n</script>\n\n<style scoped>\n  .avatar-uploader > .ant-upload {\n    width:104px;\n    height:104px;\n  }\n  .ant-upload-select-picture-card i {\n    font-size: 49px;\n    color: #999;\n  }\n\n  .ant-upload-select-picture-card .ant-upload-text {\n    margin-top: 8px;\n    color: #666;\n  }\n\n  .ant-table-tbody .ant-table-row td{\n    padding-top:10px;\n    padding-bottom:10px;\n  }\n\n  .drawer-bootom-button {\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n    border-top: 1px solid #e8e8e8;\n    padding: 10px 16px;\n    text-align: right;\n    left: 0;\n    background: #fff;\n    border-radius: 0 0 2px 2px;\n  }\n\n  /*【JTC-502】 添加用户两个滚动条*/\n  /deep/ .ant-drawer-body {\n    padding-bottom: 53px;\n  }\n\n</style>\n"]}]}