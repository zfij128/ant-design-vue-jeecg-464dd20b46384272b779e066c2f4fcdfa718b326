{"remainingRequest":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\views\\system\\modules\\DictModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\views\\system\\modules\\DictModal.vue","mtime":1665386876000},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\babel-loader\\lib\\index.js","mtime":1665642924601},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js","mtime":1665642924058}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport pick from 'lodash.pick'\nimport { addDict, editDict, duplicateCheck } from '@/api/api'\n\nexport default {\n  name: 'DictModal',\n  data() {\n    return {\n      value: 1,\n      title: '操作',\n      visible: false,\n      model: {},\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      },\n      confirmLoading: false,\n      validatorRules: {\n        dictName: [{ required: true, message: '请输入字典名称!' }],\n        dictCode: [\n          { required: true, message: '请输入字典编码!' },\n          { validator: this.validateDictCode }]\n        }\n    }\n  },\n  created() {\n  },\n  methods: {\n    validateDictCode(rule, value, callback) {\n      // 重复校验\n      var params = {\n        tableName: 'sys_dict',\n        fieldName: 'dict_code',\n        fieldVal: value,\n        dataId: this.model.id\n      }\n      duplicateCheck(params).then((res) => {\n        if (res.success) {\n          callback()\n        } else {\n          callback(res.message)\n        }\n      })\n    },\n    handleChange(value) {\n      this.model.status = value\n    },\n    add() {\n      this.edit({})\n    },\n    edit(record) {\n      if (record.id) {\n        this.visiblekey = true\n      } else {\n        this.visiblekey = false\n      }\n      this.model = Object.assign({}, record)\n      this.visible = true\n    },\n    // 确定\n    handleOk() {\n      const that = this\n      // 触发表单验证\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          that.confirmLoading = true\n          this.model.dictName = (this.model.dictName || '').trim()\n          this.model.dictCode = (this.model.dictCode || '').trim()\n          this.model.description = (this.model.description || '').trim()\n          let obj\n          if (!this.model.id) {\n            obj = addDict(this.model)\n          } else {\n            obj = editDict(this.model)\n          }\n          obj.then((res) => {\n            if (res.success) {\n              that.$message.success(res.message)\n              that.$emit('ok')\n            } else {\n              that.$message.warning(res.message)\n            }\n          }).finally(() => {\n            that.confirmLoading = false\n            that.close()\n          })\n        }else{\n          return false;\n        }\n      })\n    },\n    // 关闭\n    handleCancel() {\n      this.close()\n    },\n    close() {\n      this.$emit('close')\n      this.visible = false\n      this.$refs.form.resetFields();\n    }\n  }\n}\n",{"version":3,"sources":["DictModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DictModal.vue","sourceRoot":"src/views/system/modules","sourcesContent":["<template>\n  <a-modal\n    :title=\"title\"\n    :width=\"600\"\n    :visible=\"visible\"\n    :confirmLoading=\"confirmLoading\"\n    @ok=\"handleOk\"\n    @cancel=\"handleCancel\"\n    cancelText=\"关闭\"\n  >\n    <a-spin :spinning=\"confirmLoading\">\n      <a-form-model ref=\"form\" :model=\"model\" :rules=\"validatorRules\">\n\n        <a-form-model-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          prop=\"dictName\"\n          required\n          label=\"字典名称\">\n          <a-input placeholder=\"请输入字典名称\" v-model=\"model.dictName\"/>\n        </a-form-model-item>\n\n        <a-form-model-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          prop=\"dictCode\"\n          required\n          label=\"字典编码\">\n          <a-input placeholder=\"请输入字典编码\" v-model=\"model.dictCode\"/>\n        </a-form-model-item>\n\n        <a-form-model-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"描述\">\n          <a-input v-model=\"model.description\"/>\n        </a-form-model-item>\n\n      </a-form-model>\n    </a-spin>\n  </a-modal>\n</template>\n\n<script>\n  import pick from 'lodash.pick'\n  import { addDict, editDict, duplicateCheck } from '@/api/api'\n\n  export default {\n    name: 'DictModal',\n    data() {\n      return {\n        value: 1,\n        title: '操作',\n        visible: false,\n        model: {},\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 5 }\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 16 }\n        },\n        confirmLoading: false,\n        validatorRules: {\n          dictName: [{ required: true, message: '请输入字典名称!' }],\n          dictCode: [\n            { required: true, message: '请输入字典编码!' },\n            { validator: this.validateDictCode }]\n          }\n      }\n    },\n    created() {\n    },\n    methods: {\n      validateDictCode(rule, value, callback) {\n        // 重复校验\n        var params = {\n          tableName: 'sys_dict',\n          fieldName: 'dict_code',\n          fieldVal: value,\n          dataId: this.model.id\n        }\n        duplicateCheck(params).then((res) => {\n          if (res.success) {\n            callback()\n          } else {\n            callback(res.message)\n          }\n        })\n      },\n      handleChange(value) {\n        this.model.status = value\n      },\n      add() {\n        this.edit({})\n      },\n      edit(record) {\n        if (record.id) {\n          this.visiblekey = true\n        } else {\n          this.visiblekey = false\n        }\n        this.model = Object.assign({}, record)\n        this.visible = true\n      },\n      // 确定\n      handleOk() {\n        const that = this\n        // 触发表单验证\n        this.$refs.form.validate(valid => {\n          if (valid) {\n            that.confirmLoading = true\n            this.model.dictName = (this.model.dictName || '').trim()\n            this.model.dictCode = (this.model.dictCode || '').trim()\n            this.model.description = (this.model.description || '').trim()\n            let obj\n            if (!this.model.id) {\n              obj = addDict(this.model)\n            } else {\n              obj = editDict(this.model)\n            }\n            obj.then((res) => {\n              if (res.success) {\n                that.$message.success(res.message)\n                that.$emit('ok')\n              } else {\n                that.$message.warning(res.message)\n              }\n            }).finally(() => {\n              that.confirmLoading = false\n              that.close()\n            })\n          }else{\n            return false;\n          }\n        })\n      },\n      // 关闭\n      handleCancel() {\n        this.close()\n      },\n      close() {\n        this.$emit('close')\n        this.visible = false\n        this.$refs.form.resetFields();\n      }\n    }\n  }\n</script>"]}]}