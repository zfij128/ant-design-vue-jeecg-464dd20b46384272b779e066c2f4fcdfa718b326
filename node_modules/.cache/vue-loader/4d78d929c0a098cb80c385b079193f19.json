{"remainingRequest":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\components\\jeecg\\JEasyCron\\EasyCron.vue?vue&type=style&index=0&id=4f916476&scoped=true&lang=less&","dependencies":[{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\components\\jeecg\\JEasyCron\\EasyCron.vue","mtime":1665386876000},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\css-loader\\index.js","mtime":1665642925383},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1665642924059},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\postcss-loader\\src\\index.js","mtime":1665642925858},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\less-loader\\dist\\cjs.js","mtime":1665642924256},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js","mtime":1665642924058}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.j-easy-cron {\n\n  /deep/ .content {\n    .ant-checkbox-wrapper + .ant-checkbox-wrapper {\n      margin-left: 0;\n    }\n  }\n\n}\n",{"version":3,"sources":["EasyCron.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmTA;;AAEA;AACA;AACA;AACA;AACA;;AAEA","file":"EasyCron.vue","sourceRoot":"src/components/jeecg/JEasyCron","sourcesContent":["<template>\n  <div class=\"j-easy-cron\">\n    <div class=\"content\">\n      <div>\n        <a-tabs size=\"small\" v-model=\"curtab\">\n          <a-tab-pane tab=\"秒\" key=\"second\" v-if=\"!hideSecond\">\n            <second-ui v-model=\"second\" :disabled=\"disabled\"></second-ui>\n          </a-tab-pane>\n          <a-tab-pane tab=\"分\" key=\"minute\">\n            <minute-ui v-model=\"minute\" :disabled=\"disabled\"></minute-ui>\n          </a-tab-pane>\n          <a-tab-pane tab=\"时\" key=\"hour\">\n            <hour-ui v-model=\"hour\" :disabled=\"disabled\"></hour-ui>\n          </a-tab-pane>\n          <a-tab-pane tab=\"日\" key=\"day\">\n            <day-ui v-model=\"day\" :week=\"week\" :disabled=\"disabled\"></day-ui>\n          </a-tab-pane>\n          <a-tab-pane tab=\"月\" key=\"month\">\n            <month-ui v-model=\"month\" :disabled=\"disabled\"></month-ui>\n          </a-tab-pane>\n          <a-tab-pane tab=\"周\" key=\"week\">\n            <week-ui v-model=\"week\" :day=\"day\" :disabled=\"disabled\"></week-ui>\n          </a-tab-pane>\n          <a-tab-pane tab=\"年\" key=\"year\" v-if=\"!hideYear && !hideSecond\">\n            <year-ui v-model=\"year\" :disabled=\"disabled\"></year-ui>\n          </a-tab-pane>\n        </a-tabs>\n      </div>\n      <a-divider/>\n      <!-- 执行时间预览 -->\n      <a-row :gutter=\"8\">\n        <a-col :span=\"18\" style=\"margin-top: 22px;\">\n          <a-row :gutter=\"8\">\n            <a-col :span=\"8\" style=\"margin-bottom: 8px;\">\n              <a-input addon-before=\"秒\" v-model=\"inputValues.second\" @blur=\"onInputBlur\"/>\n            </a-col>\n            <a-col :span=\"8\" style=\"margin-bottom: 8px;\">\n              <a-input addon-before=\"分\" v-model=\"inputValues.minute\" @blur=\"onInputBlur\"/>\n            </a-col>\n            <a-col :span=\"8\" style=\"margin-bottom: 8px;\">\n              <a-input addon-before=\"时\" v-model=\"inputValues.hour\" @blur=\"onInputBlur\"/>\n            </a-col>\n            <a-col :span=\"8\" style=\"margin-bottom: 8px;\">\n              <a-input addon-before=\"日\" v-model=\"inputValues.day\" @blur=\"onInputBlur\"/>\n            </a-col>\n            <a-col :span=\"8\" style=\"margin-bottom: 8px;\">\n              <a-input addon-before=\"月\" v-model=\"inputValues.month\" @blur=\"onInputBlur\"/>\n            </a-col>\n            <a-col :span=\"8\" style=\"margin-bottom: 8px;\">\n              <a-input addon-before=\"周\" v-model=\"inputValues.week\" @blur=\"onInputBlur\"/>\n            </a-col>\n            <a-col :span=\"8\" style=\"margin-bottom: 8px;\">\n              <a-input addon-before=\"年\" v-model=\"inputValues.year\" @blur=\"onInputBlur\"/>\n            </a-col>\n            <a-col :span=\"16\" style=\"margin-bottom: 8px;\">\n              <a-input addon-before=\"Cron\" v-model=\"inputValues.cron\" @blur=\"onInputCronBlur\"/>\n            </a-col>\n          </a-row>\n        </a-col>\n        <a-col :span=\"6\">\n\n          <div>近十次执行时间（不含年）</div>\n          <a-textarea type=\"textarea\" :value=\"preTimeList\" :rows=\"5\"/>\n        </a-col>\n      </a-row>\n    </div>\n  </div>\n</template>\n\n<script>\nimport SecondUi from './tabs/second'\nimport MinuteUi from './tabs/minute'\nimport HourUi from './tabs/hour'\nimport DayUi from './tabs/day'\nimport WeekUi from './tabs/week'\nimport MonthUi from './tabs/month'\nimport YearUi from './tabs/year'\nimport CronParser from 'cron-parser'\nimport dateFormat from './format-date'\nimport { simpleDebounce } from '@/utils/util'\nimport ACol from 'ant-design-vue/es/grid/Col'\n\nexport default {\n  name: 'easy-cron',\n  components: {\n    ACol,\n    SecondUi,\n    MinuteUi,\n    HourUi,\n    DayUi,\n    WeekUi,\n    MonthUi,\n    YearUi\n  },\n  props: {\n    cronValue: {\n      type: String,\n      default: ''\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    hideSecond: {\n      type: Boolean,\n      default: false\n    },\n    hideYear: {\n      type: Boolean,\n      default: false\n    },\n    remote: {\n      type: Function,\n      default: null\n    }\n  },\n  data() {\n    return {\n      curtab: this.hideSecond ? 'minute' : 'second',\n      second: '*',\n      minute: '*',\n      hour: '*',\n      day: '*',\n      month: '*',\n      week: '?',\n      year: '*',\n      inputValues: {second: '', minute: '', hour: '', day: '', month: '', week: '', year: '', cron: ''},\n      preTimeList: '执行预览，会忽略年份参数',\n    }\n  },\n  computed: {\n    cronValue_c() {\n      let result = []\n      if (!this.hideSecond) result.push(this.second ? this.second : '*')\n      result.push(this.minute ? this.minute : '*')\n      result.push(this.hour ? this.hour : '*')\n      result.push(this.day ? this.day : '*')\n      result.push(this.month ? this.month : '*')\n      result.push(this.week ? this.week : '?')\n      if (!this.hideYear && !this.hideSecond) result.push(this.year ? this.year : '*')\n      return result.join(' ')\n    },\n    cronValue_c2() {\n      const v = this.cronValue_c\n      if (this.hideYear || this.hideSecond) return v\n      const vs = v.split(' ')\n      if (vs.length >= 6) {\n        // 将 Quartz 星期 的规则转换为 CronParser 的规则\n        vs[5] = this.convertQuartzWeekToCParser(vs[5])\n      }\n      return vs.slice(0, vs.length - 1).join(' ')\n    },\n  },\n  watch: {\n    cronValue(newVal, oldVal) {\n      if (newVal === this.cronValue_c) {\n        // console.info('same cron value: ' + newVal)\n        return\n      }\n      this.formatValue()\n    },\n    cronValue_c(newVal, oldVal) {\n      this.calTriggerList()\n      this.$emit('change', newVal)\n      this.assignInput()\n    },\n    minute() {\n      if (this.second === '*') {\n        this.second = '0'\n      }\n    },\n    hour() {\n      if (this.minute === '*') {\n        this.minute = '0'\n      }\n    },\n    day(day) {\n      if (day !== '?' && this.hour === '*') {\n        this.hour = '0'\n      }\n    },\n    week(week) {\n      if (week !== '?' && this.hour === '*') {\n        this.hour = '0'\n      }\n    },\n    month() {\n      if (this.day === '?' && this.week === '*') {\n        this.week = '1'\n      } else if (this.week === '?' && this.day === '*') {\n        this.day = '1'\n      }\n    },\n    year() {\n      if (this.month === '*') {\n        this.month = '1'\n      }\n    },\n  },\n  created() {\n    this.formatValue()\n    this.$nextTick(() => {\n      this.calTriggerListInner()\n    })\n  },\n  methods: {\n    assignInput() {\n      Object.assign(this.inputValues, {\n        second: this.second,\n        minute: this.minute,\n        hour: this.hour,\n        day: this.day,\n        month: this.month,\n        week: this.week,\n        year: this.year,\n        cron: this.cronValue_c,\n      })\n    },\n    formatValue() {\n      if (!this.cronValue) return\n      const values = this.cronValue.split(' ').filter(item => !!item)\n      if (!values || values.length <= 0) return\n      let i = 0\n      if (!this.hideSecond) this.second = values[i++]\n      if (values.length > i) this.minute = values[i++]\n      if (values.length > i) this.hour = values[i++]\n      if (values.length > i) this.day = values[i++]\n      if (values.length > i) this.month = values[i++]\n      if (values.length > i) this.week = values[i++]\n      if (values.length > i) this.year = values[i]\n      this.assignInput()\n    },\n    // 将 Quartz 星期 的规则转换为 CronParser 的规则：\n    // Quartz 的规则：1 = 周日，2 = 周一，3 = 周二，4 = 周三，5 = 周四，6 = 周五，7 = 周六\n    // CronParser 的规则： 0 = 周日，1 = 周一，2 = 周二，3 = 周三，4 = 周四，5 = 周五，6 = 周六，7 = 周日\n    convertQuartzWeekToCParser(week) {\n      let convert = (v) => {\n        if (v === '0') {\n          return '1'\n        }\n        if (v === '1') {\n          return '0'\n        }\n        return (Number.parseInt(v) - 1).toString()\n      }\n      // 匹配示例 1-7 or 1/7\n      let patten1 = /^([0-7])([-/])([0-7])$/\n      // 匹配示例 1,4,7\n      let patten2 = /^([0-7])(,[0-7])+$/\n      if (/^[0-7]$/.test(week)) {\n        return convert(week)\n      } else if (patten1.test(week)) {\n        return week.replace(patten1, ($0, before, separator, after) => {\n          if (separator === '/') {\n            return convert(before) + separator + after\n          } else {\n            return convert(before) + separator + convert(after)\n          }\n        })\n      } else if (patten2.test(week)) {\n        return week.split(',').map(v => convert(v)).join(',')\n      }\n      return week\n    },\n    calTriggerList: simpleDebounce(function () {\n      this.calTriggerListInner()\n    }, 500),\n    calTriggerListInner() {\n      // 设置了回调函数\n      if (this.remote) {\n        this.remote(this.cronValue_c, +new Date(), v => {\n          this.preTimeList = v\n        })\n        return\n      }\n      const format = 'yyyy-MM-dd hh:mm:ss'\n      const options = {\n        currentDate: dateFormat(new Date(), format)\n      }\n      const iter = CronParser.parseExpression(this.cronValue_c2, options)\n      const result = []\n      for (let i = 1; i <= 10; i++) {\n        result.push(dateFormat(new Date(iter.next()), format))\n      }\n      this.preTimeList = result.length > 0 ? result.join('\\n') : '无执行时间'\n    },\n    onInputBlur(){\n      this.second = this.inputValues.second\n      this.minute = this.inputValues.minute\n      this.hour = this.inputValues.hour\n      this.day = this.inputValues.day\n      this.month = this.inputValues.month\n      this.week = this.inputValues.week\n      this.year = this.inputValues.year\n    },\n    onInputCronBlur(event){\n      this.$emit('change', event.target.value)\n    },\n  },\n  model: {\n    prop: 'cronValue',\n    event: 'change'\n  },\n}\n</script>\n\n<style scoped lang=\"less\">\n  .j-easy-cron {\n\n    /deep/ .content {\n      .ant-checkbox-wrapper + .ant-checkbox-wrapper {\n        margin-left: 0;\n      }\n    }\n\n  }\n</style>\n"]}]}