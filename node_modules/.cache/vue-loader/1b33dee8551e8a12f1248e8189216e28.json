{"remainingRequest":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\views\\system\\modules\\DictItemModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\views\\system\\modules\\DictItemModal.vue","mtime":1665386876000},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\babel-loader\\lib\\index.js","mtime":1665642924601},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js","mtime":1665642924058}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport pick from 'lodash.pick'\nimport {addDictItem, editDictItem} from '@/api/api'\nimport { getAction } from '@api/manage'\n\nexport default {\n  name: \"DictItemModal\",\n  data() {\n    return {\n      title: \"操作\",\n      visible: false,\n      visibleCheck: true,\n      model: {},\n      dictId: \"\",\n      status: 1,\n      labelCol: {\n        xs: {span: 24},\n        sm: {span: 5},\n      },\n      wrapperCol: {\n        xs: {span: 24},\n        sm: {span: 16},\n      },\n      confirmLoading: false,\n      validatorRules: {\n        itemText:  [{required: true, message: '请输入名称!'}],\n        itemValue:  [{required: true, message: '请输入数据值!'},{validator: this.validateItemValue}],\n      },\n    }\n  },\n  created() {\n  },\n  methods: {\n    add(dictId) {\n      this.dictId = dictId;\n      //初始化默认值\n      this.edit({sortOrder:1,status:1});\n    },\n    edit(record) {\n      if (record.id) {\n        this.dictId = record.dictId;\n      }\n      this.status = record.status;\n      this.visibleCheck = (record.status == 1) ? true : false;\n      this.model = Object.assign({}, record);\n      this.model.dictId = this.dictId;\n      this.model.status = this.status;\n      this.visible = true;\n    },\n    onChose(checked) {\n      if (checked) {\n        this.status = 1;\n        this.visibleCheck = true;\n      } else {\n        this.status = 0;\n        this.visibleCheck = false;\n      }\n    },\n    // 确定\n    handleOk() {\n      const that = this;\n      // 触发表单验证\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          that.confirmLoading = true;\n          this.model.itemText = (this.model.itemText || '').trim()\n          this.model.itemValue = (this.model.itemValue || '').trim()\n          this.model.description = (this.model.description || '').trim()\n          this.model.status = this.status;\n          let obj;\n          if (!this.model.id) {\n            obj = addDictItem(this.model);\n          } else {\n            obj = editDictItem(this.model);\n          }\n          obj.then((res) => {\n            if (res.success) {\n              that.$message.success(res.message);\n              that.$emit('ok');\n            } else {\n              that.$message.warning(res.message);\n            }\n          }).finally(() => {\n            that.confirmLoading = false;\n            that.close();\n          })\n        }else{\n          return false;\n        }\n      })\n    },\n    // 关闭\n    handleCancel() {\n      this.close();\n    },\n    close() {\n      this.$emit('close');\n      this.visible = false;\n      this.$refs.form.resetFields();\n    },\n    validateItemValue(rule, value, callback){\n      let param = {\n        itemValue:value,\n        dictId:this.dictId,\n      }\n      if(this.model.id){\n        param.id = this.model.id\n      }\n      if(value){\n        let reg=new RegExp(\"[`~!@#$^&*()=|{}'.<>《》/?！￥（）—【】‘；：”“。，、？]\")\n        if(reg.test(value)){\n          callback(\"数据值不能包含特殊字符！\")\n        }else{\n          //update--begin--autor:lvdandan-----date:20201203------for：JT-27【数据字典】字典 - 数据值可重复\n          getAction(\"/sys/dictItem/dictItemCheck\",param).then((res)=>{\n            if(res.success){\n              callback()\n            }else{\n              callback(res.message);\n            }\n          });\n          //update--end--autor:lvdandan-----date:20201203------for：JT-27【数据字典】字典 - 数据值可重复\n        }\n      }else{\n        callback()\n      }\n    }\n  }\n}\n",{"version":3,"sources":["DictItemModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DictItemModal.vue","sourceRoot":"src/views/system/modules","sourcesContent":["<template>\n  <a-modal\n    :title=\"title\"\n    :width=\"800\"\n    :visible=\"visible\"\n    :confirmLoading=\"confirmLoading\"\n    @ok=\"handleOk\"\n    @cancel=\"handleCancel\"\n    cancelText=\"关闭\"\n  >\n    <a-spin :spinning=\"confirmLoading\">\n      <a-form-model  ref=\"form\" :model=\"model\" :rules=\"validatorRules\">\n\n        <a-form-model-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          prop=\"itemText\"\n          label=\"名称\">\n          <a-input placeholder=\"请输入名称\" v-model=\"model.itemText\"/>\n        </a-form-model-item>\n\n        <a-form-model-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          prop=\"itemValue\"\n          label=\"数据值\">\n          <a-input placeholder=\"请输入数据值\" v-model=\"model.itemValue\" />\n        </a-form-model-item>\n\n        <a-form-model-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"描述\">\n          <a-input v-model=\"model.description\" />\n        </a-form-model-item>\n\n        <a-form-model-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"排序值\">\n          <a-input-number :min=\"1\" v-model=\"model.sortOrder\" />\n          值越小越靠前\n        </a-form-model-item>\n\n        <a-form-model-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"是否启用\"\n          hasFeedback>\n          <a-switch checkedChildren=\"启用\" unCheckedChildren=\"禁用\" @change=\"onChose\" v-model=\"visibleCheck\"/>\n        </a-form-model-item>\n\n      </a-form-model>\n    </a-spin>\n  </a-modal>\n</template>\n\n<script>\n  import pick from 'lodash.pick'\n  import {addDictItem, editDictItem} from '@/api/api'\n  import { getAction } from '@api/manage'\n\n  export default {\n    name: \"DictItemModal\",\n    data() {\n      return {\n        title: \"操作\",\n        visible: false,\n        visibleCheck: true,\n        model: {},\n        dictId: \"\",\n        status: 1,\n        labelCol: {\n          xs: {span: 24},\n          sm: {span: 5},\n        },\n        wrapperCol: {\n          xs: {span: 24},\n          sm: {span: 16},\n        },\n        confirmLoading: false,\n        validatorRules: {\n          itemText:  [{required: true, message: '请输入名称!'}],\n          itemValue:  [{required: true, message: '请输入数据值!'},{validator: this.validateItemValue}],\n        },\n      }\n    },\n    created() {\n    },\n    methods: {\n      add(dictId) {\n        this.dictId = dictId;\n        //初始化默认值\n        this.edit({sortOrder:1,status:1});\n      },\n      edit(record) {\n        if (record.id) {\n          this.dictId = record.dictId;\n        }\n        this.status = record.status;\n        this.visibleCheck = (record.status == 1) ? true : false;\n        this.model = Object.assign({}, record);\n        this.model.dictId = this.dictId;\n        this.model.status = this.status;\n        this.visible = true;\n      },\n      onChose(checked) {\n        if (checked) {\n          this.status = 1;\n          this.visibleCheck = true;\n        } else {\n          this.status = 0;\n          this.visibleCheck = false;\n        }\n      },\n      // 确定\n      handleOk() {\n        const that = this;\n        // 触发表单验证\n        this.$refs.form.validate(valid => {\n          if (valid) {\n            that.confirmLoading = true;\n            this.model.itemText = (this.model.itemText || '').trim()\n            this.model.itemValue = (this.model.itemValue || '').trim()\n            this.model.description = (this.model.description || '').trim()\n            this.model.status = this.status;\n            let obj;\n            if (!this.model.id) {\n              obj = addDictItem(this.model);\n            } else {\n              obj = editDictItem(this.model);\n            }\n            obj.then((res) => {\n              if (res.success) {\n                that.$message.success(res.message);\n                that.$emit('ok');\n              } else {\n                that.$message.warning(res.message);\n              }\n            }).finally(() => {\n              that.confirmLoading = false;\n              that.close();\n            })\n          }else{\n            return false;\n          }\n        })\n      },\n      // 关闭\n      handleCancel() {\n        this.close();\n      },\n      close() {\n        this.$emit('close');\n        this.visible = false;\n        this.$refs.form.resetFields();\n      },\n      validateItemValue(rule, value, callback){\n        let param = {\n          itemValue:value,\n          dictId:this.dictId,\n        }\n        if(this.model.id){\n          param.id = this.model.id\n        }\n        if(value){\n          let reg=new RegExp(\"[`~!@#$^&*()=|{}'.<>《》/?！￥（）—【】‘；：”“。，、？]\")\n          if(reg.test(value)){\n            callback(\"数据值不能包含特殊字符！\")\n          }else{\n            //update--begin--autor:lvdandan-----date:20201203------for：JT-27【数据字典】字典 - 数据值可重复\n            getAction(\"/sys/dictItem/dictItemCheck\",param).then((res)=>{\n              if(res.success){\n                callback()\n              }else{\n                callback(res.message);\n              }\n            });\n            //update--end--autor:lvdandan-----date:20201203------for：JT-27【数据字典】字典 - 数据值可重复\n          }\n        }else{\n          callback()\n        }\n      }\n    }\n  }\n</script>\n"]}]}