{"remainingRequest":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\views\\system\\modules\\QuartzJobModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\views\\system\\modules\\QuartzJobModal.vue","mtime":1665386876000},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\babel-loader\\lib\\index.js","mtime":1665642924601},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js","mtime":1665642924058}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { httpAction } from '@/api/manage'\n// import JCron from \"@/components/jeecg/JCron\";\nimport cronValidator from \"@/components/jeecg/JEasyCron/validator\";\n\nexport default {\n  name: \"QuartzJobModal\",\n  components: {\n    // JCron,\n  },\n  data () {\n    return {\n      title:\"操作\",\n      buttonStyle: 'solid',\n      visible: false,\n      model: {},\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n      cron: {\n        label: '',\n        value: ''\n      },\n      confirmLoading: false,\n      validatorRules: {\n        cronExpression: [\n          {required: true, message: '请输入cron表达式!'},\n          {validator: cronValidator,}\n        ],\n        jobClassName: [{required: true, message: '请输入任务类名!'}]\n      },\n      url: {\n        add: \"/sys/quartzJob/add\",\n        edit: \"/sys/quartzJob/edit\",\n      },\n    }\n  },\n  created () {\n  },\n  methods: {\n    add() {\n      // 统一设置默认值\n      this.edit({\n        cronExpression: '* * * * * ? *',\n        status: 0,\n      })\n    },\n    edit (record) {\n      this.visible = true;\n      this.$nextTick(() => {\n        this.$refs.form.resetFields()\n        this.model = Object.assign({}, record)\n      })\n    },\n    close () {\n      this.$emit('close');\n      this.visible = false;\n    },\n    handleOk () {\n      const that = this;\n      // 触发表单验证\n      this.$refs.form.validate((ok, err) => {\n        if (ok) {\n          that.confirmLoading = true;\n          let httpurl = '';\n          let method = '';\n          if(!this.model.id){\n            httpurl+=this.url.add;\n            method = 'post';\n          }else{\n            httpurl+=this.url.edit;\n            method = 'put';\n          }\n\n          console.log('提交参数',this.model)\n          httpAction(httpurl,this.model,method).then((res)=>{\n            if(res.success){\n              that.$message.success(res.message);\n              that.$emit('ok');\n              that.close();\n            }else{\n              that.$message.warning(res.message);\n            }\n          }).finally(() => {\n            that.confirmLoading = false;\n          })\n\n        }\n      })\n    },\n    handleCancel () {\n      this.close()\n    },\n\n  }\n}\n",{"version":3,"sources":["QuartzJobModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"QuartzJobModal.vue","sourceRoot":"src/views/system/modules","sourcesContent":["<template>\n  <a-modal\n    :title=\"title\"\n    :width=\"800\"\n    :visible=\"visible\"\n    :confirmLoading=\"confirmLoading\"\n    @ok=\"handleOk\"\n    @cancel=\"handleCancel\"\n    okText=\"保存并安排任务\"\n    cancelText=\"关闭\">\n\n    <a-spin :spinning=\"confirmLoading\">\n      <a-form-model ref=\"form\" :model=\"model\" :rules=\"validatorRules\">\n\n        <a-form-model-item :labelCol=\"labelCol\"  :wrapperCol=\"wrapperCol\" label=\"任务类名\" prop=\"jobClassName\" hasFeedback >\n          <a-input placeholder=\"请输入任务类名\" v-model=\"model.jobClassName\" />\n        </a-form-model-item>\n        <a-form-model-item :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" label=\"Cron表达式\" prop=\"cronExpression\">\n          <!-- <j-cron v-model=\"model.cronExpression\"/>-->\n          <j-easy-cron v-model=\"model.cronExpression\" />\n        </a-form-model-item>\n        <a-form-model-item  :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" label=\"参数\" prop=\"parameter\" >\n          <a-textarea placeholder=\"请输入参数\" :rows=\"5\" v-model=\"model.parameter\" />\n        </a-form-model-item>\n        <a-form-model-item :labelCol=\"labelCol\"  :wrapperCol=\"wrapperCol\" label=\"描述\" prop=\"description\">\n          <a-textarea placeholder=\"请输入描述\" :rows=\"3\" v-model=\"model.description\" />\n        </a-form-model-item>\n        <a-form-model-item :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\"  label=\"状态\" prop=\"status\">\n          <j-dict-select-tag type=\"radioButton\" v-model=\"model.status\" dictCode=\"quartz_status\"/>\n        </a-form-model-item>\n      </a-form-model>\n    </a-spin>\n  </a-modal>\n</template>\n\n<script>\n  import { httpAction } from '@/api/manage'\n  // import JCron from \"@/components/jeecg/JCron\";\n  import cronValidator from \"@/components/jeecg/JEasyCron/validator\";\n\n  export default {\n    name: \"QuartzJobModal\",\n    components: {\n      // JCron,\n    },\n    data () {\n      return {\n        title:\"操作\",\n        buttonStyle: 'solid',\n        visible: false,\n        model: {},\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 5 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 16 },\n        },\n        cron: {\n          label: '',\n          value: ''\n        },\n        confirmLoading: false,\n        validatorRules: {\n          cronExpression: [\n            {required: true, message: '请输入cron表达式!'},\n            {validator: cronValidator,}\n          ],\n          jobClassName: [{required: true, message: '请输入任务类名!'}]\n        },\n        url: {\n          add: \"/sys/quartzJob/add\",\n          edit: \"/sys/quartzJob/edit\",\n        },\n      }\n    },\n    created () {\n    },\n    methods: {\n      add() {\n        // 统一设置默认值\n        this.edit({\n          cronExpression: '* * * * * ? *',\n          status: 0,\n        })\n      },\n      edit (record) {\n        this.visible = true;\n        this.$nextTick(() => {\n          this.$refs.form.resetFields()\n          this.model = Object.assign({}, record)\n        })\n      },\n      close () {\n        this.$emit('close');\n        this.visible = false;\n      },\n      handleOk () {\n        const that = this;\n        // 触发表单验证\n        this.$refs.form.validate((ok, err) => {\n          if (ok) {\n            that.confirmLoading = true;\n            let httpurl = '';\n            let method = '';\n            if(!this.model.id){\n              httpurl+=this.url.add;\n              method = 'post';\n            }else{\n              httpurl+=this.url.edit;\n              method = 'put';\n            }\n\n            console.log('提交参数',this.model)\n            httpAction(httpurl,this.model,method).then((res)=>{\n              if(res.success){\n                that.$message.success(res.message);\n                that.$emit('ok');\n                that.close();\n              }else{\n                that.$message.warning(res.message);\n              }\n            }).finally(() => {\n              that.confirmLoading = false;\n            })\n\n          }\n        })\n      },\n      handleCancel () {\n        this.close()\n      },\n\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>"]}]}