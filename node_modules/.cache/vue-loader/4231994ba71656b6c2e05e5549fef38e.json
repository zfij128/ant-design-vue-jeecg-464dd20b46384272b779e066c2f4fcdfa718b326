{"remainingRequest":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\views\\user\\LoginAccount.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\views\\user\\LoginAccount.vue","mtime":1665386876000},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\babel-loader\\lib\\index.js","mtime":1665642924601},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js","mtime":1665642924058}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getAction } from '@/api/manage'\nimport Vue from 'vue'\nimport { mapActions } from 'vuex'\n\nexport default {\n  name: 'LoginAccount',\n  data(){\n    return {\n      requestCodeSuccess: false,\n      randCodeImage: '',\n      currdatetime: '',\n      loginType: 0,\n      model:{\n        username: 'admin',\n        password: '123456',\n        inputCode: ''\n      },\n      validatorRules:{\n        username: [\n          { required: true, message: '请输入用户名!' },\n          { validator: this.handleUsernameOrEmail }\n        ],\n        password: [{\n          required: true, message: '请输入密码!', validator: 'click'\n        }],\n        inputCode: [{\n          required: true, message: '请输入验证码!'\n        }]\n      }\n\n    }\n  },\n  created() {\n    this.handleChangeCheckCode();\n  },\n  methods:{\n    ...mapActions(['Login']),\n    /**刷新验证码*/\n    handleChangeCheckCode(){\n      this.currdatetime = new Date().getTime();\n      this.model.inputCode = ''\n      getAction(`/sys/randomImage/${this.currdatetime}`).then(res=>{\n        if(res.success){\n          this.randCodeImage = res.result\n          this.requestCodeSuccess=true\n        }else{\n          this.$message.error(res.message)\n          this.requestCodeSuccess=false\n        }\n      }).catch(()=>{\n        this.requestCodeSuccess=false\n      })\n    },\n    // 判断登录类型\n    handleUsernameOrEmail (rule, value, callback) {\n      const regex = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((\\.[a-zA-Z0-9_-]{2,3}){1,2})$/;\n      if (regex.test(value)) {\n        this.loginType = 0\n      } else {\n        this.loginType = 1\n      }\n      callback()\n    },\n    /**\n     * 验证字段\n     * @param arr\n     * @param callback\n     */\n    validateFields(arr, callback){\n      let promiseArray = []\n      for(let item of arr){\n        let p = new Promise((resolve, reject) => {\n          this.$refs['form'].validateField(item, (err)=>{\n            if(!err){\n              resolve();\n            }else{\n              reject(err);\n            }\n          })\n        });\n        promiseArray.push(p)\n      }\n      Promise.all(promiseArray).then(()=>{\n        callback()\n      }).catch(err=>{\n        callback(err)\n      })\n    },\n    acceptUsername(username){\n      this.model['username'] = username\n    },\n    //账号密码登录\n    handleLogin(rememberMe){\n      this.validateFields([ 'username', 'password', 'inputCode' ], (err)=>{\n        if(!err){\n          let loginParams = {\n            username: this.model.username,\n            password: this.model.password,\n            captcha: this.model.inputCode,\n            checkKey: this.currdatetime,\n            remember_me: rememberMe,\n          }\n          console.log(\"登录参数\", loginParams)\n          this.Login(loginParams).then((res) => {\n            this.$emit('success', res.result)\n          }).catch((err) => {\n            //update-begin-author: taoyan date:20220425 for: 登录页面，当输入验证码错误时，验证码图片要刷新一下，而不是保持旧的验证码图片不变 #41\n            if(err && err.code===412){\n              this.handleChangeCheckCode();\n            }\n            //update-end-author: taoyan date:20220425 for: 登录页面，当输入验证码错误时，验证码图片要刷新一下，而不是保持旧的验证码图片不变 #41\n            this.$emit('fail', err)\n          });\n        }else{\n          this.$emit('validateFail')\n        }\n      })\n    }\n\n\n  }\n\n}\n",{"version":3,"sources":["LoginAccount.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"LoginAccount.vue","sourceRoot":"src/views/user","sourcesContent":["<template>\n    <div>\n      <a-form-model ref=\"form\" :model=\"model\" :rules=\"validatorRules\">\n        <a-form-model-item required prop=\"username\">\n          <a-input v-model=\"model.username\" size=\"large\" placeholder=\"请输入帐户名 / admin\">\n            <a-icon slot=\"prefix\" type=\"user\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\n          </a-input>\n        </a-form-model-item>\n        <a-form-model-item required prop=\"password\">\n          <a-input v-model=\"model.password\" size=\"large\" type=\"password\" autocomplete=\"false\" placeholder=\"请输入密码 / 123456\">\n            <a-icon slot=\"prefix\" type=\"lock\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\n          </a-input>\n        </a-form-model-item>\n\n        <a-row :gutter=\"0\">\n          <a-col :span=\"16\">\n            <a-form-model-item required prop=\"inputCode\">\n              <a-input v-model=\"model.inputCode\" size=\"large\" type=\"text\" placeholder=\"请输入验证码\">\n                <a-icon slot=\"prefix\" type=\"smile\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\n              </a-input>\n            </a-form-model-item>\n          </a-col>\n          <a-col :span=\"8\" style=\"text-align: right\">\n            <img v-if=\"requestCodeSuccess\" style=\"margin-top: 2px;\" :src=\"randCodeImage\" @click=\"handleChangeCheckCode\"/>\n            <img v-else style=\"margin-top: 2px;\" src=\"../../assets/checkcode.png\" @click=\"handleChangeCheckCode\"/>\n          </a-col>\n        </a-row>\n      </a-form-model>\n    </div>\n</template>\n\n<script>\n  import { getAction } from '@/api/manage'\n  import Vue from 'vue'\n  import { mapActions } from 'vuex'\n\n  export default {\n    name: 'LoginAccount',\n    data(){\n      return {\n        requestCodeSuccess: false,\n        randCodeImage: '',\n        currdatetime: '',\n        loginType: 0,\n        model:{\n          username: 'admin',\n          password: '123456',\n          inputCode: ''\n        },\n        validatorRules:{\n          username: [\n            { required: true, message: '请输入用户名!' },\n            { validator: this.handleUsernameOrEmail }\n          ],\n          password: [{\n            required: true, message: '请输入密码!', validator: 'click'\n          }],\n          inputCode: [{\n            required: true, message: '请输入验证码!'\n          }]\n        }\n\n      }\n    },\n    created() {\n      this.handleChangeCheckCode();\n    },\n    methods:{\n      ...mapActions(['Login']),\n      /**刷新验证码*/\n      handleChangeCheckCode(){\n        this.currdatetime = new Date().getTime();\n        this.model.inputCode = ''\n        getAction(`/sys/randomImage/${this.currdatetime}`).then(res=>{\n          if(res.success){\n            this.randCodeImage = res.result\n            this.requestCodeSuccess=true\n          }else{\n            this.$message.error(res.message)\n            this.requestCodeSuccess=false\n          }\n        }).catch(()=>{\n          this.requestCodeSuccess=false\n        })\n      },\n      // 判断登录类型\n      handleUsernameOrEmail (rule, value, callback) {\n        const regex = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((\\.[a-zA-Z0-9_-]{2,3}){1,2})$/;\n        if (regex.test(value)) {\n          this.loginType = 0\n        } else {\n          this.loginType = 1\n        }\n        callback()\n      },\n      /**\n       * 验证字段\n       * @param arr\n       * @param callback\n       */\n      validateFields(arr, callback){\n        let promiseArray = []\n        for(let item of arr){\n          let p = new Promise((resolve, reject) => {\n            this.$refs['form'].validateField(item, (err)=>{\n              if(!err){\n                resolve();\n              }else{\n                reject(err);\n              }\n            })\n          });\n          promiseArray.push(p)\n        }\n        Promise.all(promiseArray).then(()=>{\n          callback()\n        }).catch(err=>{\n          callback(err)\n        })\n      },\n      acceptUsername(username){\n        this.model['username'] = username\n      },\n      //账号密码登录\n      handleLogin(rememberMe){\n        this.validateFields([ 'username', 'password', 'inputCode' ], (err)=>{\n          if(!err){\n            let loginParams = {\n              username: this.model.username,\n              password: this.model.password,\n              captcha: this.model.inputCode,\n              checkKey: this.currdatetime,\n              remember_me: rememberMe,\n            }\n            console.log(\"登录参数\", loginParams)\n            this.Login(loginParams).then((res) => {\n              this.$emit('success', res.result)\n            }).catch((err) => {\n              //update-begin-author: taoyan date:20220425 for: 登录页面，当输入验证码错误时，验证码图片要刷新一下，而不是保持旧的验证码图片不变 #41\n              if(err && err.code===412){\n                this.handleChangeCheckCode();\n              }\n              //update-end-author: taoyan date:20220425 for: 登录页面，当输入验证码错误时，验证码图片要刷新一下，而不是保持旧的验证码图片不变 #41\n              this.$emit('fail', err)\n            });\n          }else{\n            this.$emit('validateFail')\n          }\n        })\n      }\n\n\n    }\n\n  }\n</script>\n\n<style scoped>\n\n</style>"]}]}