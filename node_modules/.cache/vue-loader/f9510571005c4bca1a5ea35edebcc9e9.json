{"remainingRequest":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\views\\user\\LoginPhone.vue?vue&type=style&index=0&id=50afd0bf&scoped=true&lang=css&","dependencies":[{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\views\\user\\LoginPhone.vue","mtime":1665386876000},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\css-loader\\index.js","mtime":1665642925383},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1665642924059},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\postcss-loader\\src\\index.js","mtime":1665642925858},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js","mtime":1665642924058}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.getCaptcha{\n  display: block;\n  width: 100%;\n  height: 40px;\n}\n",{"version":3,"sources":["LoginPhone.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsKA;AACA;AACA;AACA;AACA","file":"LoginPhone.vue","sourceRoot":"src/views/user","sourcesContent":["<template>\n  <div>\n    <a-form-model ref=\"form\" :model=\"model\" :rules=\"validatorRules\">\n      <a-form-model-item required prop=\"mobile\">\n        <a-input v-model=\"model.mobile\" size=\"large\" type=\"text\" placeholder=\"请输入手机号\">\n          <a-icon slot=\"prefix\" type=\"mobile\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\n        </a-input>\n      </a-form-model-item>\n      <a-row :gutter=\"16\">\n        <a-col class=\"gutter-row\" :span=\"16\">\n          <a-form-model-item required prop=\"captcha\">\n            <a-input v-model=\"model.captcha\" size=\"large\" type=\"text\" placeholder=\"请输入验证码\">\n              <a-icon slot=\"prefix\" type=\"mail\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\n            </a-input>\n          </a-form-model-item>\n        </a-col>\n        <a-col class=\"gutter-row\" :span=\"8\">\n          <a-button\n            class=\"getCaptcha\"\n            tabindex=\"-1\"\n            :disabled=\"state.smsSendBtn\"\n            @click.stop.prevent=\"getCaptcha\"\n            v-text=\"!state.smsSendBtn && '获取验证码' || (state.time+' s')\"></a-button>\n        </a-col>\n      </a-row>\n    </a-form-model>\n  </div>\n</template>\n\n<script>\n  import { postAction } from '@/api/manage'\n  import { mapActions } from 'vuex'\n\n  export default {\n    name: 'LoginPhone',\n    data(){\n      return {\n        model:{\n          mobile: '',\n          captcha: ''\n        },\n        //手机号登录用\n        state: {\n          time: 60,\n          smsSendBtn: false,\n        },\n        validatorRules:{\n          mobile: [\n            { required: true, message: '请输入手机号码!' },\n            { validator: this.validateMobile }\n          ],\n          captcha: [{\n            required: true, message: '请输入验证码!'\n          }]\n        }\n\n      }\n    },\n    methods:{\n      ...mapActions(['PhoneLogin']),\n      handleLogin(rememberMe){\n        this.validateFields([ 'mobile', 'captcha' ], (err) => {\n          if (!err) {\n            let loginParams = {\n              mobile: this.model.mobile,\n              captcha: this.model.captcha,\n              remember_me: rememberMe\n            }\n            console.log(\"登录参数\", loginParams)\n            this.PhoneLogin(loginParams).then((res) => {\n              this.$emit('success', res.result)\n            }).catch((err) => {\n              this.$emit('fail', err)\n            });\n          }else{\n            this.$emit('validateFail')\n          }\n        })\n      },\n      // 校验手机号\n      validateMobile(rule,value,callback){\n        if (!value || new RegExp(/^1([38][0-9]|4[579]|5[0-3,5-9]|6[6]|7[0135678]|9[89])\\d{8}$/).test(value)){\n          callback();\n        }else{\n          callback(\"您的手机号码格式不正确!\");\n        }\n      },\n      //获取验证码\n      getCaptcha (e) {\n        e.preventDefault();\n        let that = this;\n        that.validateFields([ 'mobile' ], (err) => {\n            if (!err) {\n              that.state.smsSendBtn = true;\n              let interval = window.setInterval(() => {\n                if (that.state.time-- <= 0) {\n                  that.state.time = 60;\n                  that.state.smsSendBtn = false;\n                  window.clearInterval(interval);\n                }\n              }, 1000);\n\n              const hide = that.$message.loading('验证码发送中..', 0);\n              let smsParams = {};\n              smsParams.mobile=that.model.mobile;\n              smsParams.smsmode=\"0\";\n              postAction(\"/sys/sms\",smsParams)\n                .then(res => {\n                  if(!res.success){\n                    setTimeout(hide, 0);\n                    that.cmsFailed(res.message);\n                  }\n                  console.log(res);\n                  setTimeout(hide, 500);\n                })\n                .catch(err => {\n                  setTimeout(hide, 1);\n                  clearInterval(interval);\n                  that.state.time = 60;\n                  that.state.smsSendBtn = false;\n                  that.requestFailed(err);\n                });\n            }\n          }\n        );\n      },\n      cmsFailed(err){\n        this.$notification[ 'error' ]({\n          message: '获取验证码失败',\n          description:err,\n          duration: 4,\n        });\n      },\n      /**\n       * 验证字段\n       * @param arr\n       * @param callback\n       */\n      validateFields(arr, callback){\n        let promiseArray = []\n        for(let item of arr){\n          let p = new Promise((resolve, reject) => {\n            this.$refs['form'].validateField(item, (err)=>{\n              if(!err){\n                resolve();\n              }else{\n                reject(err);\n              }\n            })\n          });\n          promiseArray.push(p)\n        }\n        Promise.all(promiseArray).then(()=>{\n          callback()\n        }).catch(err=>{\n          callback(err)\n        })\n      },\n\n\n    }\n\n  }\n</script>\n\n<style scoped>\n.getCaptcha{\n  display: block;\n  width: 100%;\n  height: 40px;\n}\n</style>"]}]}