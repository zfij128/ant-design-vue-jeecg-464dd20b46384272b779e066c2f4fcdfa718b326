{"remainingRequest":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\components\\jeecgbiz\\modal\\JSelectUserByDepModal.vue?vue&type=style&index=0&id=5eaea70a&scoped=true&lang=css&","dependencies":[{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\components\\jeecgbiz\\modal\\JSelectUserByDepModal.vue","mtime":1665386876000},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\css-loader\\index.js","mtime":1665642925383},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1665642924059},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\postcss-loader\\src\\index.js","mtime":1665642925858},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js","mtime":1665642924058}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.ant-table-tbody .ant-table-row td {\n  padding-top: 10px;\n  padding-bottom: 10px;\n}\n\n#components-layout-demo-custom-trigger .trigger {\n  font-size: 18px;\n  line-height: 64px;\n  padding: 0 24px;\n  cursor: pointer;\n  transition: color .3s;\n}\n",{"version":3,"sources":["JSelectUserByDepModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiWA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"JSelectUserByDepModal.vue","sourceRoot":"src/components/jeecgbiz/modal","sourcesContent":["<template>\n  <j-modal\n    :width=\"modalWidth\"\n    :visible=\"visible\"\n    :title=\"title\"\n    switchFullscreen\n    wrapClassName=\"j-user-select-modal\"\n    @ok=\"handleSubmit\"\n    @cancel=\"close\"\n    style=\"top:50px\"\n    cancelText=\"关闭\"\n  >\n    <a-row :gutter=\"10\" style=\"background-color: #ececec; padding: 10px; margin: -10px\">\n      <a-col :md=\"6\" :sm=\"24\">\n        <a-card :bordered=\"false\">\n          <!--组织机构-->\n          <a-directory-tree\n            selectable\n            :selectedKeys=\"selectedDepIds\"\n            :checkStrictly=\"true\"\n            :dropdownStyle=\"{maxHeight:'200px',overflow:'auto'}\"\n            :treeData=\"departTree\"\n            :expandAction=\"false\"\n            @select=\"onDepSelect\"\n            :load-data=\"onLoadDepartment\"\n          />\n        </a-card>\n      </a-col>\n      <a-col :md=\"18\" :sm=\"24\">\n        <a-card :bordered=\"false\">\n          <a-form-model>\n            <a-form-model-item label=\"用户账号\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n              <a-row type=\"flex\" :gutter=\"8\">\n                <a-col :span=\"18\">\n                  <a-input-search\n                      :style=\"{width:'100%'}\"\n                      placeholder=\"请输入账号\"\n                      v-model=\"queryParam.username\"\n                      @search=\"onSearch\"\n                  ></a-input-search>\n                </a-col>\n                <a-col :span=\"6\">\n                  <a-button @click=\"searchReset(1)\" icon=\"redo\">重置</a-button>\n                </a-col>\n              </a-row>\n            </a-form-model-item>\n          </a-form-model>\n          <!--用户列表-->\n          <a-table\n            ref=\"table\"\n            :scroll=\"scrollTrigger\"\n            size=\"middle\"\n            rowKey=\"id\"\n            :columns=\"columns\"\n            :dataSource=\"dataSource\"\n            :pagination=\"ipagination\"\n            :rowSelection=\"{selectedRowKeys: selectedRowKeys, onChange: onSelectChange,type: getType}\"\n            :loading=\"loading\"\n            @change=\"handleTableChange\">\n          </a-table>\n        </a-card>\n      </a-col>\n    </a-row>\n  </j-modal>\n</template>\n\n<script>\n  import { pushIfNotExist, filterObj } from '@/utils/util'\n  import {queryDepartTreeList, getUserList, queryUserByDepId, queryDepartTreeSync} from '@/api/api'\n  import { getAction } from '@/api/manage'\n\n  export default {\n    name: 'JSelectUserByDepModal',\n    components: {},\n    props: ['modalWidth', 'multi', 'userIds', 'store', 'text'],\n    data() {\n      return {\n        queryParam: {\n          username: \"\",\n        },\n        columns: [\n          {\n            title: '用户账号',\n            align: 'center',\n            dataIndex: 'username'\n          },\n          {\n            title: '用户姓名',\n            align: 'center',\n            dataIndex: 'realname'\n          },\n          {\n            title: '性别',\n            align: 'center',\n            dataIndex: 'sex',\n            customRender: function (text) {\n              if (text === 1) {\n                return '男'\n              } else if (text === 2) {\n                return '女'\n              } else {\n                return text\n              }\n            }\n          },\n          {\n            title: '手机',\n            align: 'center',\n            dataIndex: 'phone'\n          },\n          {\n            title: '部门',\n            align: 'center',\n            dataIndex: 'orgCodeTxt'\n          }\n        ],\n        scrollTrigger: {},\n        dataSource: [],\n        selectionRows: [],\n        selectedRowKeys: [],\n        selectUserRows: [],\n        selectUserIds: [],\n        title: '根据部门选择用户',\n        ipagination: {\n          current: 1,\n          pageSize: 10,\n          pageSizeOptions: ['10', '20', '30'],\n          showTotal: (total, range) => {\n            return range[0] + '-' + range[1] + ' 共' + total + '条'\n          },\n          showQuickJumper: true,\n          showSizeChanger: true,\n          total: 0\n        },\n        isorter: {\n          column: 'createTime',\n          order: 'desc'\n        },\n        selectedDepIds: [],\n        departTree: [],\n        visible: false,\n        form: this.$form.createForm(this),\n        loading: false,\n        expandedKeys: [],\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 4 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 10 },\n        },\n      }\n    },\n    computed: {\n      // 计算属性的 getter\n      getType: function () {\n        return this.multi == true ? 'checkbox' : 'radio';\n      }\n    },\n    watch: {\n      userIds: {\n        immediate: true,\n        handler() {\n          this.initUserNames()\n        }\n      },\n    },\n    created() {\n      // 该方法触发屏幕自适应\n      this.resetScreenSize();\n      this.loadData()\n    },\n    methods: {\n      initUserNames() {\n        if (this.userIds) {\n          // 这里最后加一个 , 的原因是因为无论如何都要使用 in 查询，防止后台进行了模糊匹配，导致查询结果不准确\n          let values = this.userIds.split(',') + ','\n          let param = {[this.store]: values}\n          getAction('/sys/user/getMultiUser', param).then((list)=>{\n            this.selectionRows = []\n            let selectedRowKeys = []\n            let textArray = []\n            if(list && list.length>0){\n              for(let user of list){\n                textArray.push(user[this.text])\n                selectedRowKeys.push(user['id'])\n                this.selectionRows.push(user)\n              }\n            }\n            this.selectedRowKeys = selectedRowKeys\n            this.$emit('initComp', textArray.join(','))\n          })\n\n        } else {\n          // JSelectUserByDep组件bug issues/I16634\n          this.$emit('initComp', '')\n          // 前端用户选择单选无法置空的问题 #2610\n          this.selectedRowKeys = []\n        }\n      },\n      async loadData(arg) {\n        if (arg === 1) {\n          this.ipagination.current = 1;\n        }\n        let params = this.getQueryParams()//查询条件\n        this.loading = true\n        getAction('/sys/user/queryUserComponentData', params).then(res=>{\n          if (res.success) {\n            this.dataSource = res.result.records\n            this.ipagination.total = res.result.total\n          }\n        }).finally(() => {\n          this.loading = false\n        })\n      },\n      // 触发屏幕自适应\n      resetScreenSize() {\n        let screenWidth = document.body.clientWidth;\n        if (screenWidth < 500) {\n          this.scrollTrigger = {x: 800};\n        } else {\n          this.scrollTrigger = {};\n        }\n      },\n      showModal() {\n        this.visible = true;\n        this.queryDepartTree();\n        this.initUserNames()\n        this.loadData();\n        this.form.resetFields();\n      },\n      getQueryParams() {\n        let param = Object.assign({}, this.queryParam, this.isorter);\n        param.field = this.getQueryField();\n        param.pageNo = this.ipagination.current;\n        param.pageSize = this.ipagination.pageSize;\n        param.departId = this.selectedDepIds.join(',')\n        return filterObj(param);\n      },\n      getQueryField() {\n        let str = 'id,';\n        for (let a = 0; a < this.columns.length; a++) {\n          str += ',' + this.columns[a].dataIndex;\n        }\n        return str;\n      },\n      searchReset(num) {\n        let that = this;\n        that.selectedRowKeys = [];\n        that.selectUserIds = [];\n        that.selectedDepIds = [];\n        if (num !== 0) {\n          that.queryParam = {};\n          that.loadData(1);\n        }\n      },\n      close() {\n        this.searchReset(0);\n        this.visible = false;\n      },\n      handleTableChange(pagination, filters, sorter) {\n        //TODO 筛选\n        if (Object.keys(sorter).length > 0) {\n          this.isorter.column = sorter.field;\n          this.isorter.order = 'ascend' === sorter.order ? 'asc' : 'desc';\n        }\n        this.ipagination = pagination;\n        this.loadData();\n      },\n      handleSubmit() {\n        let that = this;\n        this.getSelectUserRows();\n        that.$emit('ok', that.selectUserRows);\n        that.searchReset(0)\n        that.close();\n      },\n      //获取选择用户信息\n      getSelectUserRows() {\n        this.selectUserRows = []\n        for (let row of this.selectionRows) {\n          if (this.selectedRowKeys.includes(row.id)) {\n            this.selectUserRows.push(row)\n          }\n        }\n        this.selectUserIds = this.selectUserRows.map(row => row.username).join(',')\n      },\n      // 点击树节点,筛选出对应的用户\n      onDepSelect(selectedDepIds) {\n        if (selectedDepIds[0] != null) {\n          if (this.selectedDepIds[0] !== selectedDepIds[0]) {\n            this.selectedDepIds = [selectedDepIds[0]];\n          }\n          this.loadData(1);\n        }\n      },\n      onSelectChange(selectedRowKeys, selectionRows) {\n        this.selectedRowKeys = selectedRowKeys;\n        selectionRows.forEach(row => pushIfNotExist(this.selectionRows, row, 'id'))\n      },\n      onSearch() {\n        this.loadData(1);\n      },\n      // 根据选择的id来查询用户信息\n      initQueryUserByDepId(selectedDepIds) {\n        this.loading = true\n        return queryUserByDepId({id: selectedDepIds.toString()}).then((res) => {\n          if (res.success) {\n            this.dataSource = res.result;\n            this.ipagination.total = res.result.length;\n          }\n        }).finally(() => {\n          this.loading = false\n        })\n      },\n      queryDepartTree() {\n        //update-begin-author:taoyan date:20211202 for: 异步加载部门树 https://github.com/jeecgboot/jeecg-boot/issues/3196\n        this.expandedKeys = []\n        this.departTree = []\n        queryDepartTreeSync().then((res) => {\n          if (res.success) {\n            for (let i = 0; i < res.result.length; i++) {\n              let temp = res.result[i]\n              this.departTree.push(temp)\n            }\n          }\n        })\n      },\n      onLoadDepartment(treeNode){\n        return new Promise(resolve => {\n          queryDepartTreeSync({pid:treeNode.dataRef.id}).then((res) =>  {\n            if (res.success) {\n              //判断chidlren是否为空，并修改isLeaf属性值\n              if(res.result.length == 0){\n                treeNode.dataRef['isLeaf']=true\n                return;\n              }else{\n                treeNode.dataRef['children']= res.result;\n              }\n            }\n          })\n          resolve();\n        });\n      },\n      //update-end-author:taoyan date:20211202 for: 异步加载部门树 https://github.com/jeecgboot/jeecg-boot/issues/3196\n      modalFormOk() {\n        this.loadData();\n      }\n    }\n  }\n</script>\n\n<style scoped>\n  .ant-table-tbody .ant-table-row td {\n    padding-top: 10px;\n    padding-bottom: 10px;\n  }\n\n  #components-layout-demo-custom-trigger .trigger {\n    font-size: 18px;\n    line-height: 64px;\n    padding: 0 24px;\n    cursor: pointer;\n    transition: color .3s;\n  }\n</style>\n"]}]}