{"remainingRequest":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\components\\dict\\JMultiSelectTag.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\components\\dict\\JMultiSelectTag.vue","mtime":1665386876000},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\babel-loader\\lib\\index.js","mtime":1665642924601},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js","mtime":1665642924058}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {ajaxGetDictItems,getDictItemsFromCache} from '@/api/api'\nexport default {\n  name: 'JMultiSelectTag',\n  props: {\n    dictCode: String,\n    placeholder: String,\n    disabled: Boolean,\n    value: String,\n    type: String,\n    options:Array,\n    spliter:{\n      type: String,\n      required: false,\n      default: ','\n    },\n    popContainer:{\n      type:String,\n      default:'',\n      required:false\n    },\n  },\n  data() {\n    return {\n      dictOptions: [],\n      tagType:\"\",\n      arrayValue:!this.value?[]:this.value.split(this.spliter)\n    }\n  },\n  created() {\n    if(!this.type || this.type===\"list_multi\"){\n      this.tagType = \"select\"\n    }else{\n      this.tagType = this.type\n    }\n    //获取字典数据\n    //this.initDictData();\n  },\n  watch:{\n    options: function(val){\n      this.setCurrentDictOptions(val);\n    },\n    dictCode:{\n      immediate:true,\n      handler() {\n        this.initDictData()\n      },\n    },\n    value (val) {\n      if(!val){\n        this.arrayValue = []\n      }else{\n        this.arrayValue = this.value.split(this.spliter)\n      }\n    }\n  },\n  methods: {\n    initDictData() {\n      if(this.options && this.options.length>0){\n        this.dictOptions = [...this.options]\n      }else{\n        //优先从缓存中读取字典配置\n        let cacheOption = getDictItemsFromCache(this.dictCode)\n        if(cacheOption && cacheOption.length>0){\n          this.dictOptions = cacheOption\n          return\n        }\n        //根据字典Code, 初始化字典数组\n        ajaxGetDictItems(this.dictCode, null).then((res) => {\n          if (res.success) {\n            this.dictOptions = res.result;\n          }\n        })\n      }\n\n    },\n    onChange (selectedValue) {\n      this.$emit('change', selectedValue.join(this.spliter));\n    },\n    setCurrentDictOptions(dictOptions){\n      this.dictOptions = dictOptions\n    },\n    getCurrentDictOptions(){\n      return this.dictOptions\n    },\n    getParentContainer(node){\n      if(!this.popContainer){\n        return node.parentNode\n      }else{\n        return document.querySelector(this.popContainer)\n      }\n    },\n    // update--begin--autor:lvdandan-----date:20201120------for：LOWCOD-1086 下拉多选框,搜索时只字典code进行搜索不能通过字典text搜索\n    filterOption(input, option) {\n      return option.componentOptions.children[0].children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\n    }\n    // update--end--autor:lvdandan-----date:20201120------for：LOWCOD-1086 下拉多选框,搜索时只字典code进行搜索不能通过字典text搜索\n  },\n  model: {\n    prop: 'value',\n    event: 'change'\n  }\n}\n",{"version":3,"sources":["JMultiSelectTag.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"JMultiSelectTag.vue","sourceRoot":"src/components/dict","sourcesContent":["<template>\n  <a-checkbox-group v-if=\"tagType=='checkbox'\" @change=\"onChange\" :value=\"arrayValue\" :disabled=\"disabled\">\n    <a-checkbox v-for=\"(item, key) in dictOptions\" :key=\"key\" :value=\"item.value\">{{ item.text || item.label }}</a-checkbox>\n  </a-checkbox-group>\n\n  <a-select\n    v-else-if=\"tagType=='select'\"\n    :value=\"arrayValue\"\n    @change=\"onChange\"\n    :disabled=\"disabled\"\n    mode=\"multiple\"\n    :placeholder=\"placeholder\"\n    :getPopupContainer=\"getParentContainer\"\n    optionFilterProp=\"children\"\n    :filterOption=\"filterOption\"\n    allowClear>\n    <a-select-option\n      v-for=\"(item,index) in dictOptions\"\n      :key=\"index\"\n      :value=\"item.value\">\n      <span style=\"display: inline-block;width: 100%\" :title=\" item.text || item.label \">\n        {{ item.text || item.label }}\n      </span>\n    </a-select-option>\n  </a-select>\n\n</template>\n\n<script>\n  import {ajaxGetDictItems,getDictItemsFromCache} from '@/api/api'\n  export default {\n    name: 'JMultiSelectTag',\n    props: {\n      dictCode: String,\n      placeholder: String,\n      disabled: Boolean,\n      value: String,\n      type: String,\n      options:Array,\n      spliter:{\n        type: String,\n        required: false,\n        default: ','\n      },\n      popContainer:{\n        type:String,\n        default:'',\n        required:false\n      },\n    },\n    data() {\n      return {\n        dictOptions: [],\n        tagType:\"\",\n        arrayValue:!this.value?[]:this.value.split(this.spliter)\n      }\n    },\n    created() {\n      if(!this.type || this.type===\"list_multi\"){\n        this.tagType = \"select\"\n      }else{\n        this.tagType = this.type\n      }\n      //获取字典数据\n      //this.initDictData();\n    },\n    watch:{\n      options: function(val){\n        this.setCurrentDictOptions(val);\n      },\n      dictCode:{\n        immediate:true,\n        handler() {\n          this.initDictData()\n        },\n      },\n      value (val) {\n        if(!val){\n          this.arrayValue = []\n        }else{\n          this.arrayValue = this.value.split(this.spliter)\n        }\n      }\n    },\n    methods: {\n      initDictData() {\n        if(this.options && this.options.length>0){\n          this.dictOptions = [...this.options]\n        }else{\n          //优先从缓存中读取字典配置\n          let cacheOption = getDictItemsFromCache(this.dictCode)\n          if(cacheOption && cacheOption.length>0){\n            this.dictOptions = cacheOption\n            return\n          }\n          //根据字典Code, 初始化字典数组\n          ajaxGetDictItems(this.dictCode, null).then((res) => {\n            if (res.success) {\n              this.dictOptions = res.result;\n            }\n          })\n        }\n\n      },\n      onChange (selectedValue) {\n        this.$emit('change', selectedValue.join(this.spliter));\n      },\n      setCurrentDictOptions(dictOptions){\n        this.dictOptions = dictOptions\n      },\n      getCurrentDictOptions(){\n        return this.dictOptions\n      },\n      getParentContainer(node){\n        if(!this.popContainer){\n          return node.parentNode\n        }else{\n          return document.querySelector(this.popContainer)\n        }\n      },\n      // update--begin--autor:lvdandan-----date:20201120------for：LOWCOD-1086 下拉多选框,搜索时只字典code进行搜索不能通过字典text搜索\n      filterOption(input, option) {\n        return option.componentOptions.children[0].children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      }\n      // update--end--autor:lvdandan-----date:20201120------for：LOWCOD-1086 下拉多选框,搜索时只字典code进行搜索不能通过字典text搜索\n    },\n    model: {\n      prop: 'value',\n      event: 'change'\n    }\n  }\n</script>\n"]}]}