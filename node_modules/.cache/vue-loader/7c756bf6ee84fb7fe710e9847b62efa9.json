{"remainingRequest":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\components\\jeecg\\JModal\\JPrompt.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\components\\jeecg\\JModal\\JPrompt.vue","mtime":1665386876000},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\babel-loader\\lib\\index.js","mtime":1665642924601},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js","mtime":1665642924058}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport pick from 'lodash.pick'\n\nexport default {\n  name: 'JPrompt',\n  data() {\n    return {\n      visible: false,\n      loading: false,\n      content: '',\n      // 弹窗参数\n      modalProps: {\n        title: '',\n      },\n      inputProps: {\n        placeholder: '',\n      },\n      // form model\n      model: {\n        input: '',\n      },\n      // 校验\n      rule: [],\n      // 回调函数\n      callback: {},\n    }\n  },\n  computed: {\n    rules() {\n      return {\n        input: this.rule\n      }\n    },\n  },\n  methods: {\n    show(options) {\n      this.content = options.content\n      if (Array.isArray(options.rule)) {\n        this.rule = options.rule\n      }\n      if (options.defaultValue != null) {\n        this.model.input = options.defaultValue\n      }\n      // 取出常用的弹窗参数\n      let pickModalProps = pick(options, 'title', 'centered', 'cancelText', 'closable', 'mask', 'maskClosable', 'okText', 'okType', 'okButtonProps', 'cancelButtonProps', 'width', 'wrapClassName', 'zIndex', 'dialogStyle', 'dialogClass')\n      this.modalProps = Object.assign({}, pickModalProps, options.modalProps)\n      // 取出常用的input参数\n      let pickInputProps = pick(options, 'placeholder', 'allowClear')\n      this.inputProps = Object.assign({}, pickInputProps, options.inputProps)\n      // 回调函数\n      this.callback = pick(options, 'onOk', 'onOkAsync', 'onCancel')\n      this.visible = true\n      this.$nextTick(() => this.$refs.input.focus())\n    },\n\n    onOk() {\n      this.$refs.form.validate((ok, err) => {\n        if (ok) {\n          let event = {value: this.model.input, target: this}\n          // 异步方法优先级高于同步方法\n          if (typeof this.callback.onOkAsync === 'function') {\n            this.callback.onOkAsync(event)\n          } else if (typeof this.callback.onOk === 'function') {\n            this.callback.onOk(event)\n            this.close()\n          } else {\n            this.close()\n          }\n        }\n      })\n    },\n    onCancel() {\n      if (typeof this.callback.onCancel === 'function') {\n        this.callback.onCancel(this.model.input)\n      }\n      this.close()\n    },\n\n    onInputPressEnter() {\n      this.onOk()\n    },\n\n    close() {\n      this.visible = this.loading ? this.visible : false\n    },\n\n    forceClose() {\n      this.visible = false\n    },\n\n    showLoading() {\n      this.loading = true\n    },\n    hideLoading() {\n      this.loading = false\n    },\n\n    afterClose(e) {\n      if (typeof this.modalProps.afterClose === 'function') {\n        this.modalProps.afterClose(e)\n      }\n      this.$emit('after-close', e)\n    },\n\n  },\n}\n",{"version":3,"sources":["JPrompt.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"JPrompt.vue","sourceRoot":"src/components/jeecg/JModal","sourcesContent":["<template>\n  <j-modal :visible=\"visible\" :confirmLoading=\"loading\" :after-close=\"afterClose\" v-bind=\"modalProps\" @ok=\"onOk\" @cancel=\"onCancel\">\n    <a-spin :spinning=\"loading\">\n      <div v-html=\"content\"></div>\n      <a-form-model ref=\"form\" :model=\"model\" :rules=\"rules\">\n        <a-form-model-item prop=\"input\">\n          <a-input ref=\"input\" v-model=\"model.input\" v-bind=\"inputProps\" @pressEnter=\"onInputPressEnter\"/>\n        </a-form-model-item>\n      </a-form-model>\n    </a-spin>\n  </j-modal>\n</template>\n\n<script>\nimport pick from 'lodash.pick'\n\nexport default {\n  name: 'JPrompt',\n  data() {\n    return {\n      visible: false,\n      loading: false,\n      content: '',\n      // 弹窗参数\n      modalProps: {\n        title: '',\n      },\n      inputProps: {\n        placeholder: '',\n      },\n      // form model\n      model: {\n        input: '',\n      },\n      // 校验\n      rule: [],\n      // 回调函数\n      callback: {},\n    }\n  },\n  computed: {\n    rules() {\n      return {\n        input: this.rule\n      }\n    },\n  },\n  methods: {\n    show(options) {\n      this.content = options.content\n      if (Array.isArray(options.rule)) {\n        this.rule = options.rule\n      }\n      if (options.defaultValue != null) {\n        this.model.input = options.defaultValue\n      }\n      // 取出常用的弹窗参数\n      let pickModalProps = pick(options, 'title', 'centered', 'cancelText', 'closable', 'mask', 'maskClosable', 'okText', 'okType', 'okButtonProps', 'cancelButtonProps', 'width', 'wrapClassName', 'zIndex', 'dialogStyle', 'dialogClass')\n      this.modalProps = Object.assign({}, pickModalProps, options.modalProps)\n      // 取出常用的input参数\n      let pickInputProps = pick(options, 'placeholder', 'allowClear')\n      this.inputProps = Object.assign({}, pickInputProps, options.inputProps)\n      // 回调函数\n      this.callback = pick(options, 'onOk', 'onOkAsync', 'onCancel')\n      this.visible = true\n      this.$nextTick(() => this.$refs.input.focus())\n    },\n\n    onOk() {\n      this.$refs.form.validate((ok, err) => {\n        if (ok) {\n          let event = {value: this.model.input, target: this}\n          // 异步方法优先级高于同步方法\n          if (typeof this.callback.onOkAsync === 'function') {\n            this.callback.onOkAsync(event)\n          } else if (typeof this.callback.onOk === 'function') {\n            this.callback.onOk(event)\n            this.close()\n          } else {\n            this.close()\n          }\n        }\n      })\n    },\n    onCancel() {\n      if (typeof this.callback.onCancel === 'function') {\n        this.callback.onCancel(this.model.input)\n      }\n      this.close()\n    },\n\n    onInputPressEnter() {\n      this.onOk()\n    },\n\n    close() {\n      this.visible = this.loading ? this.visible : false\n    },\n\n    forceClose() {\n      this.visible = false\n    },\n\n    showLoading() {\n      this.loading = true\n    },\n    hideLoading() {\n      this.loading = false\n    },\n\n    afterClose(e) {\n      if (typeof this.modalProps.afterClose === 'function') {\n        this.modalProps.afterClose(e)\n      }\n      this.$emit('after-close', e)\n    },\n\n  },\n}\n</script>\n\n<style scoped>\n\n</style>"]}]}