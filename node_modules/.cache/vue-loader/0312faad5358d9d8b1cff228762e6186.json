{"remainingRequest":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\components\\jeecg\\JVxeTable\\components\\cells\\JVxeCheckboxCell.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\components\\jeecg\\JVxeTable\\components\\cells\\JVxeCheckboxCell.vue","mtime":1665386876000},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\css-loader\\index.js","mtime":1665642925383},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1665642924059},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\postcss-loader\\src\\index.js","mtime":1665642925858},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\less-loader\\dist\\cjs.js","mtime":1665642924256},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js","mtime":1665642924058}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// 关闭动画，防止滚动时动态赋值出现问题\n.j-vxe-checkbox.no-animation {\n  .ant-checkbox-inner,\n  .ant-checkbox-inner::after {\n    transition: none !important;\n  }\n}\n",{"version":3,"sources":["JVxeCheckboxCell.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+FA;AACA;AACA;AACA;AACA;AACA;AACA","file":"JVxeCheckboxCell.vue","sourceRoot":"src/components/jeecg/JVxeTable/components/cells","sourcesContent":["<template>\n  <div :class=\"clazz\" :style=\"boxStyle\">\n    <a-checkbox\n      ref=\"checkbox\"\n      :checked=\"innerValue\"\n      v-bind=\"cellProps\"\n      @change=\"handleChange\"\n    />\n  </div>\n</template>\n\n<script>\n  import { neverNull } from '@/utils/util'\n  import JVxeCellMixins from '@/components/jeecg/JVxeTable/mixins/JVxeCellMixins'\n\n  export default {\n    name: 'JVxeCheckboxCell',\n    mixins: [JVxeCellMixins],\n    props: {},\n    computed: {\n      bordered() {\n        return !!this.renderOptions.bordered\n      },\n      scrolling() {\n        return !!this.renderOptions.scrolling\n      },\n      clazz() {\n        return {\n          'j-vxe-checkbox': true,\n          'no-animation': this.scrolling\n        }\n      },\n      boxStyle() {\n        const style = {}\n        // 如果有边框且未设置align属性，就强制居中\n        if (this.bordered && !this.originColumn.align) {\n          style['text-align'] = 'center'\n        }\n        return style\n      },\n    },\n    methods: {\n      handleChange(event) {\n        this.handleChangeCommon(event.target.checked)\n      },\n    },\n    // 【组件增强】注释详见：JVxeCellMixins.js\n    enhanced: {\n      switches: {\n        visible: true,\n      },\n      getValue(value) {\n        let {own: col} = this.column\n        // 处理 customValue\n        if (Array.isArray(col.customValue)) {\n          let customValue = getCustomValue(col)\n          if (typeof value === 'boolean') {\n            return value ? customValue[0] : customValue[1]\n          } else {\n            return value\n          }\n        } else {\n          return value\n        }\n      },\n      setValue(value) {\n        let {own: col} = this.column\n        // 判断是否设定了customValue（自定义值）\n        if (Array.isArray(col.customValue)) {\n          let customValue = getCustomValue(col)\n          return neverNull(value).toString() === customValue[0].toString()\n        } else {\n          return !!value\n        }\n      },\n      createValue({column}) {\n        let {own: col} = column\n        if (Array.isArray(col.customValue)) {\n          let customValue = getCustomValue(col)\n          return col.defaultChecked ? customValue[0] : customValue[1]\n        } else {\n          return !!col.defaultChecked\n        }\n      },\n    }\n  }\n\n  function getCustomValue(col) {\n    let customTrue = neverNull(col.customValue[0], true)\n    let customFalse = neverNull(col.customValue[1], false)\n    return [customTrue, customFalse]\n  }\n</script>\n\n<style lang=\"less\">\n  // 关闭动画，防止滚动时动态赋值出现问题\n  .j-vxe-checkbox.no-animation {\n    .ant-checkbox-inner,\n    .ant-checkbox-inner::after {\n      transition: none !important;\n    }\n  }\n</style>"]}]}