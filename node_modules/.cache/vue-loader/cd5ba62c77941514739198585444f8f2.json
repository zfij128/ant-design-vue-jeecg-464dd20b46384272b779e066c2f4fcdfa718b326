{"remainingRequest":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\components\\jeecg\\JSelectMultiple.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\components\\jeecg\\JSelectMultiple.vue","mtime":1665386876000},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\babel-loader\\lib\\index.js","mtime":1665642924601},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js","mtime":1665642924058}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n//option {label:,value:}\nimport { getAction } from '@api/manage'\n\nexport default {\n  name: 'JSelectMultiple',\n  props: {\n    placeholder:{\n      type: String,\n      default:'',\n      required: false\n    },\n    value:{\n      type: String,\n      required: false\n    },\n    readOnly:{\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    options:{\n      type: Array,\n      default:()=>[],\n      required: false\n    },\n    triggerChange:{\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    spliter:{\n      type: String,\n      required: false,\n      default: ','\n    },\n    popContainer:{\n      type:String,\n      default:'',\n      required:false\n    },\n    dictCode:{\n      type:String,\n      required:false\n    },\n  },\n  data(){\n    return {\n      arrayValue:!this.value?[]:this.value.split(this.spliter),\n      dictOptions: [],\n    }\n  },\n  computed:{\n    selectOptions(){\n      return this.dictOptions.length > 0 ? this.dictOptions : this.options\n    },\n  },\n  watch:{\n    value (val) {\n      if(!val){\n        this.arrayValue = []\n      }else{\n        this.arrayValue = this.value.split(this.spliter)\n      }\n    }\n  },\n  mounted(){\n    if (this.dictCode) {\n      this.loadDictOptions()\n    }\n  },\n  methods:{\n    onChange (selectedValue) {\n      if(this.triggerChange){\n        this.$emit('change', selectedValue.join(this.spliter));\n      }else{\n        this.$emit('input', selectedValue.join(this.spliter));\n      }\n    },\n    getParentContainer(node){\n      if(!this.popContainer){\n        return node.parentNode\n      }else{\n        return document.querySelector(this.popContainer)\n      }\n    },\n    // 根据字典code查询字典项\n    loadDictOptions(){\n      getAction(`/sys/dict/getDictItems/${this.dictCode}`,{}).then(res=>{\n        if (res.success) {\n          this.dictOptions = res.result.map(item => ({value: item.value, label: item.text}))\n        } else {\n          console.error('getDictItems error: : ', res)\n          this.dictOptions = []\n        }\n      })\n    },\n  },\n\n}\n",{"version":3,"sources":["JSelectMultiple.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"JSelectMultiple.vue","sourceRoot":"src/components/jeecg","sourcesContent":["<template>\n  <a-select :value=\"arrayValue\" @change=\"onChange\" mode=\"multiple\" :placeholder=\"placeholder\" allowClear>\n    <a-select-option\n      v-for=\"(item,index) in selectOptions\"\n      :key=\"index\"\n      :getPopupContainer=\"getParentContainer\"\n      :value=\"item.value\">\n      {{ item.text || item.label }}\n    </a-select-option>\n  </a-select>\n</template>\n\n<script>\n  //option {label:,value:}\n  import { getAction } from '@api/manage'\n\n  export default {\n    name: 'JSelectMultiple',\n    props: {\n      placeholder:{\n        type: String,\n        default:'',\n        required: false\n      },\n      value:{\n        type: String,\n        required: false\n      },\n      readOnly:{\n        type: Boolean,\n        required: false,\n        default: false\n      },\n      options:{\n        type: Array,\n        default:()=>[],\n        required: false\n      },\n      triggerChange:{\n        type: Boolean,\n        required: false,\n        default: false\n      },\n      spliter:{\n        type: String,\n        required: false,\n        default: ','\n      },\n      popContainer:{\n        type:String,\n        default:'',\n        required:false\n      },\n      dictCode:{\n        type:String,\n        required:false\n      },\n    },\n    data(){\n      return {\n        arrayValue:!this.value?[]:this.value.split(this.spliter),\n        dictOptions: [],\n      }\n    },\n    computed:{\n      selectOptions(){\n        return this.dictOptions.length > 0 ? this.dictOptions : this.options\n      },\n    },\n    watch:{\n      value (val) {\n        if(!val){\n          this.arrayValue = []\n        }else{\n          this.arrayValue = this.value.split(this.spliter)\n        }\n      }\n    },\n    mounted(){\n      if (this.dictCode) {\n        this.loadDictOptions()\n      }\n    },\n    methods:{\n      onChange (selectedValue) {\n        if(this.triggerChange){\n          this.$emit('change', selectedValue.join(this.spliter));\n        }else{\n          this.$emit('input', selectedValue.join(this.spliter));\n        }\n      },\n      getParentContainer(node){\n        if(!this.popContainer){\n          return node.parentNode\n        }else{\n          return document.querySelector(this.popContainer)\n        }\n      },\n      // 根据字典code查询字典项\n      loadDictOptions(){\n        getAction(`/sys/dict/getDictItems/${this.dictCode}`,{}).then(res=>{\n          if (res.success) {\n            this.dictOptions = res.result.map(item => ({value: item.value, label: item.text}))\n          } else {\n            console.error('getDictItems error: : ', res)\n            this.dictOptions = []\n          }\n        })\n      },\n    },\n\n  }\n</script>\n"]}]}