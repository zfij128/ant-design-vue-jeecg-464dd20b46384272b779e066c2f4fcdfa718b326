{"remainingRequest":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\views\\jeecg\\helloworld.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\views\\jeecg\\helloworld.vue","mtime":1665386876000},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\babel-loader\\lib\\index.js","mtime":1665642924601},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js","mtime":1665642924058}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getAction } from '@/api/manage'\nexport default {\n  props: ['sex','name'],\n  data () {\n    return {\n      formLayout: 'horizontal',\n      model: {},\n      rules: {\n        note: [{required: true, message: 'Please input your note!'}],\n        gender:[{ required: true, message: 'Please select your gender!' }]\n      },\n      areaOptions:[]\n    }\n  },\n  methods: {\n    handleSubmit (e) {\n      e.preventDefault()\n      this.$refs.form.validate((ok, err) => {\n        if (ok) {\n          console.log('Received values of form: ', this.model)\n          this.$message.success('succeed!')\n        }\n      })\n    },\n    handleSelectChange (value) {\n      console.log(value)\n      this.model.note = `Hi, ${value === 'male' ? 'man' : 'lady'}!`\n    },\n    onChange(value, selectedOptions) {\n      console.log(value, selectedOptions);\n    },\n    filter(inputValue, path) {\n      return (path.some(option => (option.label).toLowerCase().indexOf(inputValue.toLowerCase()) > -1));\n    },\n  },\n  created (){\n    console.log('============= online href common props ============= ');\n    console.log('props sex: ',this.sex);\n    console.log('props name: ',this.name);\n\n    getAction('/mock/api/area').then((res) => {\n        console.log(\"------------\")\n        console.log(res)\n        this.areaOptions = res;\n    })\n  },\n  watch: {\n    $route: {\n      immediate: true,\n      handler() {\n        console.log('============= online href  $route props ============= ');\n        let sex = this.$route.query.sex\n        console.log('$route sex: ', sex);\n      }\n    }\n  },\n}\n",{"version":3,"sources":["helloworld.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"helloworld.vue","sourceRoot":"src/views/jeecg","sourcesContent":["<template>\n  <a-card :bordered=\"false\">\n    <a-form-model ref=\"form\" :model=\"model\" :rules=\"rules\" @submit=\"handleSubmit\">\n      <a-row>\n      <a-col :md=\"24\" :sm=\"24\">\n      <a-form-model-item label=\"Note\" prop=\"note\" :labelCol=\"{ span: 7 }\" :wrapperCol=\"{ span: 15 }\">\n        <a-input v-model=\"model.note\"/>\n      </a-form-model-item>\n      </a-col>\n      </a-row>\n      <a-row>\n      <a-col :md=\"24\" :sm=\"24\">\n      <a-form-model-item label=\"Gender\" prop=\"gender\" :labelCol=\"{ span: 7 }\" :wrapperCol=\"{ span: 15 }\">\n        <a-select v-model=\"model.gender\" placeholder=\"Select a option and change input text above\" @change=\"handleSelectChange\">\n          <a-select-option value=\"male\">male</a-select-option>\n          <a-select-option value=\"female\">female</a-select-option>\n        </a-select>\n      </a-form-model-item>\n      </a-col>\n      </a-row>\n      <a-row>\n      <a-col :md=\"24\" :sm=\"24\">\n      <a-form-model-item label=\"Gender\" prop=\"cascader\" :labelCol=\"{ span: 7 }\" :wrapperCol=\"{ span: 15 }\">\n        <a-cascader :options=\"areaOptions\" @change=\"onChange\" :showSearch=\"{filter}\" placeholder=\"Please select\" />\n      </a-form-model-item>\n      </a-col>\n      </a-row>\n      <a-form-model-item :wrapperCol=\"{ span: 12, offset: 5 }\">\n        <a-col :md=\"24\" :sm=\"24\">\n          <a-form-model-item :wrapperCol=\"{ span: 12, offset: 5 }\">\n            <a-button type=\"primary\" htmlType=\"submit\">Submit</a-button>\n          </a-form-model-item>\n        </a-col>\n      </a-form-model-item>\n    </a-form-model>\n  </a-card>\n</template>\n\n<script>\n  import { getAction } from '@/api/manage'\n  export default {\n    props: ['sex','name'],\n    data () {\n      return {\n        formLayout: 'horizontal',\n        model: {},\n        rules: {\n          note: [{required: true, message: 'Please input your note!'}],\n          gender:[{ required: true, message: 'Please select your gender!' }]\n        },\n        areaOptions:[]\n      }\n    },\n    methods: {\n      handleSubmit (e) {\n        e.preventDefault()\n        this.$refs.form.validate((ok, err) => {\n          if (ok) {\n            console.log('Received values of form: ', this.model)\n            this.$message.success('succeed!')\n          }\n        })\n      },\n      handleSelectChange (value) {\n        console.log(value)\n        this.model.note = `Hi, ${value === 'male' ? 'man' : 'lady'}!`\n      },\n      onChange(value, selectedOptions) {\n        console.log(value, selectedOptions);\n      },\n      filter(inputValue, path) {\n        return (path.some(option => (option.label).toLowerCase().indexOf(inputValue.toLowerCase()) > -1));\n      },\n    },\n    created (){\n      console.log('============= online href common props ============= ');\n      console.log('props sex: ',this.sex);\n      console.log('props name: ',this.name);\n\n      getAction('/mock/api/area').then((res) => {\n          console.log(\"------------\")\n          console.log(res)\n          this.areaOptions = res;\n      })\n    },\n    watch: {\n      $route: {\n        immediate: true,\n        handler() {\n          console.log('============= online href  $route props ============= ');\n          let sex = this.$route.query.sex\n          console.log('$route sex: ', sex);\n        }\n      }\n    },\n  }\n</script>"]}]}