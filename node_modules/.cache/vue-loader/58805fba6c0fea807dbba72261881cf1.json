{"remainingRequest":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\views\\jeecg\\ThirdAppMessageTest.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\views\\jeecg\\ThirdAppMessageTest.vue","mtime":1665386876000},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\babel-loader\\lib\\index.js","mtime":1665642924601},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js","mtime":1665642924058}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { loadEnabledTypes } from '@/components/jeecgbiz/thirdApp/JThirdAppButton'\nimport { postAction } from '@/api/manage'\nimport { randomUUID } from '@/utils/util'\n\nexport default {\n  name: 'ThirdAppMessageTest',\n  data() {\n    return {\n      loading: false,\n      labelCol: {span: 6},\n      wrapperCol: {span: 12},\n      model: {\n        sendAll: false,\n      },\n      enabledTypes: {},\n      columns: [\n        {\n          title: '#',\n          dataIndex: '',\n          key: 'rowIndex',\n          width: 60,\n          align: 'center',\n          customRender: (t, r, index) => {\n            return this.dataSource.length - index\n          }\n        },\n        {\n          title: '测试APP',\n          align: 'center',\n          dataIndex: 'app',\n          customRender: (t, r, index) => {\n            if (t === 'WECHAT_ENTERPRISE') {\n              return '企业微信'\n            }\n            if (t === 'DINGTALK') {\n              return '钉钉'\n            } else {\n              return t\n            }\n          }\n        },\n        {\n          title: '接收人',\n          align: 'center',\n          dataIndex: 'receiver',\n          customRender: (t, r, index) => {\n            return r.sendAll ? '【全体】' : t\n          }\n        },\n        {\n          title: '消息内容',\n          align: 'center',\n          dataIndex: 'content'\n        },\n        {\n          title: 'response',\n          align: 'center',\n          dataIndex: 'response'\n        },\n        {\n          title: '操作',\n          dataIndex: 'action',\n          align: 'center',\n          fixed: 'right',\n          width: 80,\n          scopedSlots: {customRender: 'action'}\n        }\n      ],\n      dataSource: [],\n    }\n  },\n  computed: {\n    rules() {\n      return {\n        app: [{required: true, message: '请选择测试APP'}],\n        url: [{required: this.show, message: '请输入菜单路径!'}],\n        receiver: [{required: !this.model.sendAll, message: '请选择接收人'}],\n        content: [{required: true, message: '消息内容不能为空'}]\n      }\n    },\n    appOptions() {\n      return [\n        {\n          label: `企业微信${this.enabledTypes.wechatEnterprise ? '' : '（已禁用）'}`,\n          value: 'WECHAT_ENTERPRISE',\n          disabled: !this.enabledTypes.wechatEnterprise\n        },\n        {\n          label: `钉钉${this.enabledTypes.dingtalk ? '' : '（已禁用）'}`,\n          value: 'DINGTALK',\n          disabled: !this.enabledTypes.dingtalk\n        },\n      ]\n    },\n  },\n  created() {\n    this.loadEnabledTypes()\n  },\n  methods: {\n\n    // 获取启用的第三方App\n    async loadEnabledTypes() {\n      this.enabledTypes = await loadEnabledTypes()\n    },\n\n    onSendAllChange() {\n      this.$refs.form.clearValidate('receiver')\n    },\n\n    onSend() {\n      this.$refs.form.validate((ok, err) => {\n        if (ok) {\n          this.loading = true\n          postAction('/sys/thirdApp/sendMessageTest', this.model).then(({success, result, message}) => {\n            if (success) {\n              let response = ''\n              try {\n                response = JSON.stringify(result)\n              } catch (e) {\n                response = result\n              }\n              this.dataSource.unshift(Object.assign({id: randomUUID()}, this.model, {response}))\n            } else {\n              this.$message.warning(message)\n            }\n          }).finally(() => this.loading = false)\n        }\n      })\n    },\n\n    handleRecall(record) {\n      try {\n        let response = JSON.parse(record.response)\n        postAction('/sys/thirdApp/recallMessageTest', {\n          app: record.app,\n          msg_task_id: response.result\n        }).then(res => {\n          if (res.success) {\n            this.$set(record, 'recalled', true)\n            this.$message.success(res.message)\n          } else {\n            this.$message.warning(res.message)\n          }\n        }).catch(e => this.$message.warning(e.message || e))\n      } catch (e) {\n        this.$message.warning(e.message || e)\n      }\n    },\n\n  },\n}\n",{"version":3,"sources":["ThirdAppMessageTest.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"ThirdAppMessageTest.vue","sourceRoot":"src/views/jeecg","sourcesContent":["<template>\n  <a-card :bordered=\"false\">\n    <a-spin :spinning=\"loading\">\n      <a-form-model ref=\"form\" :model=\"model\" :rules=\"rules\">\n        <a-tabs>\n          <a-tab-pane tab=\"消息选项\" key=\"1\">\n            <a-form-model-item label=\"测试APP\" prop=\"app\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n              <a-select v-model=\"model.app\" placeholder=\"请选择测试APP\" :options=\"appOptions\"/>\n            </a-form-model-item>\n            <a-form-model-item label=\"发送给所有人\" prop=\"sendAll\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n              <a-switch checkedChildren=\"是\" unCheckedChildren=\"否\" v-model=\"model.sendAll\" @change=\"onSendAllChange\"/>\n            </a-form-model-item>\n            <a-form-model-item label=\"接收人\" prop=\"receiver\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n              <j-select-multi-user v-model=\"model.receiver\" :disabled=\"model.sendAll\" placeholder=\"请选择接收人\"/>\n            </a-form-model-item>\n            <a-form-model-item label=\"消息内容\" prop=\"content\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n              <a-textarea :rows=\"5\" v-model=\"model.content\" placeholder=\"请输入消息内容\"/>\n            </a-form-model-item>\n            <div style=\"text-align: center;\">\n              <a-button type=\"primary\" size=\"large\" @click=\"onSend\" style=\"width: 120px;\">发送</a-button>\n            </div>\n          </a-tab-pane>\n        </a-tabs>\n\n        <a-tabs>\n          <a-tab-pane tab=\"测试结果（刷新自动清空）\" key=\"1\">\n            <a-table\n              rowKey=\"id\"\n              bordered\n              size=\"middle\"\n              :columns=\"columns\"\n              :dataSource=\"dataSource\"\n            >\n              <div slot=\"action\" slot-scope=\"text, record\">\n                <template v-if=\"record.app==='DINGTALK'\">\n                  <a-popconfirm v-if=\"!record.recalled\" title=\"确定吗？\" @confirm=\"handleRecall(record)\">\n                    <a @click=\"\">撤回</a>\n                  </a-popconfirm>\n                  <span v-else>已撤回</span>\n                </template>\n                <template v-else>-</template>\n              </div>\n            </a-table>\n\n          </a-tab-pane>\n        </a-tabs>\n      </a-form-model>\n    </a-spin>\n  </a-card>\n</template>\n\n<script>\nimport { loadEnabledTypes } from '@/components/jeecgbiz/thirdApp/JThirdAppButton'\nimport { postAction } from '@/api/manage'\nimport { randomUUID } from '@/utils/util'\n\nexport default {\n  name: 'ThirdAppMessageTest',\n  data() {\n    return {\n      loading: false,\n      labelCol: {span: 6},\n      wrapperCol: {span: 12},\n      model: {\n        sendAll: false,\n      },\n      enabledTypes: {},\n      columns: [\n        {\n          title: '#',\n          dataIndex: '',\n          key: 'rowIndex',\n          width: 60,\n          align: 'center',\n          customRender: (t, r, index) => {\n            return this.dataSource.length - index\n          }\n        },\n        {\n          title: '测试APP',\n          align: 'center',\n          dataIndex: 'app',\n          customRender: (t, r, index) => {\n            if (t === 'WECHAT_ENTERPRISE') {\n              return '企业微信'\n            }\n            if (t === 'DINGTALK') {\n              return '钉钉'\n            } else {\n              return t\n            }\n          }\n        },\n        {\n          title: '接收人',\n          align: 'center',\n          dataIndex: 'receiver',\n          customRender: (t, r, index) => {\n            return r.sendAll ? '【全体】' : t\n          }\n        },\n        {\n          title: '消息内容',\n          align: 'center',\n          dataIndex: 'content'\n        },\n        {\n          title: 'response',\n          align: 'center',\n          dataIndex: 'response'\n        },\n        {\n          title: '操作',\n          dataIndex: 'action',\n          align: 'center',\n          fixed: 'right',\n          width: 80,\n          scopedSlots: {customRender: 'action'}\n        }\n      ],\n      dataSource: [],\n    }\n  },\n  computed: {\n    rules() {\n      return {\n        app: [{required: true, message: '请选择测试APP'}],\n        url: [{required: this.show, message: '请输入菜单路径!'}],\n        receiver: [{required: !this.model.sendAll, message: '请选择接收人'}],\n        content: [{required: true, message: '消息内容不能为空'}]\n      }\n    },\n    appOptions() {\n      return [\n        {\n          label: `企业微信${this.enabledTypes.wechatEnterprise ? '' : '（已禁用）'}`,\n          value: 'WECHAT_ENTERPRISE',\n          disabled: !this.enabledTypes.wechatEnterprise\n        },\n        {\n          label: `钉钉${this.enabledTypes.dingtalk ? '' : '（已禁用）'}`,\n          value: 'DINGTALK',\n          disabled: !this.enabledTypes.dingtalk\n        },\n      ]\n    },\n  },\n  created() {\n    this.loadEnabledTypes()\n  },\n  methods: {\n\n    // 获取启用的第三方App\n    async loadEnabledTypes() {\n      this.enabledTypes = await loadEnabledTypes()\n    },\n\n    onSendAllChange() {\n      this.$refs.form.clearValidate('receiver')\n    },\n\n    onSend() {\n      this.$refs.form.validate((ok, err) => {\n        if (ok) {\n          this.loading = true\n          postAction('/sys/thirdApp/sendMessageTest', this.model).then(({success, result, message}) => {\n            if (success) {\n              let response = ''\n              try {\n                response = JSON.stringify(result)\n              } catch (e) {\n                response = result\n              }\n              this.dataSource.unshift(Object.assign({id: randomUUID()}, this.model, {response}))\n            } else {\n              this.$message.warning(message)\n            }\n          }).finally(() => this.loading = false)\n        }\n      })\n    },\n\n    handleRecall(record) {\n      try {\n        let response = JSON.parse(record.response)\n        postAction('/sys/thirdApp/recallMessageTest', {\n          app: record.app,\n          msg_task_id: response.result\n        }).then(res => {\n          if (res.success) {\n            this.$set(record, 'recalled', true)\n            this.$message.success(res.message)\n          } else {\n            this.$message.warning(res.message)\n          }\n        }).catch(e => this.$message.warning(e.message || e))\n      } catch (e) {\n        this.$message.warning(e.message || e)\n      }\n    },\n\n  },\n}\n</script>\n\n<style scoped>\n\n</style>"]}]}