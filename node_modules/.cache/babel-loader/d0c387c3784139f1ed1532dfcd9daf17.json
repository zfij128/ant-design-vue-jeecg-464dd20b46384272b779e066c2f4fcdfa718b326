{"remainingRequest":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\babel-loader\\lib\\index.js!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\views\\system\\modules\\DeptRoleUserModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\views\\system\\modules\\DeptRoleUserModal.vue","mtime":1665386876000},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\babel-loader\\lib\\index.js","mtime":1665642924601},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js","mtime":1665642924058}],"contextDependencies":[],"result":["function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { httpAction, getAction } from '@/api/manage';\nimport JEllipsis from '@/components/jeecg/JEllipsis';\nimport { initDictOptions } from '@/components/dict/JDictSelectUtil';\nexport default {\n  name: 'DeptRoleUserModal',\n  components: {\n    JEllipsis: JEllipsis\n  },\n  data: function data() {\n    return {\n      currentDeptId: \"\",\n      title: \"部门角色分配\",\n      visible: false,\n      model: {},\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      validatorRules: {},\n      url: {\n        add: \"/sys/sysDepartRole/deptRoleUserAdd\",\n        getDeptRoleList: \"/sys/sysDepartRole/getDeptRoleList\",\n        getDeptRoleByUserId: \"/sys/sysDepartRole/getDeptRoleByUserId\"\n      },\n      designNameOption: [],\n      userId: \"\",\n      newRoleId: \"\",\n      oldRoleId: \"\",\n      designNameValue: [],\n      desformList: []\n    };\n  },\n  created: function created() {},\n  methods: {\n    add: function add(record, departId) {\n      this.userId = record.id;\n      this.currentDeptId = departId;\n      this.loadDesformList();\n      this.edit({});\n    },\n    edit: function edit(record) {\n      var _this = this;\n\n      this.form.resetFields();\n      this.model = Object.assign({}, record);\n      this.visible = true;\n      getAction(this.url.getDeptRoleByUserId, {\n        userId: this.userId,\n        departId: this.currentDeptId\n      }).then(function (res) {\n        if (res.success) {\n          var designName = [];\n\n          var _iterator = _createForOfIteratorHelper(res.result),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var value = _step.value;\n              designName.push(value.droleId);\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n\n          _this.oldRoleId = designName.join(\",\");\n          _this.designNameValue = designName;\n          _this.newRoleId = designName.join(\",\");\n        }\n      });\n    },\n    close: function close() {\n      this.$emit('close');\n      this.visible = false;\n    },\n    handleSubmit: function handleSubmit() {\n      var that = this; // 触发表单验证\n\n      that.confirmLoading = true;\n      var httpurl = this.url.add;\n      var method = 'post';\n      var formData = Object.assign(this.model, {}); //时间格式化\n\n      formData.userId = this.userId;\n      formData.newRoleId = this.newRoleId;\n      formData.oldRoleId = this.oldRoleId;\n      httpAction(httpurl, formData, method).then(function (res) {\n        if (res.success) {\n          that.$message.success(res.message);\n          that.$emit('reload');\n          that.$emit('ok');\n        } else {\n          that.$message.warning(res.message);\n        }\n      }).finally(function () {\n        that.confirmLoading = false;\n        that.close();\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.designNameOption = [];\n      this.designNameValue = [];\n      this.close();\n    },\n    designNameChange: function designNameChange(selectedValue) {\n      this.newRoleId = selectedValue.join(\",\");\n    },\n    checkALL: function checkALL() {\n      var designName = [];\n\n      var _iterator2 = _createForOfIteratorHelper(this.desformList),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var value = _step2.value;\n          designName.push(value.id);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      this.designNameValue = designName;\n      this.newRoleId = designName.join(\",\");\n    },\n    cancelCheckALL: function cancelCheckALL() {\n      this.designNameValue = [];\n      this.newRoleId = \"\";\n    },\n\n    /** 加载desform */\n    loadDesformList: function loadDesformList() {\n      var _this2 = this;\n\n      getAction(this.url.getDeptRoleList, {\n        departId: this.currentDeptId,\n        userId: this.userId\n      }).then(function (res) {\n        if (res.success) {\n          _this2.desformList = res.result;\n          var designName = [];\n\n          var _iterator3 = _createForOfIteratorHelper(_this2.desformList),\n              _step3;\n\n          try {\n            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n              var value = _step3.value;\n              designName.push({\n                value: value.id,\n                text: value.roleName\n              });\n            }\n          } catch (err) {\n            _iterator3.e(err);\n          } finally {\n            _iterator3.f();\n          }\n\n          _this2.designNameOption = designName;\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["DeptRoleUserModal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <a-drawer\n    :title=\"title\"\n    :maskClosable=\"true\"\n    width=600\n    placement=\"right\"\n    :closable=\"true\"\n    @close=\"close\"\n    :visible=\"visible\"\n    style=\"overflow: auto;padding-bottom: 53px;\">\n\n    <a-spin :spinning=\"confirmLoading\">\n\n      <a-form :form=\"form\" v-if=\"designNameOption.length>0\">\n        <a-form-item label=''>\n          <a-col :xl=\"24\" :lg=\"24\" :md=\"24\" :sm=\"24\" :xs=\"24\">\n            <a-card :style=\"{ marginTop: '12px',height:'auto' }\">\n              <a-checkbox-group @change=\"designNameChange\" v-model=\"designNameValue\" style=\"width: 100%\">\n                <a-row>\n                  <template v-for=\"(des) in designNameOption\">\n                    <a-col :span=\"6\">\n                      <a-checkbox :value=\"des.value\">{{ des.text }}</a-checkbox>\n                    </a-col>\n                  </template>\n                </a-row>\n              </a-checkbox-group>\n            </a-card>\n          </a-col>\n        </a-form-item>\n      </a-form>\n      <div v-else><h3>无可配置角色!</h3></div>\n    </a-spin>\n    <div class=\"drawer-bootom-button\">\n      <a-dropdown style=\"float: left\" :trigger=\"['click']\" placement=\"topCenter\">\n        <a-menu slot=\"overlay\">\n          <a-menu-item key=\"1\" @click=\"checkALL\">全部勾选</a-menu-item>\n          <a-menu-item key=\"2\" @click=\"cancelCheckALL\">取消全选</a-menu-item>\n        </a-menu>\n        <a-button>\n          操作 <a-icon type=\"up\" />\n        </a-button>\n      </a-dropdown>\n      <a-popconfirm  title=\"确定放弃编辑？\" @confirm=\"close\" okText=\"确定\" cancelText=\"取消\">\n        <a-button style=\"margin-right: .8rem\">取消</a-button>\n      </a-popconfirm>\n      <a-button @click=\"handleSubmit(true)\" type=\"primary\">保存</a-button>\n    </div>\n  </a-drawer>\n</template>\n\n<script>\n  import {httpAction, getAction} from '@/api/manage'\n  import  JEllipsis  from '@/components/jeecg/JEllipsis'\n  import {initDictOptions} from '@/components/dict/JDictSelectUtil'\n\n  export default {\n    name: 'DeptRoleUserModal',\n    components: {\n      JEllipsis\n    },\n    data() {\n      return {\n        currentDeptId:\"\",\n        title: \"部门角色分配\",\n        visible: false,\n        model: {},\n        labelCol: {\n          xs: {span: 24},\n          sm: {span: 5},\n        },\n        wrapperCol: {\n          xs: {span: 24},\n          sm: {span: 16},\n        },\n        confirmLoading: false,\n        form: this.$form.createForm(this),\n        validatorRules: {},\n        url: {\n          add: \"/sys/sysDepartRole/deptRoleUserAdd\",\n          getDeptRoleList:\"/sys/sysDepartRole/getDeptRoleList\",\n          getDeptRoleByUserId:\"/sys/sysDepartRole/getDeptRoleByUserId\"\n        },\n        designNameOption: [],\n        userId: \"\",\n        newRoleId:\"\",\n        oldRoleId:\"\",\n        designNameValue:[],\n        desformList: [],\n      }\n    },\n    created() {\n\n    },\n    methods: {\n      add(record,departId) {\n        this.userId = record.id;\n        this.currentDeptId = departId;\n        this.loadDesformList();\n        this.edit({});\n      },\n      edit(record) {\n        this.form.resetFields();\n        this.model = Object.assign({}, record);\n        this.visible = true;\n        getAction(this.url.getDeptRoleByUserId,{userId:this.userId,departId:this.currentDeptId}).then((res) => {\n          if (res.success) {\n            var designName = [];\n            for (let value of res.result) {\n              designName.push(value.droleId)\n            }\n            this.oldRoleId=designName.join(\",\");\n            this.designNameValue = designName;\n            this.newRoleId = designName.join(\",\");\n          }\n        });\n      },\n      close() {\n        this.$emit('close');\n        this.visible = false;\n      },\n      handleSubmit() {\n        const that = this;\n        // 触发表单验证\n        that.confirmLoading = true;\n        let  httpurl = this.url.add;\n        let  method = 'post';\n        let formData = Object.assign(this.model, {});\n        //时间格式化\n        formData.userId = this.userId;\n        formData.newRoleId=this.newRoleId;\n        formData.oldRoleId=this.oldRoleId;\n        httpAction(httpurl, formData, method).then((res) => {\n          if (res.success) {\n            that.$message.success(res.message);\n            that.$emit('reload');\n            that.$emit('ok');\n          } else {\n            that.$message.warning(res.message);\n          }\n        }).finally(() => {\n          that.confirmLoading = false;\n          that.close();\n        })\n      },\n      handleCancel() {\n        this.designNameOption=[];\n        this.designNameValue=[];\n        this.close()\n      },\n      designNameChange(selectedValue) {\n        this.newRoleId=selectedValue.join(\",\");\n      },\n      checkALL(){\n        var designName = [];\n        for (let value of this.desformList) {\n          designName.push(\n            value.id\n          )\n        }\n        this.designNameValue = designName;\n        this.newRoleId=designName.join(\",\");\n      },\n      cancelCheckALL(){\n        this.designNameValue=[];\n        this.newRoleId=\"\";\n      },\n      /** 加载desform */\n      loadDesformList() {\n        getAction(this.url.getDeptRoleList, { departId: this.currentDeptId, userId:this.userId }).then((res) => {\n          if (res.success) {\n            this.desformList = res.result\n            var designName = [];\n            for (let value of this.desformList) {\n              designName.push({\n                value: value.id,\n                text: value.roleName,\n              })\n            }\n            this.designNameOption = designName;\n          }\n        });\n      },\n    }\n\n  }\n</script>\n\n<style scoped>\n  .drawer-bootom-button {\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n    border-top: 1px solid #e8e8e8;\n    padding: 10px 16px;\n    text-align: right;\n    left: 0;\n    background: #fff;\n    border-radius: 0 0 2px 2px;\n  }\n</style>"],"sourceRoot":"src/views/system/modules"}]}