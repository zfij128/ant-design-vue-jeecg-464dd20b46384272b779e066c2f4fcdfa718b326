{"remainingRequest":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\babel-loader\\lib\\index.js!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\components\\jeecg\\JPopup.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\components\\jeecg\\JPopup.vue","mtime":1665386876000},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\babel-loader\\lib\\index.js","mtime":1665642924601},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js","mtime":1665642924058}],"contextDependencies":[],"result":["function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport JPopupOnlReport from './modal/JPopupOnlReport';\nexport default {\n  name: 'JPopup',\n  components: {\n    JPopupOnlReport: JPopupOnlReport\n  },\n  props: {\n    code: {\n      type: String,\n      default: '',\n      required: false\n    },\n    field: {\n      type: String,\n      default: '',\n      required: false\n    },\n    orgFields: {\n      type: String,\n      default: '',\n      required: false\n    },\n    destFields: {\n      type: String,\n      default: '',\n      required: false\n    },\n\n    /** 排序列，指定要排序的列，使用方式：列名=desc|asc */\n    sorter: {\n      type: String,\n      default: ''\n    },\n    width: {\n      type: Number,\n      default: 1200,\n      required: false\n    },\n    placeholder: {\n      type: String,\n      default: '请选择',\n      required: false\n    },\n    value: {\n      type: String,\n      required: false\n    },\n    triggerChange: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    multi: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    //popup动态参数 支持系统变量语法\n    param: {\n      type: Object,\n      required: false,\n      default: function _default() {}\n    },\n    spliter: {\n      type: String,\n      required: false,\n      default: ','\n    },\n\n    /** 分组ID，用于将多个popup的请求合并到一起，不传不分组 */\n    groupId: String\n  },\n  data: function data() {\n    return {\n      showText: '',\n      title: '',\n      avalid: true\n    };\n  },\n  computed: {\n    uniqGroupId: function uniqGroupId() {\n      if (this.groupId) {\n        var groupId = this.groupId,\n            code = this.code,\n            field = this.field,\n            orgFields = this.orgFields,\n            destFields = this.destFields;\n        return \"\".concat(groupId, \"_\").concat(code, \"_\").concat(field, \"_\").concat(orgFields, \"_\").concat(destFields);\n      }\n    }\n  },\n  watch: {\n    value: {\n      immediate: true,\n      handler: function handler(val) {\n        if (!val) {\n          this.showText = '';\n        } else {\n          this.showText = val.split(this.spliter).join(',');\n        }\n      }\n    }\n  },\n  created: function created() {},\n  mounted: function mounted() {\n    if (!this.orgFields || !this.destFields || !this.code) {\n      this.$message.error('popup参数未正确配置!');\n      this.avalid = false;\n    }\n\n    if (this.destFields.split(',').length != this.orgFields.split(',').length) {\n      this.$message.error('popup参数未正确配置,原始值和目标值数量不一致!');\n      this.avalid = false;\n    }\n  },\n  methods: {\n    openModal: function openModal() {\n      if (this.disabled === false) {\n        this.$refs.jPopupOnlReport.show();\n      }\n    },\n    handleEmpty: function handleEmpty() {\n      // 禁用时，不允许清空内容\n      if (this.disabled) {\n        return;\n      }\n\n      this.showText = '';\n      var destFieldsArr = this.destFields.split(',');\n\n      if (destFieldsArr.length === 0) {\n        return;\n      }\n\n      var res = {};\n\n      for (var i = 0; i < destFieldsArr.length; i++) {\n        res[destFieldsArr[i]] = '';\n      }\n\n      if (this.triggerChange) {\n        this.$emit('callback', res);\n      } else {\n        this.$emit('input', '', res);\n      }\n    },\n    callBack: function callBack(rows) {\n      // update--begin--autor:lvdandan-----date:20200630------for：多选时未带回多个值------\n      var orgFieldsArr = this.orgFields.split(',');\n      var destFieldsArr = this.destFields.split(',');\n      var resetText = false;\n\n      if (this.field && this.field.length > 0) {\n        this.showText = '';\n        resetText = true;\n      }\n\n      var res = {};\n\n      if (orgFieldsArr.length > 0) {\n        for (var i = 0; i < orgFieldsArr.length; i++) {\n          var tempDestArr = [];\n\n          var _iterator = _createForOfIteratorHelper(rows),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var rw = _step.value;\n              var val = rw[orgFieldsArr[i]]; // update--begin--autor:liusq-----date:20210713------for：处理val等于0的情况issues/I3ZL4T------\n\n              if (typeof val == 'undefined' || val == null || val.toString() == \"\") {\n                val = \"\";\n              } // update--end--autor:liusq-----date:20210713------for：处理val等于0的情况issues/I3ZL4T------\n\n\n              tempDestArr.push(val);\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n\n          res[destFieldsArr[i]] = tempDestArr.join(\",\");\n        }\n\n        if (resetText === true) {\n          var tempText = [];\n\n          var _iterator2 = _createForOfIteratorHelper(rows),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var _rw = _step2.value;\n\n              var _val = _rw[orgFieldsArr[destFieldsArr.indexOf(this.field)]];\n\n              if (!_val) {\n                _val = \"\";\n              }\n\n              tempText.push(_val);\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n\n          this.showText = tempText.join(\",\");\n        } // update--end--autor:lvdandan-----date:20200630------for：多选时未带回多个值------\n\n      }\n\n      if (this.triggerChange) {\n        //v-dec时即triggerChange为true时 将整个对象给form页面 让他自己setFieldsValue\n        this.$emit('callback', res);\n      } else {\n        //v-model时 需要传一个参数field 表示当前这个字段 从而根据这个字段的顺序找到原始值\n        // this.$emit(\"input\",row[orgFieldsArr[destFieldsArr.indexOf(this.field)]])\n        var str = '';\n\n        if (this.showText) {\n          str = this.showText.split(',').join(this.spliter);\n        }\n\n        this.$emit('input', str, res);\n      }\n    }\n  }\n};",{"version":3,"sources":["JPopup.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"components-input-demo-presuffix\" v-if=\"avalid\">\n    <!---->\n    <a-input @click=\"openModal\" :placeholder=\"placeholder\" v-model=\"showText\" readOnly :disabled=\"disabled\">\n      <a-icon slot=\"prefix\" type=\"cluster\" :title=\"title\"/>\n      <a-icon v-if=\"showText\" slot=\"suffix\" type=\"close-circle\" @click=\"handleEmpty\" title=\"清空\"/>\n    </a-input>\n\n    <j-popup-onl-report\n      ref=\"jPopupOnlReport\"\n      :code=\"code\"\n      :multi=\"multi\"\n      :sorter=\"sorter\"\n      :groupId=\"uniqGroupId\"\n      :param=\"param\"\n      @ok=\"callBack\"\n    />\n\n  </div>\n</template>\n\n<script>\n  import JPopupOnlReport from './modal/JPopupOnlReport'\n\n  export default {\n    name: 'JPopup',\n    components: {\n      JPopupOnlReport\n    },\n    props: {\n      code: {\n        type: String,\n        default: '',\n        required: false\n      },\n      field: {\n        type: String,\n        default: '',\n        required: false\n      },\n      orgFields: {\n        type: String,\n        default: '',\n        required: false\n      },\n      destFields: {\n        type: String,\n        default: '',\n        required: false\n      },\n      /** 排序列，指定要排序的列，使用方式：列名=desc|asc */\n      sorter: {\n        type: String,\n        default: ''\n      },\n      width: {\n        type: Number,\n        default: 1200,\n        required: false\n      },\n      placeholder: {\n        type: String,\n        default: '请选择',\n        required: false\n      },\n      value: {\n        type: String,\n        required: false\n      },\n      triggerChange: {\n        type: Boolean,\n        required: false,\n        default: false\n      },\n      disabled: {\n        type: Boolean,\n        required: false,\n        default: false\n      },\n      multi: {\n        type: Boolean,\n        required: false,\n        default: false\n      },\n      //popup动态参数 支持系统变量语法\n      param:{\n        type: Object,\n        required: false,\n        default: ()=>{}\n      },\n      spliter:{\n        type: String,\n        required: false,\n        default: ','\n      },\n      /** 分组ID，用于将多个popup的请求合并到一起，不传不分组 */\n      groupId: String\n\n    },\n    data() {\n      return {\n        showText: '',\n        title: '',\n        avalid: true\n      }\n    },\n    computed: {\n      uniqGroupId() {\n        if (this.groupId) {\n          let { groupId, code, field, orgFields, destFields } = this\n          return `${groupId}_${code}_${field}_${orgFields}_${destFields}`\n        }\n      }\n    },\n    watch: {\n      value: {\n        immediate: true,\n        handler: function(val) {\n          if (!val) {\n            this.showText = ''\n          } else {\n            this.showText = val.split(this.spliter).join(',')\n          }\n        }\n      }\n    },\n    created() {\n    },\n    mounted() {\n      if (!this.orgFields || !this.destFields || !this.code) {\n        this.$message.error('popup参数未正确配置!')\n        this.avalid = false\n      }\n      if (this.destFields.split(',').length != this.orgFields.split(',').length) {\n        this.$message.error('popup参数未正确配置,原始值和目标值数量不一致!')\n        this.avalid = false\n      }\n    },\n    methods: {\n      openModal() {\n        if (this.disabled === false) {\n          this.$refs.jPopupOnlReport.show()\n        }\n      },\n      handleEmpty() {\n        // 禁用时，不允许清空内容\n        if (this.disabled) {\n          return\n        }\n        this.showText = ''\n        let destFieldsArr = this.destFields.split(',')\n        if (destFieldsArr.length === 0) {\n          return\n        }\n        let res = {}\n        for (let i = 0; i < destFieldsArr.length; i++) {\n          res[destFieldsArr[i]] = ''\n        }\n        if (this.triggerChange) {\n          this.$emit('callback', res)\n        } else {\n          this.$emit('input', '', res)\n        }\n      },\n      callBack(rows) {\n        // update--begin--autor:lvdandan-----date:20200630------for：多选时未带回多个值------\n        let orgFieldsArr = this.orgFields.split(',')\n        let destFieldsArr = this.destFields.split(',')\n        let resetText = false\n        if (this.field && this.field.length > 0) {\n          this.showText = ''\n          resetText = true\n        }\n        let res = {}\n        if (orgFieldsArr.length > 0) {\n          for (let i = 0; i < orgFieldsArr.length; i++) {\n            let tempDestArr = []\n            for(let rw of rows){\n              let val = rw[orgFieldsArr[i]]\n              // update--begin--autor:liusq-----date:20210713------for：处理val等于0的情况issues/I3ZL4T------\n              if(typeof val=='undefined'|| val==null || val.toString()==\"\"){\n                val = \"\"\n              }\n              // update--end--autor:liusq-----date:20210713------for：处理val等于0的情况issues/I3ZL4T------\n              tempDestArr.push(val)\n            }\n            res[destFieldsArr[i]] = tempDestArr.join(\",\")\n          }\n          if (resetText === true) {\n            let tempText = []\n            for(let rw of rows){\n              let val = rw[orgFieldsArr[destFieldsArr.indexOf(this.field)]]\n              if(!val){\n                val = \"\"\n              }\n              tempText.push(val)\n            }\n            this.showText = tempText.join(\",\")\n          }\n          // update--end--autor:lvdandan-----date:20200630------for：多选时未带回多个值------\n        }\n        if (this.triggerChange) {\n          //v-dec时即triggerChange为true时 将整个对象给form页面 让他自己setFieldsValue\n          this.$emit('callback', res)\n        } else {\n          //v-model时 需要传一个参数field 表示当前这个字段 从而根据这个字段的顺序找到原始值\n          // this.$emit(\"input\",row[orgFieldsArr[destFieldsArr.indexOf(this.field)]])\n          let str = ''\n          if(this.showText){\n            str = this.showText.split(',').join(this.spliter)\n          }\n          this.$emit('input', str, res)\n        }\n      }\n    }\n  }\n</script>\n<style scoped>\n  .components-input-demo-presuffix .anticon-close-circle {\n    cursor: pointer;\n    color: #ccc;\n    transition: color 0.3s;\n    font-size: 12px;\n  }\n\n  .components-input-demo-presuffix .anticon-close-circle:hover {\n    color: #f5222d;\n  }\n\n  .components-input-demo-presuffix .anticon-close-circle:active {\n    color: #666;\n  }\n</style>"],"sourceRoot":"src/components/jeecg"}]}