{"remainingRequest":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\babel-loader\\lib\\index.js!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\views\\system\\modules\\UserModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\views\\system\\modules\\UserModal.vue","mtime":1665386876000},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\babel-loader\\lib\\index.js","mtime":1665642924601},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js","mtime":1665642924058}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport moment from 'moment';\nimport Vue from 'vue';\nimport { ACCESS_TOKEN } from \"@/store/mutation-types\";\nimport { getAction } from '@/api/manage';\nimport { addUser, editUser, queryUserRole, queryall } from '@/api/api';\nimport { disabledAuthFilter } from \"@/utils/authFilter\";\nimport { duplicateCheck } from '@/api/api';\nexport default {\n  name: \"UserModal\",\n  components: {},\n  data: function data() {\n    return {\n      departDisabled: false,\n      //是否是我的部门调用该页面\n      roleDisabled: false,\n      //是否是角色维护调用该页面\n      modalWidth: 800,\n      drawerWidth: 700,\n      modaltoggleFlag: true,\n      confirmDirty: false,\n      userId: \"\",\n      //保存用户id\n      disableSubmit: false,\n      dateFormat: \"YYYY-MM-DD\",\n      validatorRules: {\n        username: [{\n          required: true,\n          message: '请输入用户账号!'\n        }, {\n          validator: this.validateUsername\n        }],\n        password: [{\n          required: true,\n          pattern: /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[~!@#$%^&*()_+`\\-={}:\";'<>?,./]).{8,}$/,\n          message: '密码由8位数字、大小写字母和特殊符号组成!'\n        }, {\n          validator: this.validateToNextPassword,\n          trigger: 'change'\n        }],\n        confirmpassword: [{\n          required: true,\n          message: '请重新输入登录密码!'\n        }, {\n          validator: this.compareToFirstPassword\n        }],\n        realname: [{\n          required: true,\n          message: '请输入用户名称!'\n        }],\n        phone: [{\n          required: true,\n          message: '请输入手机号!'\n        }, {\n          validator: this.validatePhone\n        }],\n        email: [{\n          validator: this.validateEmail\n        }],\n        roles: {},\n        workNo: [{\n          required: true,\n          message: '请输入工号'\n        }, {\n          validator: this.validateWorkNo\n        }],\n        telephone: [{\n          pattern: /^0\\d{2,3}-[1-9]\\d{6,7}$/,\n          message: '请输入正确的座机号码'\n        }]\n      },\n      departIdShow: false,\n      title: \"操作\",\n      visible: false,\n      model: {},\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      uploadLoading: false,\n      confirmLoading: false,\n      headers: {},\n      url: {\n        fileUpload: window._CONFIG['domianURL'] + \"/sys/common/upload\",\n        userWithDepart: \"/sys/user/userDepartList\",\n        // 引入为指定用户查看部门信息需要的url\n        userId: \"/sys/user/generateUserId\",\n        // 引入生成添加用户情况下的url\n        syncUserByUserName: \"/act/process/extActProcess/doSyncUserByUserName\",\n        //同步用户到工作流\n        queryTenantList: '/sys/tenant/queryList'\n      },\n      tenantsOptions: [],\n      rolesOptions: [],\n      nextDepartOptions: []\n    };\n  },\n  created: function created() {\n    var token = Vue.ls.get(ACCESS_TOKEN);\n    this.headers = {\n      \"X-Access-Token\": token\n    };\n    this.initRoleList();\n    this.initTenantList();\n  },\n  computed: {\n    uploadAction: function uploadAction() {\n      return this.url.fileUpload;\n    }\n  },\n  methods: {\n    add: function add() {\n      this.refresh();\n      this.edit({\n        activitiSync: '1',\n        userIdentity: 1\n      });\n    },\n    edit: function edit(record) {\n      var that = this;\n      that.visible = true; //根据屏幕宽度自适应抽屉宽度\n\n      this.resetScreenSize();\n      that.userId = record.id;\n      that.model = Object.assign({}, {\n        selectedroles: '',\n        selecteddeparts: ''\n      }, record); //身份为上级显示负责部门，否则不显示\n\n      if (this.model.userIdentity == 2) {\n        this.departIdShow = true;\n      } else {\n        this.departIdShow = false;\n      }\n\n      if (record.hasOwnProperty(\"id\")) {\n        that.getUserRoles(record.id);\n        that.getUserDeparts(record.id);\n      }\n\n      console.log('that.model=', that.model);\n    },\n    isDisabledAuth: function isDisabledAuth(code) {\n      return disabledAuthFilter(code);\n    },\n    //窗口最大化切换\n    toggleScreen: function toggleScreen() {\n      if (this.modaltoggleFlag) {\n        this.modalWidth = window.innerWidth;\n      } else {\n        this.modalWidth = 800;\n      }\n\n      this.modaltoggleFlag = !this.modaltoggleFlag;\n    },\n    // 根据屏幕变化,设置抽屉尺寸\n    resetScreenSize: function resetScreenSize() {\n      var screenWidth = document.body.clientWidth;\n\n      if (screenWidth < 500) {\n        this.drawerWidth = screenWidth;\n      } else {\n        this.drawerWidth = 700;\n      }\n    },\n    //初始化租户字典\n    initTenantList: function initTenantList() {\n      var _this = this;\n\n      getAction(this.url.queryTenantList).then(function (res) {\n        if (res.success) {\n          _this.tenantsOptions = res.result.map(function (item, index, arr) {\n            var c = {\n              label: item.name,\n              value: item.id + \"\"\n            };\n            return c;\n          });\n          console.log('this.tenantsOptions: ', _this.tenantsOptions);\n        }\n      });\n    },\n    //初始化角色字典\n    initRoleList: function initRoleList() {\n      var _this2 = this;\n\n      queryall().then(function (res) {\n        if (res.success) {\n          _this2.rolesOptions = res.result.map(function (item, index, arr) {\n            var c = {\n              label: item.roleName,\n              value: item.id\n            };\n            return c;\n          });\n          console.log('this.rolesOptions: ', _this2.rolesOptions);\n        }\n      });\n    },\n    getUserRoles: function getUserRoles(userid) {\n      var _this3 = this;\n\n      queryUserRole({\n        userid: userid\n      }).then(function (res) {\n        if (res.success) {\n          _this3.model.selectedroles = res.result.join(\",\");\n          console.log('that.model.selectedroles=', _this3.model.selectedroles);\n        }\n      });\n    },\n    getUserDeparts: function getUserDeparts(userid) {\n      var that = this;\n      getAction(that.url.userWithDepart, {\n        userId: userid\n      }).then(function (res) {\n        if (res.success) {\n          var departOptions = [];\n          var selectDepartKeys = [];\n\n          for (var i = 0; i < res.result.length; i++) {\n            selectDepartKeys.push(res.result[i].key); //新增负责部门选择下拉框\n\n            departOptions.push({\n              value: res.result[i].key,\n              label: res.result[i].title\n            });\n          }\n\n          that.model.selecteddeparts = selectDepartKeys.join(\",\");\n          that.nextDepartOptions = departOptions;\n          console.log('that.nextDepartOptions=', that.nextDepartOptions);\n        }\n      });\n    },\n    backDepartInfo: function backDepartInfo(info) {\n      this.model.departIds = this.model.selecteddeparts;\n      this.nextDepartOptions = info.map(function (item, index, arr) {\n        var c = {\n          label: item.text,\n          value: item.value + \"\"\n        };\n        return c;\n      });\n    },\n    refresh: function refresh() {\n      this.userId = \"\";\n      this.nextDepartOptions = [];\n      this.departIdShow = false;\n    },\n    close: function close() {\n      this.$emit('close');\n      this.visible = false;\n      this.disableSubmit = false;\n      this.nextDepartOptions = [];\n      this.departIdShow = false;\n      this.$refs.form.resetFields();\n    },\n    moment: moment,\n    handleSubmit: function handleSubmit() {\n      var _this4 = this;\n\n      var that = this; // 触发表单验证\n\n      this.$refs.form.validate(function (valid) {\n        if (valid) {\n          that.confirmLoading = true; //如果是上级择传入departIds,否则为空\n\n          if (_this4.model.userIdentity !== 2) {\n            _this4.model.departIds = \"\";\n          }\n\n          var obj;\n\n          if (!_this4.model.id) {\n            _this4.model.id = _this4.userId;\n            obj = addUser(_this4.model);\n          } else {\n            obj = editUser(_this4.model);\n          }\n\n          obj.then(function (res) {\n            if (res.success) {\n              that.$message.success(res.message);\n              that.$emit('ok');\n            } else {\n              that.$message.warning(res.message);\n            }\n          }).finally(function () {\n            that.confirmLoading = false;\n            that.close();\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.close();\n    },\n    validateToNextPassword: function validateToNextPassword(rule, value, callback) {\n      var confirmpassword = this.model.confirmpassword;\n\n      if (value && confirmpassword && value !== confirmpassword) {\n        callback('两次输入的密码不一样！');\n      }\n\n      if (value && this.confirmDirty) {\n        this.$refs.form.validateField(['confirmpassword']);\n      }\n\n      callback();\n    },\n    compareToFirstPassword: function compareToFirstPassword(rule, value, callback) {\n      if (value && value !== this.model.password) {\n        callback('两次输入的密码不一样！');\n      } else {\n        callback();\n      }\n    },\n    validatePhone: function validatePhone(rule, value, callback) {\n      if (!value) {\n        callback();\n      } else {\n        if (new RegExp(/^1[3|4|5|7|8|9][0-9]\\d{8}$/).test(value)) {\n          var params = {\n            tableName: 'sys_user',\n            fieldName: 'phone',\n            fieldVal: value,\n            dataId: this.userId\n          };\n          duplicateCheck(params).then(function (res) {\n            if (res.success) {\n              callback();\n            } else {\n              callback(\"手机号已存在!\");\n            }\n          });\n        } else {\n          callback(\"请输入正确格式的手机号码!\");\n        }\n      }\n    },\n    validateEmail: function validateEmail(rule, value, callback) {\n      if (!value) {\n        callback();\n      } else {\n        if (new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/).test(value)) {\n          var params = {\n            tableName: 'sys_user',\n            fieldName: 'email',\n            fieldVal: value,\n            dataId: this.userId\n          };\n          duplicateCheck(params).then(function (res) {\n            console.log(res);\n\n            if (res.success) {\n              callback();\n            } else {\n              callback(\"邮箱已存在!\");\n            }\n          });\n        } else {\n          callback(\"请输入正确格式的邮箱!\");\n        }\n      }\n    },\n    validateUsername: function validateUsername(rule, value, callback) {\n      var params = {\n        tableName: 'sys_user',\n        fieldName: 'username',\n        fieldVal: value,\n        dataId: this.userId\n      };\n      duplicateCheck(params).then(function (res) {\n        if (res.success) {\n          callback();\n        } else {\n          callback(\"用户名已存在!\");\n        }\n      });\n    },\n    validateWorkNo: function validateWorkNo(rule, value, callback) {\n      var params = {\n        tableName: 'sys_user',\n        fieldName: 'work_no',\n        fieldVal: value,\n        dataId: this.userId\n      };\n      duplicateCheck(params).then(function (res) {\n        if (res.success) {\n          callback();\n        } else {\n          callback(\"工号已存在!\");\n        }\n      });\n    },\n    handleConfirmBlur: function handleConfirmBlur(e) {\n      var value = e.target.value;\n      this.confirmDirty = this.confirmDirty || !!value;\n    },\n    beforeUpload: function beforeUpload(file) {\n      var fileType = file.type;\n\n      if (fileType.indexOf('image') < 0) {\n        this.$message.warning('请上传图片');\n        return false;\n      } //TODO 验证文件大小\n\n    },\n    identityChange: function identityChange(e) {\n      if (e.target.value === 1) {\n        this.departIdShow = false;\n      } else {\n        this.departIdShow = true;\n      }\n    }\n  }\n};",{"version":3,"sources":["UserModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2IA,OAAA,MAAA,MAAA,QAAA;AACA,OAAA,GAAA,MAAA,KAAA;AACA,SAAA,YAAA,QAAA,wBAAA;AACA,SAAA,SAAA,QAAA,cAAA;AACA,SAAA,OAAA,EAAA,QAAA,EAAA,aAAA,EAAA,QAAA,QAAA,WAAA;AACA,SAAA,kBAAA,QAAA,oBAAA;AACA,SAAA,cAAA,QAAA,WAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,UAAA,EAAA,EAFA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,cAAA,EAAA,KADA;AACA;AACA,MAAA,YAAA,EAAA,KAFA;AAEA;AACA,MAAA,UAAA,EAAA,GAHA;AAIA,MAAA,WAAA,EAAA,GAJA;AAKA,MAAA,eAAA,EAAA,IALA;AAMA,MAAA,YAAA,EAAA,KANA;AAOA,MAAA,MAAA,EAAA,EAPA;AAOA;AACA,MAAA,aAAA,EAAA,KARA;AASA,MAAA,UAAA,EAAA,YATA;AAUA,MAAA,cAAA,EAAA;AACA,QAAA,QAAA,EAAA,CAAA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAAA,EACA;AAAA,UAAA,SAAA,EAAA,KAAA;AAAA,SADA,CADA;AAGA,QAAA,QAAA,EAAA,CAAA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,oEAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAAA,EACA;AAAA,UAAA,SAAA,EAAA,KAAA,sBAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA,CAHA;AAKA,QAAA,eAAA,EAAA,CAAA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAAA,EACA;AAAA,UAAA,SAAA,EAAA,KAAA;AAAA,SADA,CALA;AAOA,QAAA,QAAA,EAAA,CAAA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAAA,CAPA;AAQA,QAAA,KAAA,EAAA,CAAA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAAA,EAAA;AAAA,UAAA,SAAA,EAAA,KAAA;AAAA,SAAA,CARA;AASA,QAAA,KAAA,EAAA,CAAA;AAAA,UAAA,SAAA,EAAA,KAAA;AAAA,SAAA,CATA;AAUA,QAAA,KAAA,EAAA,EAVA;AAWA,QAAA,MAAA,EAAA,CAAA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAAA,EACA;AAAA,UAAA,SAAA,EAAA,KAAA;AAAA,SADA,CAXA;AAaA,QAAA,SAAA,EAAA,CAAA;AAAA,UAAA,OAAA,EAAA,yBAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAAA;AAbA,OAVA;AAyBA,MAAA,YAAA,EAAA,KAzBA;AA0BA,MAAA,KAAA,EAAA,IA1BA;AA2BA,MAAA,OAAA,EAAA,KA3BA;AA4BA,MAAA,KAAA,EAAA,EA5BA;AA6BA,MAAA,QAAA,EAAA;AACA,QAAA,EAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SADA;AAEA,QAAA,EAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA;AAFA,OA7BA;AAiCA,MAAA,UAAA,EAAA;AACA,QAAA,EAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SADA;AAEA,QAAA,EAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA;AAFA,OAjCA;AAqCA,MAAA,aAAA,EAAA,KArCA;AAsCA,MAAA,cAAA,EAAA,KAtCA;AAuCA,MAAA,OAAA,EAAA,EAvCA;AAwCA,MAAA,GAAA,EAAA;AACA,QAAA,UAAA,EAAA,MAAA,CAAA,OAAA,CAAA,WAAA,IAAA,oBADA;AAEA,QAAA,cAAA,EAAA,0BAFA;AAEA;AACA,QAAA,MAAA,EAAA,0BAHA;AAGA;AACA,QAAA,kBAAA,EAAA,iDAJA;AAIA;AACA,QAAA,eAAA,EAAA;AALA,OAxCA;AA+CA,MAAA,cAAA,EAAA,EA/CA;AAgDA,MAAA,YAAA,EAAA,EAhDA;AAiDA,MAAA,iBAAA,EAAA;AAjDA,KAAA;AAmDA,GAxDA;AAyDA,EAAA,OAzDA,qBAyDA;AACA,QAAA,KAAA,GAAA,GAAA,CAAA,EAAA,CAAA,GAAA,CAAA,YAAA,CAAA;AACA,SAAA,OAAA,GAAA;AAAA,wBAAA;AAAA,KAAA;AACA,SAAA,YAAA;AACA,SAAA,cAAA;AACA,GA9DA;AA+DA,EAAA,QAAA,EAAA;AACA,IAAA,YAAA,EAAA,wBAAA;AACA,aAAA,KAAA,GAAA,CAAA,UAAA;AACA;AAHA,GA/DA;AAoEA,EAAA,OAAA,EAAA;AACA,IAAA,GADA,iBACA;AACA,WAAA,OAAA;AACA,WAAA,IAAA,CAAA;AAAA,QAAA,YAAA,EAAA,GAAA;AAAA,QAAA,YAAA,EAAA;AAAA,OAAA;AACA,KAJA;AAKA,IAAA,IALA,gBAKA,MALA,EAKA;AACA,UAAA,IAAA,GAAA,IAAA;AACA,MAAA,IAAA,CAAA,OAAA,GAAA,IAAA,CAFA,CAGA;;AACA,WAAA,eAAA;AACA,MAAA,IAAA,CAAA,MAAA,GAAA,MAAA,CAAA,EAAA;AACA,MAAA,IAAA,CAAA,KAAA,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA;AAAA,QAAA,aAAA,EAAA,EAAA;AAAA,QAAA,eAAA,EAAA;AAAA,OAAA,EAAA,MAAA,CAAA,CANA,CAOA;;AACA,UAAA,KAAA,KAAA,CAAA,YAAA,IAAA,CAAA,EAAA;AACA,aAAA,YAAA,GAAA,IAAA;AACA,OAFA,MAEA;AACA,aAAA,YAAA,GAAA,KAAA;AACA;;AAEA,UAAA,MAAA,CAAA,cAAA,CAAA,IAAA,CAAA,EAAA;AACA,QAAA,IAAA,CAAA,YAAA,CAAA,MAAA,CAAA,EAAA;AACA,QAAA,IAAA,CAAA,cAAA,CAAA,MAAA,CAAA,EAAA;AACA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,aAAA,EAAA,IAAA,CAAA,KAAA;AACA,KAxBA;AAyBA,IAAA,cAzBA,0BAyBA,IAzBA,EAyBA;AACA,aAAA,kBAAA,CAAA,IAAA,CAAA;AACA,KA3BA;AA4BA;AACA,IAAA,YA7BA,0BA6BA;AACA,UAAA,KAAA,eAAA,EAAA;AACA,aAAA,UAAA,GAAA,MAAA,CAAA,UAAA;AACA,OAFA,MAEA;AACA,aAAA,UAAA,GAAA,GAAA;AACA;;AACA,WAAA,eAAA,GAAA,CAAA,KAAA,eAAA;AACA,KApCA;AAqCA;AACA,IAAA,eAtCA,6BAsCA;AACA,UAAA,WAAA,GAAA,QAAA,CAAA,IAAA,CAAA,WAAA;;AACA,UAAA,WAAA,GAAA,GAAA,EAAA;AACA,aAAA,WAAA,GAAA,WAAA;AACA,OAFA,MAEA;AACA,aAAA,WAAA,GAAA,GAAA;AACA;AACA,KA7CA;AA8CA;AACA,IAAA,cA/CA,4BA+CA;AAAA;;AACA,MAAA,SAAA,CAAA,KAAA,GAAA,CAAA,eAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,CAAA,OAAA,EAAA;AACA,UAAA,KAAA,CAAA,cAAA,GAAA,GAAA,CAAA,MAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA,KAAA,EAAA,GAAA,EAAA;AACA,gBAAA,CAAA,GAAA;AAAA,cAAA,KAAA,EAAA,IAAA,CAAA,IAAA;AAAA,cAAA,KAAA,EAAA,IAAA,CAAA,EAAA,GAAA;AAAA,aAAA;AACA,mBAAA,CAAA;AACA,WAHA,CAAA;AAIA,UAAA,OAAA,CAAA,GAAA,CAAA,uBAAA,EAAA,KAAA,CAAA,cAAA;AACA;AACA,OARA;AASA,KAzDA;AA0DA;AACA,IAAA,YA3DA,0BA2DA;AAAA;;AACA,MAAA,QAAA,GAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,CAAA,OAAA,EAAA;AACA,UAAA,MAAA,CAAA,YAAA,GAAA,GAAA,CAAA,MAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA,KAAA,EAAA,GAAA,EAAA;AACA,gBAAA,CAAA,GAAA;AAAA,cAAA,KAAA,EAAA,IAAA,CAAA,QAAA;AAAA,cAAA,KAAA,EAAA,IAAA,CAAA;AAAA,aAAA;AACA,mBAAA,CAAA;AACA,WAHA,CAAA;AAIA,UAAA,OAAA,CAAA,GAAA,CAAA,qBAAA,EAAA,MAAA,CAAA,YAAA;AACA;AACA,OARA;AASA,KArEA;AAsEA,IAAA,YAtEA,wBAsEA,MAtEA,EAsEA;AAAA;;AACA,MAAA,aAAA,CAAA;AAAA,QAAA,MAAA,EAAA;AAAA,OAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,CAAA,OAAA,EAAA;AACA,UAAA,MAAA,CAAA,KAAA,CAAA,aAAA,GAAA,GAAA,CAAA,MAAA,CAAA,IAAA,CAAA,GAAA,CAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,2BAAA,EAAA,MAAA,CAAA,KAAA,CAAA,aAAA;AACA;AACA,OALA;AAMA,KA7EA;AA8EA,IAAA,cA9EA,0BA8EA,MA9EA,EA8EA;AACA,UAAA,IAAA,GAAA,IAAA;AACA,MAAA,SAAA,CAAA,IAAA,CAAA,GAAA,CAAA,cAAA,EAAA;AAAA,QAAA,MAAA,EAAA;AAAA,OAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,CAAA,OAAA,EAAA;AACA,cAAA,aAAA,GAAA,EAAA;AACA,cAAA,gBAAA,GAAA,EAAA;;AACA,eAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,GAAA,CAAA,MAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,gBAAA,CAAA,IAAA,CAAA,GAAA,CAAA,MAAA,CAAA,CAAA,EAAA,GAAA,EADA,CAEA;;AACA,YAAA,aAAA,CAAA,IAAA,CAAA;AACA,cAAA,KAAA,EAAA,GAAA,CAAA,MAAA,CAAA,CAAA,EAAA,GADA;AAEA,cAAA,KAAA,EAAA,GAAA,CAAA,MAAA,CAAA,CAAA,EAAA;AAFA,aAAA;AAIA;;AACA,UAAA,IAAA,CAAA,KAAA,CAAA,eAAA,GAAA,gBAAA,CAAA,IAAA,CAAA,GAAA,CAAA;AACA,UAAA,IAAA,CAAA,iBAAA,GAAA,aAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,yBAAA,EAAA,IAAA,CAAA,iBAAA;AACA;AACA,OAhBA;AAiBA,KAjGA;AAkGA,IAAA,cAlGA,0BAkGA,IAlGA,EAkGA;AACA,WAAA,KAAA,CAAA,SAAA,GAAA,KAAA,KAAA,CAAA,eAAA;AACA,WAAA,iBAAA,GAAA,IAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA,KAAA,EAAA,GAAA,EAAA;AACA,YAAA,CAAA,GAAA;AAAA,UAAA,KAAA,EAAA,IAAA,CAAA,IAAA;AAAA,UAAA,KAAA,EAAA,IAAA,CAAA,KAAA,GAAA;AAAA,SAAA;AACA,eAAA,CAAA;AACA,OAHA,CAAA;AAIA,KAxGA;AAyGA,IAAA,OAzGA,qBAyGA;AACA,WAAA,MAAA,GAAA,EAAA;AACA,WAAA,iBAAA,GAAA,EAAA;AACA,WAAA,YAAA,GAAA,KAAA;AACA,KA7GA;AA8GA,IAAA,KA9GA,mBA8GA;AACA,WAAA,KAAA,CAAA,OAAA;AACA,WAAA,OAAA,GAAA,KAAA;AACA,WAAA,aAAA,GAAA,KAAA;AACA,WAAA,iBAAA,GAAA,EAAA;AACA,WAAA,YAAA,GAAA,KAAA;AACA,WAAA,KAAA,CAAA,IAAA,CAAA,WAAA;AACA,KArHA;AAsHA,IAAA,MAAA,EAAA,MAtHA;AAuHA,IAAA,YAvHA,0BAuHA;AAAA;;AACA,UAAA,IAAA,GAAA,IAAA,CADA,CAEA;;AACA,WAAA,KAAA,CAAA,IAAA,CAAA,QAAA,CAAA,UAAA,KAAA,EAAA;AACA,YAAA,KAAA,EAAA;AACA,UAAA,IAAA,CAAA,cAAA,GAAA,IAAA,CADA,CAEA;;AACA,cAAA,MAAA,CAAA,KAAA,CAAA,YAAA,KAAA,CAAA,EAAA;AACA,YAAA,MAAA,CAAA,KAAA,CAAA,SAAA,GAAA,EAAA;AACA;;AACA,cAAA,GAAA;;AACA,cAAA,CAAA,MAAA,CAAA,KAAA,CAAA,EAAA,EAAA;AACA,YAAA,MAAA,CAAA,KAAA,CAAA,EAAA,GAAA,MAAA,CAAA,MAAA;AACA,YAAA,GAAA,GAAA,OAAA,CAAA,MAAA,CAAA,KAAA,CAAA;AACA,WAHA,MAGA;AACA,YAAA,GAAA,GAAA,QAAA,CAAA,MAAA,CAAA,KAAA,CAAA;AACA;;AACA,UAAA,GAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,gBAAA,GAAA,CAAA,OAAA,EAAA;AACA,cAAA,IAAA,CAAA,QAAA,CAAA,OAAA,CAAA,GAAA,CAAA,OAAA;AACA,cAAA,IAAA,CAAA,KAAA,CAAA,IAAA;AACA,aAHA,MAGA;AACA,cAAA,IAAA,CAAA,QAAA,CAAA,OAAA,CAAA,GAAA,CAAA,OAAA;AACA;AACA,WAPA,EAOA,OAPA,CAOA,YAAA;AACA,YAAA,IAAA,CAAA,cAAA,GAAA,KAAA;AACA,YAAA,IAAA,CAAA,KAAA;AACA,WAVA;AAWA,SAxBA,MAwBA;AACA,iBAAA,KAAA;AACA;AACA,OA5BA;AA6BA,KAvJA;AAwJA,IAAA,YAxJA,0BAwJA;AACA,WAAA,KAAA;AACA,KA1JA;AA2JA,IAAA,sBA3JA,kCA2JA,IA3JA,EA2JA,KA3JA,EA2JA,QA3JA,EA2JA;AACA,UAAA,eAAA,GAAA,KAAA,KAAA,CAAA,eAAA;;AACA,UAAA,KAAA,IAAA,eAAA,IAAA,KAAA,KAAA,eAAA,EAAA;AACA,QAAA,QAAA,CAAA,aAAA,CAAA;AACA;;AACA,UAAA,KAAA,IAAA,KAAA,YAAA,EAAA;AACA,aAAA,KAAA,CAAA,IAAA,CAAA,aAAA,CAAA,CAAA,iBAAA,CAAA;AACA;;AACA,MAAA,QAAA;AACA,KApKA;AAqKA,IAAA,sBArKA,kCAqKA,IArKA,EAqKA,KArKA,EAqKA,QArKA,EAqKA;AACA,UAAA,KAAA,IAAA,KAAA,KAAA,KAAA,KAAA,CAAA,QAAA,EAAA;AACA,QAAA,QAAA,CAAA,aAAA,CAAA;AACA,OAFA,MAEA;AACA,QAAA,QAAA;AACA;AACA,KA3KA;AA4KA,IAAA,aA5KA,yBA4KA,IA5KA,EA4KA,KA5KA,EA4KA,QA5KA,EA4KA;AACA,UAAA,CAAA,KAAA,EAAA;AACA,QAAA,QAAA;AACA,OAFA,MAEA;AACA,YAAA,IAAA,MAAA,CAAA,4BAAA,EAAA,IAAA,CAAA,KAAA,CAAA,EAAA;AACA,cAAA,MAAA,GAAA;AACA,YAAA,SAAA,EAAA,UADA;AAEA,YAAA,SAAA,EAAA,OAFA;AAGA,YAAA,QAAA,EAAA,KAHA;AAIA,YAAA,MAAA,EAAA,KAAA;AAJA,WAAA;AAMA,UAAA,cAAA,CAAA,MAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,gBAAA,GAAA,CAAA,OAAA,EAAA;AACA,cAAA,QAAA;AACA,aAFA,MAEA;AACA,cAAA,QAAA,CAAA,SAAA,CAAA;AACA;AACA,WANA;AAOA,SAdA,MAcA;AACA,UAAA,QAAA,CAAA,eAAA,CAAA;AACA;AACA;AACA,KAlMA;AAmMA,IAAA,aAnMA,yBAmMA,IAnMA,EAmMA,KAnMA,EAmMA,QAnMA,EAmMA;AACA,UAAA,CAAA,KAAA,EAAA;AACA,QAAA,QAAA;AACA,OAFA,MAEA;AACA,YAAA,IAAA,MAAA,CAAA,wJAAA,EAAA,IAAA,CAAA,KAAA,CAAA,EAAA;AACA,cAAA,MAAA,GAAA;AACA,YAAA,SAAA,EAAA,UADA;AAEA,YAAA,SAAA,EAAA,OAFA;AAGA,YAAA,QAAA,EAAA,KAHA;AAIA,YAAA,MAAA,EAAA,KAAA;AAJA,WAAA;AAMA,UAAA,cAAA,CAAA,MAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,OAAA,CAAA,GAAA,CAAA,GAAA;;AACA,gBAAA,GAAA,CAAA,OAAA,EAAA;AACA,cAAA,QAAA;AACA,aAFA,MAEA;AACA,cAAA,QAAA,CAAA,QAAA,CAAA;AACA;AACA,WAPA;AAQA,SAfA,MAeA;AACA,UAAA,QAAA,CAAA,aAAA,CAAA;AACA;AACA;AACA,KA1NA;AA2NA,IAAA,gBA3NA,4BA2NA,IA3NA,EA2NA,KA3NA,EA2NA,QA3NA,EA2NA;AACA,UAAA,MAAA,GAAA;AACA,QAAA,SAAA,EAAA,UADA;AAEA,QAAA,SAAA,EAAA,UAFA;AAGA,QAAA,QAAA,EAAA,KAHA;AAIA,QAAA,MAAA,EAAA,KAAA;AAJA,OAAA;AAMA,MAAA,cAAA,CAAA,MAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,CAAA,OAAA,EAAA;AACA,UAAA,QAAA;AACA,SAFA,MAEA;AACA,UAAA,QAAA,CAAA,SAAA,CAAA;AACA;AACA,OANA;AAOA,KAzOA;AA0OA,IAAA,cA1OA,0BA0OA,IA1OA,EA0OA,KA1OA,EA0OA,QA1OA,EA0OA;AACA,UAAA,MAAA,GAAA;AACA,QAAA,SAAA,EAAA,UADA;AAEA,QAAA,SAAA,EAAA,SAFA;AAGA,QAAA,QAAA,EAAA,KAHA;AAIA,QAAA,MAAA,EAAA,KAAA;AAJA,OAAA;AAMA,MAAA,cAAA,CAAA,MAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,CAAA,OAAA,EAAA;AACA,UAAA,QAAA;AACA,SAFA,MAEA;AACA,UAAA,QAAA,CAAA,QAAA,CAAA;AACA;AACA,OANA;AAOA,KAxPA;AAyPA,IAAA,iBAzPA,6BAyPA,CAzPA,EAyPA;AACA,UAAA,KAAA,GAAA,CAAA,CAAA,MAAA,CAAA,KAAA;AACA,WAAA,YAAA,GAAA,KAAA,YAAA,IAAA,CAAA,CAAA,KAAA;AACA,KA5PA;AA6PA,IAAA,YAAA,EAAA,sBAAA,IAAA,EAAA;AACA,UAAA,QAAA,GAAA,IAAA,CAAA,IAAA;;AACA,UAAA,QAAA,CAAA,OAAA,CAAA,OAAA,IAAA,CAAA,EAAA;AACA,aAAA,QAAA,CAAA,OAAA,CAAA,OAAA;AACA,eAAA,KAAA;AACA,OALA,CAMA;;AACA,KApQA;AAqQA,IAAA,cArQA,0BAqQA,CArQA,EAqQA;AACA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,KAAA,CAAA,EAAA;AACA,aAAA,YAAA,GAAA,KAAA;AACA,OAFA,MAEA;AACA,aAAA,YAAA,GAAA,IAAA;AACA;AACA;AA3QA;AApEA,CAAA","sourcesContent":["<template>\n  <a-drawer\n          :title=\"title\"\n          :maskClosable=\"true\"\n          :width=\"drawerWidth\"\n          placement=\"right\"\n          :closable=\"true\"\n          @close=\"handleCancel\"\n          :visible=\"visible\"\n          style=\"height: 100%;\">\n\n    <template slot=\"title\">\n      <div style=\"width: 100%;\">\n        <span>{{ title }}</span>\n        <span style=\"display:inline-block;width:calc(100% - 51px);padding-right:10px;text-align: right\">\n          <a-button @click=\"toggleScreen\" icon=\"appstore\" style=\"height:20px;width:20px;border:0px\"></a-button>\n        </span>\n      </div>\n\n    </template>\n\n    <a-spin :spinning=\"confirmLoading\">\n      <a-form-model ref=\"form\" :model=\"model\" :rules=\"validatorRules\">\n\n        <a-form-model-item label=\"用户账号\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" prop=\"username\">\n          <a-input placeholder=\"请输入用户账号\" v-model=\"model.username\" :readOnly=\"!!model.id\"/>\n        </a-form-model-item>\n\n        <template v-if=\"!model.id\">\n          <a-form-model-item label=\"登录密码\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" prop=\"password\" >\n            <a-input type=\"password\" placeholder=\"请输入登录密码\" v-model=\"model.password\" />\n          </a-form-model-item>\n\n          <a-form-model-item label=\"确认密码\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" prop=\"confirmpassword\" >\n            <a-input type=\"password\" @blur=\"handleConfirmBlur\" placeholder=\"请重新输入登录密码\" v-model=\"model.confirmpassword\"/>\n          </a-form-model-item>\n        </template>\n\n        <a-form-model-item label=\"用户姓名\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" prop=\"realname\">\n          <a-input placeholder=\"请输入用户姓名\" v-model=\"model.realname\" />\n        </a-form-model-item>\n\n        <a-form-model-item label=\"工号\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" prop=\"workNo\">\n          <a-input placeholder=\"请输入工号\" v-model=\"model.workNo\" />\n        </a-form-model-item>\n\n        <a-form-model-item label=\"手机号码\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" prop=\"phone\">\n          <a-input placeholder=\"请输入手机号码\" v-model=\"model.phone\" />\n        </a-form-model-item>\n\n        <a-form-model-item label=\"职务\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n          <j-select-position placeholder=\"请选择职务\" :multiple=\"false\" v-model=\"model.post\"/>\n        </a-form-model-item>\n\n        <a-form-model-item label=\"角色分配\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" v-show=\"!roleDisabled\" >\n          <j-multi-select-tag\n                  :disabled=\"disableSubmit\"\n                  v-model=\"model.selectedroles\"\n                  :options=\"rolesOptions\"\n                  placeholder=\"请选择角色\">\n          </j-multi-select-tag>\n        </a-form-model-item>\n\n        <!--部门分配-->\n        <a-form-model-item label=\"部门分配\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" v-show=\"!departDisabled\">\n          <j-select-depart v-model=\"model.selecteddeparts\" :multi=\"true\" @back=\"backDepartInfo\" :backDepart=\"true\" :treeOpera=\"true\">></j-select-depart>\n        </a-form-model-item>\n\n        <!--租户分配-->\n        <a-form-model-item label=\"租户分配\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" v-show=\"!departDisabled\">\n          <j-multi-select-tag\n                  :disabled=\"disableSubmit\"\n                  v-model=\"model.relTenantIds\"\n                  :options=\"tenantsOptions\"\n                  placeholder=\"请选择租户\">\n          </j-multi-select-tag>\n        </a-form-model-item>\n\n        <a-form-model-item label=\"身份\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n          <a-radio-group  v-model=\"model.userIdentity\"  @change=\"identityChange\">\n            <a-radio :value=\"1\">普通用户</a-radio>\n            <a-radio :value=\"2\">上级</a-radio>\n          </a-radio-group>\n        </a-form-model-item>\n        <a-form-model-item label=\"负责部门\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\"  v-show=\"departIdShow==true\">\n          <j-multi-select-tag\n                  :disabled=\"disableSubmit\"\n                  v-model=\"model.departIds\"\n                  :options=\"nextDepartOptions\"\n                  placeholder=\"请选择负责部门\">\n          </j-multi-select-tag>\n        </a-form-model-item>\n\n        <a-form-model-item label=\"头像\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n          <j-image-upload class=\"avatar-uploader\" text=\"上传\" v-model=\"model.avatar\" ></j-image-upload>\n        </a-form-model-item>\n\n        <a-form-model-item label=\"生日\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n          <a-date-picker\n                  style=\"width: 100%\"\n                  placeholder=\"请选择生日\"\n                  v-model=\"model.birthday\"\n                  :format=\"dateFormat\"\n                  :getCalendarContainer=\"node => node.parentNode\"/>\n        </a-form-model-item>\n\n        <a-form-model-item label=\"性别\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n          <a-select  v-model=\"model.sex\"  placeholder=\"请选择性别\" :getPopupContainer= \"(target) => target.parentNode\">\n            <a-select-option :value=\"1\">男</a-select-option>\n            <a-select-option :value=\"2\">女</a-select-option>\n          </a-select>\n        </a-form-model-item>\n\n        <a-form-model-item label=\"邮箱\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" prop=\"email\">\n          <a-input placeholder=\"请输入邮箱\" v-model=\"model.email\" />\n        </a-form-model-item>\n\n        <a-form-model-item label=\"座机\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" prop=\"telephone\">\n          <a-input placeholder=\"请输入座机\" v-model=\"model.telephone\" />\n        </a-form-model-item>\n\n        <a-form-model-item label=\"工作流引擎\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n          <j-dict-select-tag  v-model=\"model.activitiSync\"  placeholder=\"请选择是否同步工作流引擎\" :type=\"'radio'\" dictCode=\"activiti_sync\"/>\n        </a-form-model-item>\n\n      </a-form-model>\n    </a-spin>\n\n\n    <div class=\"drawer-bootom-button\" v-show=\"!disableSubmit\">\n      <a-popconfirm title=\"确定放弃编辑？\" @confirm=\"handleCancel\" okText=\"确定\" cancelText=\"取消\">\n        <a-button style=\"margin-right: .8rem\">取消</a-button>\n      </a-popconfirm>\n      <a-button @click=\"handleSubmit\" type=\"primary\" :loading=\"confirmLoading\">提交</a-button>\n    </div>\n  </a-drawer>\n</template>\n\n<script>\n  import moment from 'moment'\n  import Vue from 'vue'\n  import { ACCESS_TOKEN } from \"@/store/mutation-types\"\n  import { getAction } from '@/api/manage'\n  import { addUser,editUser,queryUserRole,queryall } from '@/api/api'\n  import { disabledAuthFilter } from \"@/utils/authFilter\"\n  import { duplicateCheck } from '@/api/api'\n\n  export default {\n    name: \"UserModal\",\n    components: {\n    },\n    data () {\n      return {\n        departDisabled: false, //是否是我的部门调用该页面\n        roleDisabled: false, //是否是角色维护调用该页面\n        modalWidth:800,\n        drawerWidth:700,\n        modaltoggleFlag:true,\n        confirmDirty: false,\n        userId:\"\", //保存用户id\n        disableSubmit:false,\n        dateFormat:\"YYYY-MM-DD\",\n        validatorRules:{\n          username:[{required: true, message: '请输入用户账号!'},\n            {validator: this.validateUsername,}],\n          password: [{required: true,pattern:/^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[~!@#$%^&*()_+`\\-={}:\";'<>?,./]).{8,}$/,message: '密码由8位数字、大小写字母和特殊符号组成!'},\n            {validator: this.validateToNextPassword,trigger: 'change'}],\n          confirmpassword: [{required: true, message: '请重新输入登录密码!',},\n            { validator: this.compareToFirstPassword,}],\n          realname:[{ required: true, message: '请输入用户名称!' }],\n          phone: [{required: true, message: '请输入手机号!'}, {validator: this.validatePhone}],\n          email: [{validator: this.validateEmail}],\n          roles:{},\n          workNo:[ { required: true, message: '请输入工号' },\n            { validator: this.validateWorkNo }],\n          telephone: [{ pattern: /^0\\d{2,3}-[1-9]\\d{6,7}$/, message: '请输入正确的座机号码' },]\n        },\n        departIdShow:false,\n        title:\"操作\",\n        visible: false,\n        model: {},\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 5 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 16 },\n        },\n        uploadLoading:false,\n        confirmLoading: false,\n        headers:{},\n        url: {\n          fileUpload: window._CONFIG['domianURL']+\"/sys/common/upload\",\n          userWithDepart: \"/sys/user/userDepartList\", // 引入为指定用户查看部门信息需要的url\n          userId:\"/sys/user/generateUserId\", // 引入生成添加用户情况下的url\n          syncUserByUserName:\"/act/process/extActProcess/doSyncUserByUserName\",//同步用户到工作流\n          queryTenantList: '/sys/tenant/queryList'\n        },\n        tenantsOptions: [],\n        rolesOptions:[],\n        nextDepartOptions:[],\n      }\n    },\n    created () {\n      const token = Vue.ls.get(ACCESS_TOKEN);\n      this.headers = {\"X-Access-Token\":token}\n      this.initRoleList()\n      this.initTenantList()\n    },\n    computed:{\n      uploadAction:function () {\n        return this.url.fileUpload;\n      }\n    },\n    methods: {\n      add () {\n        this.refresh();\n        this.edit({activitiSync:'1',userIdentity:1});\n      },\n      edit (record) {\n        let that = this;\n        that.visible = true;\n        //根据屏幕宽度自适应抽屉宽度\n        this.resetScreenSize();\n        that.userId = record.id;\n        that.model = Object.assign({},{selectedroles:'',selecteddeparts:''}, record);\n        //身份为上级显示负责部门，否则不显示\n        if(this.model.userIdentity==2){\n          this.departIdShow=true;\n        }else{\n          this.departIdShow=false;\n        }\n\n        if(record.hasOwnProperty(\"id\")){\n          that.getUserRoles(record.id);\n          that.getUserDeparts(record.id);\n        }\n        console.log('that.model=',that.model)\n      },\n      isDisabledAuth(code){\n        return disabledAuthFilter(code);\n      },\n      //窗口最大化切换\n      toggleScreen(){\n        if(this.modaltoggleFlag){\n          this.modalWidth = window.innerWidth;\n        }else{\n          this.modalWidth = 800;\n        }\n        this.modaltoggleFlag = !this.modaltoggleFlag;\n      },\n      // 根据屏幕变化,设置抽屉尺寸\n      resetScreenSize(){\n        let screenWidth = document.body.clientWidth;\n        if(screenWidth < 500){\n          this.drawerWidth = screenWidth;\n        }else{\n          this.drawerWidth = 700;\n        }\n      },\n      //初始化租户字典\n      initTenantList(){\n        getAction(this.url.queryTenantList).then(res=>{\n          if(res.success){\n            this.tenantsOptions = res.result.map((item,index,arr)=>{\n              let c = {label:item.name, value: item.id+\"\"}\n              return c;\n            })\n            console.log('this.tenantsOptions: ',this.tenantsOptions)\n          }\n        })\n      },\n      //初始化角色字典\n      initRoleList(){\n        queryall().then((res)=>{\n          if(res.success){\n            this.rolesOptions = res.result.map((item,index,arr)=>{\n              let c = {label:item.roleName, value:item.id}\n              return c;\n            })\n            console.log('this.rolesOptions: ',this.rolesOptions)\n          }\n        });\n      },\n      getUserRoles(userid){\n        queryUserRole({userid:userid}).then((res)=>{\n          if(res.success){\n            this.model.selectedroles = res.result.join(\",\");\n            console.log('that.model.selectedroles=',this.model.selectedroles)\n          }\n        });\n      },\n      getUserDeparts(userid){\n        let that = this;\n        getAction(that.url.userWithDepart,{userId:userid}).then((res)=>{\n          if(res.success){\n            let departOptions=[];\n            let selectDepartKeys=[]\n            for (let i = 0; i < res.result.length; i++) {\n              selectDepartKeys.push(res.result[i].key);\n              //新增负责部门选择下拉框\n              departOptions.push({\n                value: res.result[i].key,\n                label: res.result[i].title\n              })\n            }\n            that.model.selecteddeparts = selectDepartKeys.join(\",\")\n            that.nextDepartOptions=departOptions;\n            console.log('that.nextDepartOptions=',that.nextDepartOptions)\n          }\n        })\n      },\n      backDepartInfo(info) {\n        this.model.departIds = this.model.selecteddeparts;\n        this.nextDepartOptions = info.map((item,index,arr)=>{\n          let c = {label:item.text, value: item.value+\"\"}\n          return c;\n        })\n      },\n      refresh () {\n        this.userId=\"\"\n        this.nextDepartOptions=[];\n        this.departIdShow=false;\n      },\n      close () {\n        this.$emit('close');\n        this.visible = false;\n        this.disableSubmit = false;\n        this.nextDepartOptions=[];\n        this.departIdShow=false;\n        this.$refs.form.resetFields();\n      },\n      moment,\n      handleSubmit () {\n        const that = this;\n        // 触发表单验证\n        this.$refs.form.validate(valid => {\n          if (valid) {\n            that.confirmLoading = true;\n            //如果是上级择传入departIds,否则为空\n            if(this.model.userIdentity!==2){\n              this.model.departIds=\"\";\n            }\n            let obj;\n            if(!this.model.id){\n              this.model.id = this.userId;\n              obj=addUser(this.model);\n            }else{\n              obj=editUser(this.model);\n            }\n            obj.then((res)=>{\n              if(res.success){\n                that.$message.success(res.message);\n                that.$emit('ok');\n              }else{\n                that.$message.warning(res.message);\n              }\n            }).finally(() => {\n              that.confirmLoading = false;\n              that.close();\n            })\n          }else{\n            return false;\n          }\n        })\n      },\n      handleCancel () {\n        this.close()\n      },\n      validateToNextPassword (rule, value, callback) {\n        const confirmpassword=this.model.confirmpassword;\n        if (value && confirmpassword && value !== confirmpassword) {\n          callback('两次输入的密码不一样！');\n        }\n        if (value && this.confirmDirty) {\n          this.$refs.form.validateField(['confirmpassword']);\n        }\n        callback();\n      },\n      compareToFirstPassword (rule, value, callback) {\n        if (value && value !== this.model.password) {\n          callback('两次输入的密码不一样！');\n        } else {\n          callback()\n        }\n      },\n      validatePhone(rule, value, callback){\n        if(!value){\n          callback()\n        }else{\n          if(new RegExp(/^1[3|4|5|7|8|9][0-9]\\d{8}$/).test(value)){\n            var params = {\n              tableName: 'sys_user',\n              fieldName: 'phone',\n              fieldVal: value,\n              dataId: this.userId\n            };\n            duplicateCheck(params).then((res) => {\n              if (res.success) {\n                callback()\n              } else {\n                callback(\"手机号已存在!\")\n              }\n            })\n          }else{\n            callback(\"请输入正确格式的手机号码!\");\n          }\n        }\n      },\n      validateEmail(rule, value, callback){\n        if(!value){\n          callback()\n        }else{\n          if(new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/).test(value)){\n            var params = {\n              tableName: 'sys_user',\n              fieldName: 'email',\n              fieldVal: value,\n              dataId: this.userId\n            };\n            duplicateCheck(params).then((res) => {\n              console.log(res)\n              if (res.success) {\n                callback()\n              } else {\n                callback(\"邮箱已存在!\")\n              }\n            })\n          }else{\n            callback(\"请输入正确格式的邮箱!\")\n          }\n        }\n      },\n      validateUsername(rule, value, callback){\n        var params = {\n          tableName: 'sys_user',\n          fieldName: 'username',\n          fieldVal: value,\n          dataId: this.userId\n        };\n        duplicateCheck(params).then((res) => {\n          if (res.success) {\n            callback()\n          } else {\n            callback(\"用户名已存在!\")\n          }\n        })\n      },\n      validateWorkNo(rule, value, callback){\n        var params = {\n          tableName: 'sys_user',\n          fieldName: 'work_no',\n          fieldVal: value,\n          dataId: this.userId\n        };\n        duplicateCheck(params).then((res) => {\n          if (res.success) {\n            callback()\n          } else {\n            callback(\"工号已存在!\")\n          }\n        })\n      },\n      handleConfirmBlur(e) {\n        const value = e.target.value;\n        this.confirmDirty = this.confirmDirty || !!value\n      },\n      beforeUpload: function(file){\n        var fileType = file.type;\n        if(fileType.indexOf('image')<0){\n          this.$message.warning('请上传图片');\n          return false;\n        }\n        //TODO 验证文件大小\n      },\n      identityChange(e){\n        if(e.target.value===1){\n          this.departIdShow=false;\n        }else{\n          this.departIdShow=true;\n        }\n      }\n    }\n  }\n</script>\n\n<style scoped>\n  .avatar-uploader > .ant-upload {\n    width:104px;\n    height:104px;\n  }\n  .ant-upload-select-picture-card i {\n    font-size: 49px;\n    color: #999;\n  }\n\n  .ant-upload-select-picture-card .ant-upload-text {\n    margin-top: 8px;\n    color: #666;\n  }\n\n  .ant-table-tbody .ant-table-row td{\n    padding-top:10px;\n    padding-bottom:10px;\n  }\n\n  .drawer-bootom-button {\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n    border-top: 1px solid #e8e8e8;\n    padding: 10px 16px;\n    text-align: right;\n    left: 0;\n    background: #fff;\n    border-radius: 0 0 2px 2px;\n  }\n\n  /*【JTC-502】 添加用户两个滚动条*/\n  /deep/ .ant-drawer-body {\n    padding-bottom: 53px;\n  }\n\n</style>\n"],"sourceRoot":"src/views/system/modules"}]}