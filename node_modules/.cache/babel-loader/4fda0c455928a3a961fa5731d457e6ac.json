{"remainingRequest":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\babel-loader\\lib\\index.js!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\views\\system\\modules\\DeptBaseInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\views\\system\\modules\\DeptBaseInfo.vue","mtime":1665386876000},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\babel-loader\\lib\\index.js","mtime":1665642924601},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js","mtime":1665642924058}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { queryIdTree } from '@/api/api';\nexport default {\n  name: 'DeptBaseInfo',\n  components: {},\n  data: function data() {\n    return {\n      departTree: [],\n      id: '',\n      model: {},\n      visible: false,\n      disable: true,\n      treeData: [],\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 3\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n  },\n  created: function created() {\n    this.loadTreeData();\n  },\n  methods: {\n    loadTreeData: function loadTreeData() {\n      var _this = this;\n\n      queryIdTree().then(function (res) {\n        if (res.success) {\n          for (var i = 0; i < res.result.length; i++) {\n            var temp = res.result[i];\n\n            _this.treeData.push(temp);\n          }\n        }\n      });\n    },\n    open: function open(record) {\n      this.visible = true; //update-begin---author:wangshuai ---date:20220211  for：[JTC-174]部门管理界面参考vue3的改改------------\n\n      this.model = Object.assign({}, record);\n      this.model.parentId = this.findTree(this.treeData, record.parentId);\n      this.model.orgCategory = this.orgCategoryText(record.orgCategory); //update-end---author:wangshuai ---date:20220211  for：[JTC-174]部门管理界面参考vue3的改改------------\n    },\n    clearForm: function clearForm() {\n      this.treeData = [];\n    },\n\n    /**\n     * 通过父id查找部门名称\n     * @param treeList 树数组\n     * @param id 父id\n     * @return id对应的部门名称\n     */\n    findTree: function findTree(treeList, id) {\n      for (var i = 0; i < treeList.length; i++) {\n        var item = treeList[i]; //如果当前id和父id相同则返回部门名称\n\n        if (item.key == id) {\n          return item.title;\n        }\n\n        var children = item.children; //存在子部门进行递归查询\n\n        if (children) {\n          var findResult = this.findTree(children, id); //返回的数据不为空，结束递归，返回结果\n\n          if (findResult) {\n            return findResult;\n          }\n        }\n      }\n    },\n\n    /**\n     * 将机构类型数值翻译成文本\n     * @param orgCategory 部门类别\n     * @return 部门类别对应的文本\n     */\n    orgCategoryText: function orgCategoryText(orgCategory) {\n      if (orgCategory == 1) {\n        return \"公司\";\n      } else if (orgCategory == 2) {\n        return \"部门\";\n      } else {\n        return \"岗位\";\n      }\n    }\n  }\n};",{"version":3,"sources":["DeptBaseInfo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAeA,SAAA,WAAA,QAAA,WAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,UAAA,EAAA,EAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,EADA;AAEA,MAAA,EAAA,EAAA,EAFA;AAGA,MAAA,KAAA,EAAA,EAHA;AAIA,MAAA,OAAA,EAAA,KAJA;AAKA,MAAA,OAAA,EAAA,IALA;AAMA,MAAA,QAAA,EAAA,EANA;AAOA,MAAA,QAAA,EAAA;AACA,QAAA,EAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SADA;AAEA,QAAA,EAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA;AAFA,OAPA;AAWA,MAAA,UAAA,EAAA;AACA,QAAA,EAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SADA;AAEA,QAAA,EAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA;AAFA;AAXA,KAAA;AAgBA,GApBA;AAqBA,EAAA,OArBA,qBAqBA;AACA,SAAA,YAAA;AACA,GAvBA;AAwBA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,0BACA;AAAA;;AACA,MAAA,WAAA,GAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,CAAA,OAAA,EAAA;AACA,eAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,GAAA,CAAA,MAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,gBAAA,IAAA,GAAA,GAAA,CAAA,MAAA,CAAA,CAAA,CAAA;;AACA,YAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,IAAA;AACA;AACA;AAEA,OARA;AASA,KAXA;AAYA,IAAA,IAZA,gBAYA,MAZA,EAYA;AACA,WAAA,OAAA,GAAA,IAAA,CADA,CAEA;;AACA,WAAA,KAAA,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,MAAA,CAAA;AACA,WAAA,KAAA,CAAA,QAAA,GAAA,KAAA,QAAA,CAAA,KAAA,QAAA,EAAA,MAAA,CAAA,QAAA,CAAA;AACA,WAAA,KAAA,CAAA,WAAA,GAAA,KAAA,eAAA,CAAA,MAAA,CAAA,WAAA,CAAA,CALA,CAMA;AACA,KAnBA;AAoBA,IAAA,SApBA,uBAoBA;AACA,WAAA,QAAA,GAAA,EAAA;AACA,KAtBA;;AAuBA;;;;;;AAMA,IAAA,QA7BA,oBA6BA,QA7BA,EA6BA,EA7BA,EA6BA;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,QAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,IAAA,GAAA,QAAA,CAAA,CAAA,CAAA,CADA,CAEA;;AACA,YAAA,IAAA,CAAA,GAAA,IAAA,EAAA,EAAA;AACA,iBAAA,IAAA,CAAA,KAAA;AACA;;AACA,YAAA,QAAA,GAAA,IAAA,CAAA,QAAA,CANA,CAOA;;AACA,YAAA,QAAA,EAAA;AACA,cAAA,UAAA,GAAA,KAAA,QAAA,CAAA,QAAA,EAAA,EAAA,CAAA,CADA,CAEA;;AACA,cAAA,UAAA,EAAA;AACA,mBAAA,UAAA;AACA;AACA;AACA;AACA,KA9CA;;AA+CA;;;;;AAKA,IAAA,eApDA,2BAoDA,WApDA,EAoDA;AACA,UAAA,WAAA,IAAA,CAAA,EAAA;AACA,eAAA,IAAA;AACA,OAFA,MAEA,IAAA,WAAA,IAAA,CAAA,EAAA;AACA,eAAA,IAAA;AACA,OAFA,MAEA;AACA,eAAA,IAAA;AACA;AACA;AA5DA;AAxBA,CAAA","sourcesContent":["<template>\n  <div :visible=\"visible\">\n    <a-descriptions size=\"small\" bordered :column=\"1\">\n      <a-descriptions-item label=\"机构名称\">{{model.departName}}</a-descriptions-item>\n      <a-descriptions-item label=\"上级部门\"><span>{{model.parentId}}</span></a-descriptions-item>\n      <a-descriptions-item label=\"机构编码\"><span>{{model.orgCode}}</span></a-descriptions-item>\n      <a-descriptions-item label=\"机构类型\"><span>{{model.orgCategory}}</span></a-descriptions-item>\n      <a-descriptions-item label=\"排序\"><span>{{model.departOrder}}</span></a-descriptions-item>\n      <a-descriptions-item label=\"手机号\"><span>{{model.mobile}}</span></a-descriptions-item>\n      <a-descriptions-item label=\"地址\"><span>{{model.address}}</span></a-descriptions-item>\n      <a-descriptions-item label=\"备注\"><span>{{model.memo}}</span></a-descriptions-item>\n    </a-descriptions>\n  </div>\n</template>\n<script>\n  import { queryIdTree } from '@/api/api'\n\n  export default {\n    name: 'DeptBaseInfo',\n    components: {},\n    data() {\n      return {\n        departTree: [],\n        id: '',\n        model: {},\n        visible: false,\n        disable: true,\n        treeData: [],\n        labelCol: {\n          xs: {span: 24},\n          sm: {span: 3}\n        },\n        wrapperCol: {\n          xs: {span: 24},\n          sm: {span: 16}\n        },\n      }\n    },\n    created() {\n      this.loadTreeData();\n    },\n    methods: {\n      loadTreeData() {\n        queryIdTree().then((res) => {\n          if (res.success) {\n            for (let i = 0; i < res.result.length; i++) {\n              let temp = res.result[i];\n              this.treeData.push(temp);\n            }\n          }\n\n        })\n      },\n      open(record) {\n        this.visible = true;\n        //update-begin---author:wangshuai ---date:20220211  for：[JTC-174]部门管理界面参考vue3的改改------------\n        this.model = Object.assign({}, record)\n        this.model.parentId = this.findTree(this.treeData,record.parentId);\n        this.model.orgCategory = this.orgCategoryText(record.orgCategory)\n        //update-end---author:wangshuai ---date:20220211  for：[JTC-174]部门管理界面参考vue3的改改------------\n        },\n      clearForm() {\n        this.treeData = [];\n      },\n      /**\n       * 通过父id查找部门名称\n       * @param treeList 树数组\n       * @param id 父id\n       * @return id对应的部门名称\n       */\n      findTree(treeList,id){\n        for (let i = 0; i < treeList.length; i++) {\n          let item = treeList[i];\n          //如果当前id和父id相同则返回部门名称\n          if (item.key == id) {\n            return item.title;\n          }\n          let children = item.children\n          //存在子部门进行递归查询\n          if(children){\n            let findResult = this.findTree(children, id);\n            //返回的数据不为空，结束递归，返回结果\n            if (findResult) {\n              return findResult\n            }\n          }\n        }\n      },\n      /**\n       * 将机构类型数值翻译成文本\n       * @param orgCategory 部门类别\n       * @return 部门类别对应的文本\n       */\n      orgCategoryText(orgCategory) {\n        if(orgCategory == 1){\n          return \"公司\";\n        }else if(orgCategory == 2){\n          return \"部门\";\n        }else{\n          return \"岗位\";\n        }\n      }\n    }\n  }\n</script>\n<style scoped lang=\"less\">\n  .ant-descriptions-view{\n    border: 1px solid #f0f0f0;\n  }\n  /deep/ .ant-descriptions-item-label{\n    width:180px\n  }\n  /deep/ .ant-descriptions-item-content span{\n    color:#000000d9;\n  }\n  /deep/ .ant-descriptions-bordered .ant-descriptions-row{\n    border-bottom: 1px solid #f0f0f0 !important;\n  }\n  /deep/ .ant-descriptions-bordered .ant-descriptions-item-label{\n    border-right:  1px solid #f0f0f0;\n  }\n</style>"],"sourceRoot":"src/views/system/modules"}]}