{"remainingRequest":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\babel-loader\\lib\\index.js!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\components\\jeecg\\JEasyCron\\tabs\\mixin.js","dependencies":[{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\components\\jeecg\\JEasyCron\\tabs\\mixin.js","mtime":1665386876000},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\babel-loader\\lib\\index.js","mtime":1665642924601},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1665642923347}],"contextDependencies":[],"result":["// 主要用于日和星期的互斥使用\nvar TYPE_NOT_SET = 'TYPE_NOT_SET';\nvar TYPE_EVERY = 'TYPE_EVERY';\nvar TYPE_RANGE = 'TYPE_RANGE';\nvar TYPE_LOOP = 'TYPE_LOOP';\nvar TYPE_WORK = 'TYPE_WORK';\nvar TYPE_LAST = 'TYPE_LAST';\nvar TYPE_SPECIFY = 'TYPE_SPECIFY';\nvar DEFAULT_VALUE = '?';\nexport default {\n  model: {\n    prop: 'prop',\n    event: 'change'\n  },\n  props: {\n    prop: {\n      type: String,\n      default: DEFAULT_VALUE\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    var type = TYPE_EVERY;\n    return {\n      DEFAULT_VALUE: DEFAULT_VALUE,\n      // 类型\n      type: type,\n      // 启用日或者星期互斥用\n      TYPE_NOT_SET: TYPE_NOT_SET,\n      TYPE_EVERY: TYPE_EVERY,\n      TYPE_RANGE: TYPE_RANGE,\n      TYPE_LOOP: TYPE_LOOP,\n      TYPE_WORK: TYPE_WORK,\n      TYPE_LAST: TYPE_LAST,\n      TYPE_SPECIFY: TYPE_SPECIFY,\n      // 对于不同的类型，所定义的值也有所不同\n      valueRange: {\n        start: 0,\n        end: 0\n      },\n      valueLoop: {\n        start: 0,\n        interval: 1\n      },\n      valueWeek: {\n        start: 0,\n        end: 0\n      },\n      valueList: [],\n      valueWork: 1,\n      maxValue: 0,\n      minValue: 0\n    };\n  },\n  watch: {\n    prop: function prop(newVal, oldVal) {\n      if (newVal === this.value_c) {\n        // console.info('skip ' + newVal)\n        return;\n      }\n\n      this.parseProp(newVal);\n    }\n  },\n  computed: {\n    value_c: function value_c() {\n      var result = [];\n\n      switch (this.type) {\n        case TYPE_NOT_SET:\n          result.push('?');\n          break;\n\n        case TYPE_EVERY:\n          result.push('*');\n          break;\n\n        case TYPE_RANGE:\n          result.push(\"\".concat(this.valueRange.start, \"-\").concat(this.valueRange.end));\n          break;\n\n        case TYPE_LOOP:\n          result.push(\"\".concat(this.valueLoop.start, \"/\").concat(this.valueLoop.interval));\n          break;\n\n        case TYPE_WORK:\n          result.push(\"\".concat(this.valueWork, \"W\"));\n          break;\n\n        case TYPE_LAST:\n          result.push('L');\n          break;\n\n        case TYPE_SPECIFY:\n          if (this.valueList.length === 0) {\n            this.valueList.push(this.minValue);\n          }\n\n          result.push(this.valueList.join(','));\n          break;\n\n        default:\n          result.push(this.DEFAULT_VALUE);\n          break;\n      }\n\n      return result.length > 0 ? result.join('') : this.DEFAULT_VALUE;\n    },\n    // 指定值范围区间，介于最小值和最大值之间\n    specifyRange: function specifyRange() {\n      var range = [];\n\n      for (var i = this.minValue; i <= this.maxValue; i++) {\n        range.push(i);\n      }\n\n      return range;\n    }\n  },\n  methods: {\n    parseProp: function parseProp(value) {\n      if (value === this.value_c) {\n        // console.info('same ' + value)\n        return;\n      }\n\n      if (typeof this.preProcessProp === 'function') {\n        value = this.preProcessProp(value);\n      }\n\n      try {\n        if (!value || value === this.DEFAULT_VALUE) {\n          this.type = TYPE_EVERY;\n        } else if (value.indexOf('?') >= 0) {\n          this.type = TYPE_NOT_SET;\n        } else if (value.indexOf('-') >= 0) {\n          this.type = TYPE_RANGE;\n          var values = value.split('-');\n\n          if (values.length >= 2) {\n            this.valueRange.start = parseInt(values[0]);\n            this.valueRange.end = parseInt(values[1]);\n          }\n        } else if (value.indexOf('/') >= 0) {\n          this.type = TYPE_LOOP;\n\n          var _values = value.split('/');\n\n          if (_values.length >= 2) {\n            this.valueLoop.start = value[0] === '*' ? 0 : parseInt(_values[0]);\n            this.valueLoop.interval = parseInt(_values[1]);\n          }\n        } else if (value.indexOf('W') >= 0) {\n          this.type = TYPE_WORK;\n\n          var _values2 = value.split('W');\n\n          if (!_values2[0] && !isNaN(_values2[0])) {\n            this.valueWork = parseInt(_values2[0]);\n          }\n        } else if (value.indexOf('L') >= 0) {\n          this.type = TYPE_LAST;\n\n          var _values3 = value.split('L');\n\n          this.valueLast = parseInt(_values3[0]);\n        } else if (value.indexOf(',') >= 0 || !isNaN(value)) {\n          this.type = TYPE_SPECIFY;\n          this.valueList = value.split(',').map(function (item) {\n            return parseInt(item);\n          });\n        } else {\n          this.type = TYPE_EVERY;\n        }\n      } catch (e) {\n        // console.info(e)\n        this.type = TYPE_EVERY;\n      }\n    }\n  }\n};",{"version":3,"sources":["D:/云晟/前端/ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326/src/components/jeecg/JEasyCron/tabs/mixin.js"],"names":["TYPE_NOT_SET","TYPE_EVERY","TYPE_RANGE","TYPE_LOOP","TYPE_WORK","TYPE_LAST","TYPE_SPECIFY","DEFAULT_VALUE","model","prop","event","props","type","String","default","disabled","Boolean","data","valueRange","start","end","valueLoop","interval","valueWeek","valueList","valueWork","maxValue","minValue","watch","newVal","oldVal","value_c","parseProp","computed","result","push","length","join","specifyRange","range","i","methods","value","preProcessProp","indexOf","values","split","parseInt","isNaN","valueLast","map","item","e"],"mappings":"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","sourcesContent":["// 主要用于日和星期的互斥使用\nconst TYPE_NOT_SET = 'TYPE_NOT_SET'\nconst TYPE_EVERY = 'TYPE_EVERY'\nconst TYPE_RANGE = 'TYPE_RANGE'\nconst TYPE_LOOP = 'TYPE_LOOP'\nconst TYPE_WORK = 'TYPE_WORK'\nconst TYPE_LAST = 'TYPE_LAST'\nconst TYPE_SPECIFY = 'TYPE_SPECIFY'\n\nconst DEFAULT_VALUE = '?'\n\nexport default {\n  model: {\n    prop: 'prop',\n    event: 'change'\n  },\n  props: {\n    prop: {\n      type: String,\n      default: DEFAULT_VALUE\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data () {\n    const type = TYPE_EVERY\n    return {\n      DEFAULT_VALUE,\n      // 类型\n      type,\n      // 启用日或者星期互斥用\n      TYPE_NOT_SET,\n      TYPE_EVERY,\n      TYPE_RANGE,\n      TYPE_LOOP,\n      TYPE_WORK,\n      TYPE_LAST,\n      TYPE_SPECIFY,\n      // 对于不同的类型，所定义的值也有所不同\n      valueRange: {\n        start: 0,\n        end: 0\n      },\n      valueLoop: {\n        start: 0,\n        interval: 1\n      },\n      valueWeek: {\n        start: 0,\n        end: 0\n      },\n      valueList: [],\n      valueWork: 1,\n      maxValue: 0,\n      minValue: 0\n    }\n  },\n  watch: {\n    prop (newVal, oldVal) {\n      if (newVal === this.value_c) {\n        // console.info('skip ' + newVal)\n        return\n      }\n      this.parseProp(newVal)\n    }\n  },\n  computed: {\n    value_c () {\n      let result = []\n      switch (this.type) {\n        case TYPE_NOT_SET:\n          result.push('?')\n          break\n        case TYPE_EVERY:\n          result.push('*')\n          break\n        case TYPE_RANGE:\n          result.push(`${this.valueRange.start}-${this.valueRange.end}`)\n          break\n        case TYPE_LOOP:\n          result.push(`${this.valueLoop.start}/${this.valueLoop.interval}`)\n          break\n        case TYPE_WORK:\n          result.push(`${this.valueWork}W`)\n          break\n        case TYPE_LAST:\n          result.push('L')\n          break\n        case TYPE_SPECIFY:\n          if (this.valueList.length === 0) {\n            this.valueList.push(this.minValue)\n          }\n          result.push(this.valueList.join(','))\n          break\n        default:\n          result.push(this.DEFAULT_VALUE)\n          break\n      }\n      return result.length > 0 ? result.join('') : this.DEFAULT_VALUE\n    },\n    // 指定值范围区间，介于最小值和最大值之间\n    specifyRange() {\n      let range = []\n      for (let i = this.minValue; i <= this.maxValue; i++) {\n        range.push(i)\n      }\n      return range\n    },\n  },\n  methods: {\n    parseProp (value) {\n      if (value === this.value_c) {\n        // console.info('same ' + value)\n        return\n      }\n      if (typeof (this.preProcessProp) === 'function') {\n        value = this.preProcessProp(value)\n      }\n      try {\n        if (!value || value === this.DEFAULT_VALUE) {\n          this.type = TYPE_EVERY\n        } else if (value.indexOf('?') >= 0) {\n          this.type = TYPE_NOT_SET\n        } else if (value.indexOf('-') >= 0) {\n          this.type = TYPE_RANGE\n          const values = value.split('-')\n          if (values.length >= 2) {\n            this.valueRange.start = parseInt(values[0])\n            this.valueRange.end = parseInt(values[1])\n          }\n        } else if (value.indexOf('/') >= 0) {\n          this.type = TYPE_LOOP\n          const values = value.split('/')\n          if (values.length >= 2) {\n            this.valueLoop.start = value[0] === '*' ? 0 : parseInt(values[0])\n            this.valueLoop.interval = parseInt(values[1])\n          }\n        } else if (value.indexOf('W') >= 0) {\n          this.type = TYPE_WORK\n          const values = value.split('W')\n          if (!values[0] && !isNaN(values[0])) {\n            this.valueWork = parseInt(values[0])\n          }\n        } else if (value.indexOf('L') >= 0) {\n          this.type = TYPE_LAST\n          const values = value.split('L')\n          this.valueLast = parseInt(values[0])\n        } else if (value.indexOf(',') >= 0 || !isNaN(value)) {\n          this.type = TYPE_SPECIFY\n          this.valueList = value.split(',').map(item => parseInt(item))\n        } else {\n          this.type = TYPE_EVERY\n        }\n      } catch (e) {\n        // console.info(e)\n        this.type = TYPE_EVERY\n      }\n    }\n  }\n}\n"]}]}