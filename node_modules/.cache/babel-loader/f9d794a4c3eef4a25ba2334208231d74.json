{"remainingRequest":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\babel-loader\\lib\\index.js!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\views\\system\\modules\\DictModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\views\\system\\modules\\DictModal.vue","mtime":1665386876000},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\babel-loader\\lib\\index.js","mtime":1665642924601},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js","mtime":1665642924058}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport pick from 'lodash.pick';\nimport { addDict, editDict, duplicateCheck } from '@/api/api';\nexport default {\n  name: 'DictModal',\n  data: function data() {\n    return {\n      value: 1,\n      title: '操作',\n      visible: false,\n      model: {},\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      confirmLoading: false,\n      validatorRules: {\n        dictName: [{\n          required: true,\n          message: '请输入字典名称!'\n        }],\n        dictCode: [{\n          required: true,\n          message: '请输入字典编码!'\n        }, {\n          validator: this.validateDictCode\n        }]\n      }\n    };\n  },\n  created: function created() {},\n  methods: {\n    validateDictCode: function validateDictCode(rule, value, callback) {\n      // 重复校验\n      var params = {\n        tableName: 'sys_dict',\n        fieldName: 'dict_code',\n        fieldVal: value,\n        dataId: this.model.id\n      };\n      duplicateCheck(params).then(function (res) {\n        if (res.success) {\n          callback();\n        } else {\n          callback(res.message);\n        }\n      });\n    },\n    handleChange: function handleChange(value) {\n      this.model.status = value;\n    },\n    add: function add() {\n      this.edit({});\n    },\n    edit: function edit(record) {\n      if (record.id) {\n        this.visiblekey = true;\n      } else {\n        this.visiblekey = false;\n      }\n\n      this.model = Object.assign({}, record);\n      this.visible = true;\n    },\n    // 确定\n    handleOk: function handleOk() {\n      var _this = this;\n\n      var that = this; // 触发表单验证\n\n      this.$refs.form.validate(function (valid) {\n        if (valid) {\n          that.confirmLoading = true;\n          _this.model.dictName = (_this.model.dictName || '').trim();\n          _this.model.dictCode = (_this.model.dictCode || '').trim();\n          _this.model.description = (_this.model.description || '').trim();\n          var obj;\n\n          if (!_this.model.id) {\n            obj = addDict(_this.model);\n          } else {\n            obj = editDict(_this.model);\n          }\n\n          obj.then(function (res) {\n            if (res.success) {\n              that.$message.success(res.message);\n              that.$emit('ok');\n            } else {\n              that.$message.warning(res.message);\n            }\n          }).finally(function () {\n            that.confirmLoading = false;\n            that.close();\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    // 关闭\n    handleCancel: function handleCancel() {\n      this.close();\n    },\n    close: function close() {\n      this.$emit('close');\n      this.visible = false;\n      this.$refs.form.resetFields();\n    }\n  }\n};",{"version":3,"sources":["DictModal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <a-modal\n    :title=\"title\"\n    :width=\"600\"\n    :visible=\"visible\"\n    :confirmLoading=\"confirmLoading\"\n    @ok=\"handleOk\"\n    @cancel=\"handleCancel\"\n    cancelText=\"关闭\"\n  >\n    <a-spin :spinning=\"confirmLoading\">\n      <a-form-model ref=\"form\" :model=\"model\" :rules=\"validatorRules\">\n\n        <a-form-model-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          prop=\"dictName\"\n          required\n          label=\"字典名称\">\n          <a-input placeholder=\"请输入字典名称\" v-model=\"model.dictName\"/>\n        </a-form-model-item>\n\n        <a-form-model-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          prop=\"dictCode\"\n          required\n          label=\"字典编码\">\n          <a-input placeholder=\"请输入字典编码\" v-model=\"model.dictCode\"/>\n        </a-form-model-item>\n\n        <a-form-model-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"描述\">\n          <a-input v-model=\"model.description\"/>\n        </a-form-model-item>\n\n      </a-form-model>\n    </a-spin>\n  </a-modal>\n</template>\n\n<script>\n  import pick from 'lodash.pick'\n  import { addDict, editDict, duplicateCheck } from '@/api/api'\n\n  export default {\n    name: 'DictModal',\n    data() {\n      return {\n        value: 1,\n        title: '操作',\n        visible: false,\n        model: {},\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 5 }\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 16 }\n        },\n        confirmLoading: false,\n        validatorRules: {\n          dictName: [{ required: true, message: '请输入字典名称!' }],\n          dictCode: [\n            { required: true, message: '请输入字典编码!' },\n            { validator: this.validateDictCode }]\n          }\n      }\n    },\n    created() {\n    },\n    methods: {\n      validateDictCode(rule, value, callback) {\n        // 重复校验\n        var params = {\n          tableName: 'sys_dict',\n          fieldName: 'dict_code',\n          fieldVal: value,\n          dataId: this.model.id\n        }\n        duplicateCheck(params).then((res) => {\n          if (res.success) {\n            callback()\n          } else {\n            callback(res.message)\n          }\n        })\n      },\n      handleChange(value) {\n        this.model.status = value\n      },\n      add() {\n        this.edit({})\n      },\n      edit(record) {\n        if (record.id) {\n          this.visiblekey = true\n        } else {\n          this.visiblekey = false\n        }\n        this.model = Object.assign({}, record)\n        this.visible = true\n      },\n      // 确定\n      handleOk() {\n        const that = this\n        // 触发表单验证\n        this.$refs.form.validate(valid => {\n          if (valid) {\n            that.confirmLoading = true\n            this.model.dictName = (this.model.dictName || '').trim()\n            this.model.dictCode = (this.model.dictCode || '').trim()\n            this.model.description = (this.model.description || '').trim()\n            let obj\n            if (!this.model.id) {\n              obj = addDict(this.model)\n            } else {\n              obj = editDict(this.model)\n            }\n            obj.then((res) => {\n              if (res.success) {\n                that.$message.success(res.message)\n                that.$emit('ok')\n              } else {\n                that.$message.warning(res.message)\n              }\n            }).finally(() => {\n              that.confirmLoading = false\n              that.close()\n            })\n          }else{\n            return false;\n          }\n        })\n      },\n      // 关闭\n      handleCancel() {\n        this.close()\n      },\n      close() {\n        this.$emit('close')\n        this.visible = false\n        this.$refs.form.resetFields();\n      }\n    }\n  }\n</script>"],"sourceRoot":"src/views/system/modules"}]}