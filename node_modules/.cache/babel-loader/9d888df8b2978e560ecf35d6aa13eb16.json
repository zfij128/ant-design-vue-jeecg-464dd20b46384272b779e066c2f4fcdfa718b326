{"remainingRequest":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\babel-loader\\lib\\index.js!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\views\\user\\alteration\\Step3.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\views\\user\\alteration\\Step3.vue","mtime":1665386876000},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\babel-loader\\lib\\index.js","mtime":1665642924601},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js","mtime":1665642924058}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getAction } from '@/api/manage';\nexport default {\n  name: \"Step3\",\n  //    components: {\n  //      Result\n  //    },\n  props: ['userList'],\n  data: function data() {\n    return {\n      model: {},\n      layout: {\n        labelCol: {\n          span: 5\n        },\n        wrapperCol: {\n          span: 19\n        }\n      },\n      loading: false,\n      accountName: this.userList.username,\n      validatorRules: {\n        password: [{\n          required: true,\n          pattern: /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[~!@#$%^&*()_+`\\-={}:\";'<>?,.\\/]).{8,}$/,\n          message: '密码由8位数字、大小写字母和特殊符号组成!!'\n        }],\n        confirmPassword: [{\n          required: true,\n          message: '密码不能为空!'\n        }, {\n          validator: this.handlePasswordCheck\n        }]\n      }\n    };\n  },\n  methods: {\n    nextStep: function nextStep() {\n      var that = this;\n      that.loading = true;\n      that.$refs['form'].validate(function (success) {\n        if (success === true) {\n          var params = {\n            username: that.userList.username,\n            password: that.model.password,\n            smscode: that.userList.smscode,\n            phone: that.userList.phone\n          };\n          getAction(\"/sys/user/passwordChange\", params).then(function (res) {\n            if (res.success) {\n              var userList = {\n                username: that.userList.username\n              };\n              console.log(userList);\n              setTimeout(function () {\n                that.$emit('nextStep', userList);\n              }, 1500);\n            } else {\n              that.passwordFailed(res.message);\n              that.loading = false;\n            }\n          });\n        } else {\n          that.loading = false;\n        }\n      });\n    },\n    prevStep: function prevStep() {\n      this.$emit('prevStep', this.userList);\n    },\n    handlePasswordCheck: function handlePasswordCheck(rule, value, callback) {\n      var password = this.model['password'];\n\n      if (value && password && value.trim() !== password.trim()) {\n        callback(new Error('两次密码不一致'));\n      }\n\n      callback();\n    },\n    passwordFailed: function passwordFailed(err) {\n      this.$notification['error']({\n        message: \"更改密码失败\",\n        description: err,\n        duration: 4\n      });\n    }\n  }\n};",{"version":3,"sources":["Step3.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAyBA,SAAA,SAAA,QAAA,cAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA;AACA;AACA;AACA,EAAA,KAAA,EAAA,CAAA,UAAA,CALA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,MAAA,EAAA;AACA,QAAA,QAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SADA;AAEA,QAAA,UAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA;AAFA,OAFA;AAMA,MAAA,OAAA,EAAA,KANA;AAOA,MAAA,WAAA,EAAA,KAAA,QAAA,CAAA,QAPA;AAQA,MAAA,cAAA,EAAA;AACA,QAAA,QAAA,EAAA,CAAA;AACA,UAAA,QAAA,EAAA,IADA;AACA,UAAA,OAAA,EAAA,qEADA;AACA,UAAA,OAAA,EAAA;AADA,SAAA,CADA;AAIA,QAAA,eAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA,EAEA;AAAA,UAAA,SAAA,EAAA,KAAA;AAAA,SAFA;AAJA;AARA,KAAA;AAkBA,GAzBA;AA0BA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,UAAA,IAAA,GAAA,IAAA;AACA,MAAA,IAAA,CAAA,OAAA,GAAA,IAAA;AACA,MAAA,IAAA,CAAA,KAAA,CAAA,MAAA,EAAA,QAAA,CAAA,UAAA,OAAA,EAAA;AACA,YAAA,OAAA,KAAA,IAAA,EAAA;AACA,cAAA,MAAA,GAAA;AACA,YAAA,QAAA,EAAA,IAAA,CAAA,QAAA,CAAA,QADA;AAEA,YAAA,QAAA,EAAA,IAAA,CAAA,KAAA,CAAA,QAFA;AAGA,YAAA,OAAA,EAAA,IAAA,CAAA,QAAA,CAAA,OAHA;AAIA,YAAA,KAAA,EAAA,IAAA,CAAA,QAAA,CAAA;AAJA,WAAA;AAMA,UAAA,SAAA,CAAA,0BAAA,EAAA,MAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,gBAAA,GAAA,CAAA,OAAA,EAAA;AACA,kBAAA,QAAA,GAAA;AACA,gBAAA,QAAA,EAAA,IAAA,CAAA,QAAA,CAAA;AADA,eAAA;AAGA,cAAA,OAAA,CAAA,GAAA,CAAA,QAAA;AACA,cAAA,UAAA,CAAA,YAAA;AACA,gBAAA,IAAA,CAAA,KAAA,CAAA,UAAA,EAAA,QAAA;AACA,eAFA,EAEA,IAFA,CAAA;AAGA,aARA,MAQA;AACA,cAAA,IAAA,CAAA,cAAA,CAAA,GAAA,CAAA,OAAA;AACA,cAAA,IAAA,CAAA,OAAA,GAAA,KAAA;AACA;AACA,WAbA;AAcA,SArBA,MAqBA;AACA,UAAA,IAAA,CAAA,OAAA,GAAA,KAAA;AACA;AACA,OAzBA;AA0BA,KA9BA;AA+BA,IAAA,QA/BA,sBA+BA;AACA,WAAA,KAAA,CAAA,UAAA,EAAA,KAAA,QAAA;AACA,KAjCA;AAmCA,IAAA,mBAnCA,+BAmCA,IAnCA,EAmCA,KAnCA,EAmCA,QAnCA,EAmCA;AACA,UAAA,QAAA,GAAA,KAAA,KAAA,CAAA,UAAA,CAAA;;AACA,UAAA,KAAA,IAAA,QAAA,IAAA,KAAA,CAAA,IAAA,OAAA,QAAA,CAAA,IAAA,EAAA,EAAA;AACA,QAAA,QAAA,CAAA,IAAA,KAAA,CAAA,SAAA,CAAA,CAAA;AACA;;AACA,MAAA,QAAA;AACA,KAzCA;AA0CA,IAAA,cA1CA,0BA0CA,GA1CA,EA0CA;AACA,WAAA,aAAA,CAAA,OAAA,EAAA;AACA,QAAA,OAAA,EAAA,QADA;AAEA,QAAA,WAAA,EAAA,GAFA;AAGA,QAAA,QAAA,EAAA;AAHA,OAAA;AAKA;AAhDA;AA1BA,CAAA","sourcesContent":["<template>\n  <div>\n    <a-form-model ref=\"form\" :model=\"model\" :rules=\"validatorRules\" class=\"password-retrieval-form\">\n\n      <a-form-model-item label=\"账号名\" v-bind=\"layout\">\n        <a-input type=\"text\" :value=\"accountName\" disabled/>\n      </a-form-model-item>\n\n      <a-form-model-item prop=\"password\" label=\"新密码\" v-bind=\"layout\" class=\"stepFormText\">\n        <a-input v-model=\"model.password\" type=\"password\" autocomplete=\"false\"/>\n      </a-form-model-item>\n\n      <a-form-model-item prop=\"confirmPassword\" label=\"确认密码\" v-bind=\"layout\" class=\"stepFormText\">\n        <a-input v-model=\"model.confirmPassword\" type=\"password\" autocomplete=\"false\"/>\n      </a-form-model-item>\n\n      <a-form-model-item :wrapperCol=\"{span: 19, offset: 5}\">\n        <a-button style=\"margin-left: 8px\" @click=\"prevStep\">上一步</a-button>\n        <a-button :loading=\"loading\" type=\"primary\" @click=\"nextStep\" style=\"margin-left:20px\">提交</a-button>\n      </a-form-model-item>\n    </a-form-model>\n  </div>\n</template>\n\n<script>\n  import { getAction } from '@/api/manage'\n  export default {\n    name: \"Step3\",\n//    components: {\n//      Result\n//    },\n    props: ['userList'],\n    data () {\n      return {\n        model:{},\n        layout: {\n          labelCol: { span: 5 },\n          wrapperCol: { span: 19 },\n        },\n        loading: false,\n        accountName: this.userList.username,\n        validatorRules: {\n          password: [{\n            required: true, pattern: /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[~!@#$%^&*()_+`\\-={}:\";'<>?,.\\/]).{8,}$/, message: '密码由8位数字、大小写字母和特殊符号组成!!'\n          }],\n          confirmPassword: [\n            { required: true, message: '密码不能为空!'},\n            { validator: this.handlePasswordCheck}\n          ]\n        }\n      }\n    },\n    methods: {\n      nextStep () {\n        let that = this\n        that.loading = true\n        that.$refs['form'].validate(success => {\n          if (success === true) {\n            let params = {\n              username: that.userList.username,\n              password: that.model.password,\n              smscode: that.userList.smscode,\n              phone: that.userList.phone,\n            }\n            getAction(\"/sys/user/passwordChange\", params).then((res) => {\n              if (res.success) {\n                let userList = {\n                  username: that.userList.username\n                }\n                console.log(userList);\n                setTimeout(function() {\n                  that.$emit('nextStep', userList)\n                }, 1500)\n              } else {\n                that.passwordFailed(res.message);\n                that.loading = false\n              }\n            })\n          } else {\n            that.loading = false\n          }\n        })\n      },\n      prevStep () {\n        this.$emit('prevStep', this.userList)\n      },\n\n      handlePasswordCheck (rule, value, callback) {\n        let password = this.model['password']\n        if (value && password && value.trim() !== password.trim()) {\n          callback(new Error('两次密码不一致'))\n        }\n        callback()\n      },\n      passwordFailed(err){\n        this.$notification[ 'error' ]({\n          message: \"更改密码失败\",\n          description:err,\n          duration: 4,\n        });\n      },\n    }\n  }\n</script>\n<style lang=\"less\" scoped>\n  .stepFormText {\n    margin-bottom: 24px;\n  }\n\n  .ant-form-item-label,\n  .ant-form-item-control {\n    line-height: 22px;\n  }\n\n</style>"],"sourceRoot":"src/views/user/alteration"}]}