{"remainingRequest":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\babel-loader\\lib\\index.js!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\views\\system\\modules\\SysPositionModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\views\\system\\modules\\SysPositionModal.vue","mtime":1665386876000},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\babel-loader\\lib\\index.js","mtime":1665642924601},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js","mtime":1665642924058}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport pick from 'lodash.pick';\nimport { httpAction } from '@/api/manage';\nimport { duplicateCheck } from '@/api/api';\nimport JDictSelectTag from '@/components/dict/JDictSelectTag';\nvar validatorCodeTimer = null;\nexport default {\n  name: 'SysPositionModal',\n  components: {\n    JDictSelectTag: JDictSelectTag\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      title: '操作',\n      visible: false,\n      model: {},\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      confirmLoading: false,\n      validatorRules: {\n        code: [{\n          required: true,\n          message: '请输入职务编码'\n        }, {\n          validator: function validator(rule, value, callback) {\n            // 函数消抖的简单实现，防止一段时间内发送多次请求\n            if (validatorCodeTimer) {\n              // 停止上次开启的定时器\n              clearTimeout(validatorCodeTimer);\n            }\n\n            validatorCodeTimer = setTimeout(function () {\n              duplicateCheck({\n                tableName: 'sys_position',\n                fieldName: 'code',\n                fieldVal: value,\n                dataId: _this.model.id\n              }).then(function (res) {\n                if (res.success) {\n                  callback();\n                } else {\n                  callback(res.message);\n                }\n              }).catch(console.error);\n            }, 300);\n          }\n        }],\n        name: [{\n          required: true,\n          message: '请输入职务名称'\n        }],\n        postRank: [{\n          required: true,\n          message: '请选择职级'\n        }]\n      },\n      url: {\n        add: '/sys/position/add',\n        edit: '/sys/position/edit'\n      },\n      readOnly: false\n    };\n  },\n  created: function created() {},\n  methods: {\n    add: function add() {\n      this.edit({});\n    },\n    edit: function edit(record) {\n      this.model = Object.assign({}, record);\n      this.visible = true;\n\n      if (record.id) {\n        this.readOnly = true;\n      } else {\n        this.readOnly = false;\n      }\n    },\n    close: function close() {\n      this.$emit('close');\n      this.visible = false;\n      this.$refs.form.resetFields();\n    },\n    handleOk: function handleOk() {\n      var _this2 = this;\n\n      var that = this; // 触发表单验证\n\n      this.$refs.form.validate(function (valid) {\n        if (valid) {\n          that.confirmLoading = true;\n          var httpurl = '';\n          var method = '';\n\n          if (!_this2.model.id) {\n            httpurl += _this2.url.add;\n            method = 'post';\n          } else {\n            httpurl += _this2.url.edit;\n            method = 'put';\n          }\n\n          httpAction(httpurl, _this2.model, method).then(function (res) {\n            if (res.success) {\n              that.$message.success(res.message);\n              that.$emit('ok');\n            } else {\n              that.$message.warning(res.message);\n            }\n          }).finally(function () {\n            that.confirmLoading = false;\n            that.close();\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.close();\n    }\n  }\n};",{"version":3,"sources":["SysPositionModal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <a-modal\n    :title=\"title\"\n    :width=\"800\"\n    :visible=\"visible\"\n    :maskClosable=\"false\"\n    :confirmLoading=\"confirmLoading\"\n    @ok=\"handleOk\"\n    @cancel=\"handleCancel\"\n    cancelText=\"关闭\">\n\n    <a-spin :spinning=\"confirmLoading\">\n      <a-form-model ref=\"form\" :model=\"model\" :rules=\"validatorRules\">\n\n        <a-form-model-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          prop=\"code\"\n          required\n          label=\"职务编码\">\n          <a-input placeholder=\"请输入职务编码\" v-model=\"model.code\" :read-only=\"readOnly\"/>\n        </a-form-model-item>\n        <a-form-model-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          prop=\"name\"\n          required\n          label=\"职务名称\">\n          <a-input placeholder=\"请输入职务名称\" v-model=\"model.name\"/>\n        </a-form-model-item>\n        <a-form-model-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          prop=\"postRank\"\n          required\n          label=\"职级\"\n        >\n          <j-dict-select-tag\n            placeholder=\"请选择职级\"\n            dictCode=\"position_rank\"\n            v-model=\"model.postRank\"\n          />\n        </a-form-model-item>\n\n      </a-form-model>\n    </a-spin>\n  </a-modal>\n</template>\n\n<script>\n  import pick from 'lodash.pick'\n  import { httpAction } from '@/api/manage'\n  import { duplicateCheck } from '@/api/api'\n  import JDictSelectTag from '@/components/dict/JDictSelectTag'\n\n  let validatorCodeTimer = null\n\n  export default {\n    name: 'SysPositionModal',\n    components: { JDictSelectTag },\n    data() {\n      return {\n        title: '操作',\n        visible: false,\n        model: {},\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 5 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 16 },\n        },\n        confirmLoading: false,\n        validatorRules: {\n          code: [\n              { required: true, message: '请输入职务编码' },\n              {\n                validator: (rule, value, callback) => {\n                  // 函数消抖的简单实现，防止一段时间内发送多次请求\n                  if (validatorCodeTimer) {\n                    // 停止上次开启的定时器\n                    clearTimeout(validatorCodeTimer)\n                  }\n                  validatorCodeTimer = setTimeout(() => {\n                    duplicateCheck({\n                      tableName: 'sys_position',\n                      fieldName: 'code',\n                      fieldVal: value,\n                      dataId: this.model.id\n                    }).then((res) => {\n                      if (res.success) {\n                        callback()\n                      } else {\n                        callback(res.message)\n                      }\n                    }).catch(console.error)\n                  }, 300)\n                }\n              }\n            ],\n          name: [{ required: true, message: '请输入职务名称' }] ,\n          postRank:  [{ required: true, message: '请选择职级' }] ,\n        },\n        url: {\n          add: '/sys/position/add',\n          edit: '/sys/position/edit',\n        },\n        readOnly:false\n      }\n    },\n    created() {\n    },\n    methods: {\n      add() {\n        this.edit({})\n      },\n      edit(record) {\n        this.model = Object.assign({}, record)\n        this.visible = true\n        if(record.id){\n          this.readOnly=true\n        }else{\n          this.readOnly=false\n        }\n      },\n      close() {\n        this.$emit('close')\n        this.visible = false\n        this.$refs.form.resetFields();\n      },\n      handleOk() {\n        const that = this\n        // 触发表单验证\n        this.$refs.form.validate(valid => {\n          if (valid) {\n            that.confirmLoading = true\n            let httpurl = ''\n            let method = ''\n            if (!this.model.id) {\n              httpurl += this.url.add\n              method = 'post'\n            } else {\n              httpurl += this.url.edit\n              method = 'put'\n            }\n\n            httpAction(httpurl, this.model, method).then((res) => {\n              if (res.success) {\n                that.$message.success(res.message)\n                that.$emit('ok')\n              } else {\n                that.$message.warning(res.message)\n              }\n            }).finally(() => {\n              that.confirmLoading = false\n              that.close()\n            })\n          }else{\n            return false;\n          }\n        })\n      },\n      handleCancel() {\n        this.close()\n      },\n\n\n    }\n  }\n</script>\n\n<style lang=\"less\" scoped>\n\n</style>\n"],"sourceRoot":"src/views/system/modules"}]}