{"remainingRequest":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\babel-loader\\lib\\index.js!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\components\\jeecg\\JVxeTable\\components\\JVxeTable.js","dependencies":[{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\components\\jeecg\\JVxeTable\\components\\JVxeTable.js","mtime":1665386876000},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\babel-loader\\lib\\index.js","mtime":1665642924601},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1665642923347}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"D:/\\u4E91\\u665F/\\u524D\\u7AEF/ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326/node_modules/@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport XEUtils from 'xe-utils';\nimport PropTypes from 'ant-design-vue/es/_util/vue-types';\nimport { JVXETypes } from '@/components/jeecg/JVxeTable/jvxeTypes';\nimport VxeWebSocketMixins from '../mixins/vxe.web.socket.mixins';\nimport { initDictOptions } from '@/components/dict/JDictSelectUtil';\nimport { getRefPromise } from '../utils/vxeUtils';\nimport { getEnhancedMixins, replaceProps } from '../utils/cellUtils';\nimport JVxeToolbar from './JVxeToolbar';\nimport JVxeSubPopover from './JVxeSubPopover';\nimport JVxeDetailsModal from './JVxeDetailsModal';\nimport JVxePagination from './JVxePagination';\nimport { cloneObject, getVmParentByName, pushIfNotExist, randomString, simpleDebounce } from '@/utils/util';\nimport { UtilTools } from 'vxe-table/packages/tools/src/utils';\nimport { getNoAuthCols } from '@/utils/authFilter';\nexport default {\n  name: 'JVxeTable',\n  provide: function provide() {\n    var _this = this;\n\n    return {\n      superTrigger: function superTrigger(name, event) {\n        return _this.trigger(name, event);\n      }\n    };\n  },\n  mixins: [VxeWebSocketMixins],\n  components: {\n    JVxeToolbar: JVxeToolbar,\n    JVxeSubPopover: JVxeSubPopover,\n    JVxeDetailsModal: JVxeDetailsModal,\n    JVxePagination: JVxePagination\n  },\n  props: {\n    rowKey: PropTypes.string.def('id'),\n    // 列信息\n    columns: {\n      type: Array,\n      required: true\n    },\n    // 数据源\n    dataSource: {\n      type: Array,\n      required: true\n    },\n    authPre: {\n      type: String,\n      required: false,\n      default: ''\n    },\n    // 是否显示工具栏\n    toolbar: PropTypes.bool.def(false),\n    // 工具栏配置\n    toolbarConfig: PropTypes.object.def(function () {\n      return {\n        // prefix 前缀；suffix 后缀；\n        slots: ['prefix', 'suffix'],\n        // add 新增按钮；remove 删除按钮；clearSelection 清空选择按钮；collapse 展开收起\n        btns: ['add', 'remove', 'clearSelection']\n      };\n    }),\n    // 是否显示行号\n    rowNumber: PropTypes.bool.def(false),\n    // 是否可选择行\n    rowSelection: PropTypes.bool.def(false),\n    // 选择行类型\n    rowSelectionType: PropTypes.oneOf(['checkbox', 'radio']).def('checkbox'),\n    // 是否可展开行\n    rowExpand: PropTypes.bool.def(false),\n    // 展开行配置\n    expandConfig: PropTypes.object.def(function () {\n      return {};\n    }),\n    // 页面是否在加载中\n    loading: PropTypes.bool.def(false),\n    height: PropTypes.instanceOf([Number, String]).def('auto'),\n    // 最大高度\n    maxHeight: {\n      type: Number,\n      default: function _default() {\n        return null;\n      }\n    },\n    // 要禁用的行 TODO 未实现\n    disabledRows: PropTypes.object.def(function () {\n      return {};\n    }),\n    // 是否禁用全部组件\n    disabled: PropTypes.bool.def(false),\n    // 是否可拖拽排序 TODO 仅实现上下排序，未实现拖拽排序（可能无法实现或较为困难）\n    dragSort: PropTypes.bool.def(false),\n    // 排序字段保存的Key\n    dragSortKey: PropTypes.string.def('orderNum'),\n    // 大小，可选值有：medium（中）、small（小）、mini（微）、tiny（非常小）\n    size: PropTypes.oneOf(['medium', 'small', 'mini', 'tiny']).def('medium'),\n    // 是否显示边框线\n    bordered: PropTypes.bool.def(false),\n    // 分页器参数，设置了即可显示分页器\n    pagination: PropTypes.object.def(function () {\n      return {};\n    }),\n    // 点击行时是否显示子表单\n    clickRowShowSubForm: PropTypes.bool.def(false),\n    // 点击行时是否显示主表单\n    clickRowShowMainForm: PropTypes.bool.def(false),\n    // 是否点击选中行，优先级最低\n    clickSelectRow: PropTypes.bool.def(false),\n    // 是否开启 reload 数据效果\n    reloadEffect: PropTypes.bool.def(false),\n    // 校验规则\n    editRules: PropTypes.object.def(function () {\n      return {};\n    }),\n    // 是否异步删除行，如果你要实现异步删除，那么需要把这个选项开启，\n    // 在remove事件里调用confirmRemove方法才会真正删除（除非删除的全是新增的行）\n    asyncRemove: PropTypes.bool.def(false),\n    // 是否一直显示组件，如果为false则只有点击的时候才出现组件\n    // 注：该参数不能动态修改；如果行、列字段多的情况下，会根据机器性能造成不同程度的卡顿。\n    alwaysEdit: PropTypes.bool.def(false),\n    // 联动配置，数组，详情配置见文档\n    linkageConfig: PropTypes.array.def(function () {\n      return [];\n    })\n  },\n  data: function data() {\n    return {\n      isJVXETable: true,\n      // caseId，表格唯一标识\n      caseId: \"_j-vxe-\".concat(randomString(8), \"_\"),\n      // 内置columns\n      _innerColumns: [],\n      // 内置 EditRules\n      _innerEditRules: [],\n      // 记录滚动条位置\n      scroll: {\n        top: 0,\n        left: 0\n      },\n      // 当前是否正在滚动\n      scrolling: false,\n      // vxe 默认配置\n      defaultVxeProps: {\n        'row-id': this.rowKey,\n        // 高亮hover的行\n        'highlight-hover-row': true,\n        // 溢出隐藏并显示tooltip\n        'show-overflow': true,\n        // 表头溢出隐藏并显示tooltip\n        'show-header-overflow': true,\n        'show-footer-overflow': true,\n        // 可编辑配置\n        'edit-config': {\n          trigger: 'click',\n          mode: 'cell',\n          showStatus: true\n        },\n        'expand-config': {\n          iconClose: 'ant-table-row-expand-icon ant-table-row-collapsed',\n          iconOpen: 'ant-table-row-expand-icon ant-table-row-expanded'\n        },\n        // 虚拟滚动配置，y轴大于30条数据时启用虚拟滚动\n        // 'scroll-y': {\n        //   gt: 30\n        // },\n        // 'scroll-x': {\n        //   gt: 15\n        // },\n        'radio-config': {\n          highlight: true\n        },\n        'checkbox-config': {\n          highlight: true\n        }\n      },\n      // 绑定左侧选择框\n      selectedRows: [],\n      // 绑定左侧选择框已选择的id\n      selectedRowIds: [],\n      // 统计列配置\n      statistics: {\n        has: false,\n        sum: [],\n        average: []\n      },\n      // 允许执行刷新特效的行ID\n      reloadEffectRowKeysMap: {},\n      //配置了但是没有授权的按钮和列 集合\n      excludeCode: [],\n      // 联动下拉选项（用于隔离不同的下拉选项）\n      // 内部联动配置，map\n      _innerLinkageConfig: null\n    };\n  },\n  computed: {\n    // vxe 最终 columns\n    vxeColumns: function vxeColumns() {\n      var _this2 = this;\n\n      this._innerColumns.forEach(function (column) {\n        var renderOptions = {\n          caseId: _this2.caseId,\n          bordered: _this2.bordered,\n          disabled: _this2.disabled,\n          scrolling: _this2.scrolling,\n          reloadEffect: _this2.reloadEffect,\n          reloadEffectRowKeysMap: _this2.reloadEffectRowKeysMap,\n          listeners: _this2.cellListeners\n        };\n\n        if (column.$type === JVXETypes.rowDragSort) {\n          renderOptions.dragSortKey = _this2.dragSortKey;\n        } // slot 组件特殊处理\n\n\n        if (column.$type === JVXETypes.slot) {\n          if (_this2.$scopedSlots.hasOwnProperty(column.slotName)) {\n            renderOptions.slot = _this2.$scopedSlots[column.slotName];\n            renderOptions.target = _this2;\n          }\n        } // 处理联动列，联动列只能作用于 select 组件\n\n\n        if (column.$type === JVXETypes.select && _this2._innerLinkageConfig != null) {\n          // 判断当前列是否是联动列\n          if (_this2._innerLinkageConfig.has(column.key)) {\n            renderOptions.linkage = {\n              config: _this2._innerLinkageConfig.get(column.key),\n              getLinkageOptionsSibling: _this2.getLinkageOptionsSibling,\n              getLinkageOptionsAsync: _this2.getLinkageOptionsAsync,\n              linkageSelectChange: _this2.linkageSelectChange\n            };\n          }\n        }\n\n        if (column.editRender) {\n          Object.assign(column.editRender, renderOptions);\n        }\n\n        if (column.cellRender) {\n          Object.assign(column.cellRender, renderOptions);\n        } // update--begin--autor:lvdandan-----date:20201019------for:LOWCOD-882 【新行编辑】列表上带按钮的遮挡问题\n\n\n        if (column.$type === JVXETypes.file || column.$type === JVXETypes.image) {\n          if (column.width && column.width.endsWith('px')) {\n            column.width = Number.parseInt(column.width.substr(0, column.width.length - 2)) + Number.parseInt(1) + 'px';\n          }\n        } // update--begin--autor:lvdandan-----date:20201019------for:LOWCOD-882 【新行编辑】列表上带按钮的遮挡问题\n        // update--begin--autor:lvdandan-----date:20201211------for:JT-118 【online】 日期、时间控件长度较小\n\n\n        if (column.$type === JVXETypes.datetime || column.$type === JVXETypes.userSelect || column.$type === JVXETypes.departSelect) {\n          var width = column.width && column.width.endsWith('px') ? Number.parseInt(column.width.substr(0, column.width.length - 2)) : 0;\n\n          if (width <= 190) {\n            column.width = '190px';\n          }\n        }\n\n        if (column.$type === JVXETypes.date) {\n          var _width = column.width && column.width.endsWith('px') ? Number.parseInt(column.width.substr(0, column.width.length - 2)) : 0;\n\n          if (_width <= 135) {\n            column.width = '135px';\n          }\n        } // update--end--autor:lvdandan-----date:20201211------for:JT-118 【online】 日期、时间控件长度较小\n\n      });\n\n      return this._innerColumns;\n    },\n    // vxe 最终 editRules\n    vxeEditRules: function vxeEditRules() {\n      return Object.assign({}, this.editRules, this._innerEditRules);\n    },\n    // vxe 最终 props\n    vxeProps: function vxeProps() {\n      var expandConfig = Object.assign({}, this.defaultVxeProps['expand-config'], this.expandConfig);\n      return Object.assign({}, this.defaultVxeProps, {\n        showFooter: this.statistics.has\n      }, this.$attrs, {\n        loading: this.loading,\n        columns: this.vxeColumns,\n        editRules: this.vxeEditRules,\n        // data: this.dataSource,\n        height: this.height === 'auto' ? null : this.height,\n        maxHeight: this.maxHeight,\n        border: this.bordered,\n        expandConfig: expandConfig,\n        footerMethod: this.handleFooterMethod // footerSpanMethod: this.handleFooterSpanMethod,\n\n      });\n    },\n    // vxe 最终 events\n    vxeEvents: function vxeEvents() {\n      var _this3 = this;\n\n      // 内置事件\n      var events = {\n        'scroll': this.handleVxeScroll,\n        'cell-click': this.handleCellClick,\n        'edit-closed': this.handleEditClosed,\n        'edit-actived': this.handleEditActived,\n        'radio-change': this.handleVxeRadioChange,\n        'checkbox-all': this.handleVxeCheckboxAll,\n        'checkbox-change': this.handleVxeCheckboxChange\n      }; // 用户传递的事件，进行合并操作\n\n      Object.keys(this.$listeners).forEach(function (key) {\n        var listen = _this3.$listeners[key];\n\n        if (events.hasOwnProperty(key)) {\n          if (Array.isArray(listen)) {\n            listen.push(events[key]);\n          } else {\n            listen = [events[key], listen];\n          }\n        }\n\n        events[key] = listen;\n      });\n      return events;\n    },\n    // 组件监听事件\n    cellListeners: function cellListeners() {\n      var _this4 = this;\n\n      return {\n        trigger: function trigger(name, event) {\n          return _this4.trigger(name, event);\n        },\n        valueChange: function valueChange(event) {\n          return _this4.trigger('valueChange', event);\n        },\n\n        /** 当前行向上移一位 */\n        rowMoveUp: function rowMoveUp(rowIndex) {\n          return _this4.rowResort(rowIndex, rowIndex - 1);\n        },\n\n        /** 当前行向下移一位 */\n        rowMoveDown: function rowMoveDown(rowIndex) {\n          return _this4.rowResort(rowIndex, rowIndex + 1);\n        },\n\n        /** 在当前行下面插入一行 */\n        rowInsertDown: function rowInsertDown(rowIndex) {\n          return _this4.insertRows({}, rowIndex + 1);\n        }\n      };\n    }\n  },\n  watch: {\n    dataSource: {\n      //   deep: true,\n      immediate: true,\n      handler: function () {\n        var _handler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          var _this5 = this;\n\n          var vxe;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return getRefPromise(this, 'vxe');\n\n                case 2:\n                  vxe = _context.sent;\n                  this.dataSource.forEach(function (data, idx) {\n                    // 开启了排序就自动计算排序值\n                    if (_this5.dragSort) {\n                      _this5.$set(data, _this5.dragSortKey, idx + 1);\n                    } // 处理联动回显数据\n\n\n                    if (_this5._innerLinkageConfig != null) {\n                      var _iterator = _createForOfIteratorHelper(_this5._innerLinkageConfig.values()),\n                          _step;\n\n                      try {\n                        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                          var configItem = _step.value;\n\n                          _this5.autoSetLinkageOptionsByData(data, '', configItem, 0);\n                        }\n                      } catch (err) {\n                        _iterator.e(err);\n                      } finally {\n                        _iterator.f();\n                      }\n                    }\n                  }); // 阻断vue监听大数据，提高性能\n\n                  vxe.loadData(this.dataSource); // TODO 解析disabledRows\n                  // let disabled = false\n                  //\n                  // let disabledRowIds = (this.disabledRowIds || [])\n                  // // 解析disabledRows\n                  // Object.keys(this.disabledRows).forEach(disabledColKey => {\n                  //   // 判断是否有该属性\n                  //   if (data.hasOwnProperty(disabledColKey)) {\n                  //     if (disabled !== true) {\n                  //       let temp = this.disabledRows[disabledColKey]\n                  //       // 禁用规则可以是一个数组\n                  //       if (Array.isArray(temp)) {\n                  //         disabled = temp.includes(data[disabledColKey])\n                  //       } else {\n                  //         disabled = (temp === data[disabledColKey])\n                  //       }\n                  //       if (disabled) {\n                  //         disabledRowIds.push(row.id)\n                  //       }\n                  //     }\n                  //   }\n                  // })\n\n                case 5:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n\n        function handler() {\n          return _handler.apply(this, arguments);\n        }\n\n        return handler;\n      }()\n    },\n    columns: {\n      immediate: true,\n      handler: function handler(columns) {\n        var _this6 = this;\n\n        //获取不需要显示列\n        this.loadExcludeCode();\n        var _innerColumns = [];\n        var _innerEditRules = {};\n        var rowNumber = this.rowNumber,\n            rowSelection = this.rowSelection,\n            rowExpand = this.rowExpand,\n            dragSort = this.dragSort;\n        var expandColumn, seqColumn, checkboxColumn, radioColumn, dragSortColumn;\n\n        if (Array.isArray(columns)) {\n          this.statistics.has = false;\n          this.statistics.sum = [];\n          this.statistics.average = []; // 处理成vxe可识别的columns\n\n          columns.forEach(function (column) {\n            if (_this6.excludeCode.indexOf(column.key) >= 0) {\n              return false;\n            }\n\n            var col = _objectSpread({}, column);\n\n            var type = col.type;\n            var enhanced = getEnhancedMixins(type);\n\n            if (type === JVXETypes.rowNumber) {\n              seqColumn = col;\n            } else if (type === JVXETypes.rowCheckbox) {\n              checkboxColumn = col;\n            } else if (type === JVXETypes.rowRadio) {\n              radioColumn = col;\n            } else if (type === JVXETypes.rowExpand) {\n              expandColumn = col;\n            } else if (type === JVXETypes.rowDragSort) {\n              dragSortColumn = col;\n            } else {\n              col.field = col.key; // 防止和vxeTable自带的type起冲突\n\n              col.$type = col.type;\n              delete col.type;\n              var renderName = 'cellRender',\n                  renderOptions = {\n                name: JVXETypes._prefix + type\n              };\n\n              if (type) {\n                // hidden 是特殊的组件\n                if (type === JVXETypes.hidden) {\n                  col.visible = false;\n                } else if (enhanced.switches.editRender) {\n                  renderName = 'editRender';\n                  renderOptions.type = enhanced.switches.visible || _this6.alwaysEdit ? 'visible' : 'default';\n                }\n              } else {\n                renderOptions.name = JVXETypes._prefix + JVXETypes.normal;\n              }\n\n              col[renderName] = renderOptions; // 处理字典\n\n              if (col.dictCode) {\n                _this6._loadDictConcatToOptions(col);\n              } // 处理校验\n\n\n              if (col.validateRules) {\n                var rules = [];\n\n                if (Array.isArray(col.validateRules)) {\n                  var _iterator2 = _createForOfIteratorHelper(col.validateRules),\n                      _step2;\n\n                  try {\n                    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                      var rule = _step2.value;\n                      var replace = {\n                        message: replaceProps(col, rule.message)\n                      };\n\n                      if (rule.unique || rule.pattern === 'only') {\n                        // 唯一校验器\n                        rule.validator = uniqueValidator.bind(_this6);\n                      } else if (rule.pattern) {\n                        // 非空\n                        if (rule.pattern === fooPatterns[0].value) {\n                          rule.required = true;\n                          delete rule.pattern;\n                        } else {\n                          // 兼容Online表单的特殊规则\n                          var _iterator3 = _createForOfIteratorHelper(fooPatterns),\n                              _step3;\n\n                          try {\n                            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                              var foo = _step3.value;\n\n                              if (foo.value === rule.pattern) {\n                                rule.pattern = foo.pattern;\n                                break;\n                              }\n                            }\n                          } catch (err) {\n                            _iterator3.e(err);\n                          } finally {\n                            _iterator3.f();\n                          }\n                        }\n                      } else if (typeof rule.handler === 'function') {\n                        // 自定义函数校验\n                        rule.validator = handlerConvertToValidator.bind(_this6);\n                      }\n\n                      rules.push(Object.assign({}, rule, replace));\n                    }\n                  } catch (err) {\n                    _iterator2.e(err);\n                  } finally {\n                    _iterator2.f();\n                  }\n                }\n\n                _innerEditRules[col.key] = rules;\n              } // 处理统计列\n              // sum = 求和、average = 平均值\n\n\n              if (Array.isArray(col.statistics)) {\n                _this6.statistics.has = true;\n                col.statistics.forEach(function (item) {\n                  var arr = _this6.statistics[item.toLowerCase()];\n\n                  if (Array.isArray(arr)) {\n                    pushIfNotExist(arr, col.key);\n                  }\n                });\n              }\n\n              _innerColumns.push(col);\n            }\n          });\n        } // 判断是否开启了序号\n\n\n        if (rowNumber) {\n          var col = {\n            type: 'seq',\n            title: '#',\n            width: 60,\n            fixed: 'left',\n            align: 'center'\n          };\n\n          if (seqColumn) {\n            col = Object.assign(col, seqColumn, {\n              type: 'seq'\n            });\n          }\n\n          _innerColumns.unshift(col);\n        } // 判断是否开启了可选择行\n\n\n        if (rowSelection) {\n          var width = 40;\n\n          if (this.statistics.has && !rowExpand && !dragSort) {\n            width = 60;\n          }\n\n          var _col = {\n            type: this.rowSelectionType,\n            width: width,\n            fixed: 'left',\n            align: 'center'\n          }; // radio\n\n          if (this.rowSelectionType === 'radio' && radioColumn) {\n            _col = Object.assign(_col, radioColumn, {\n              type: 'radio'\n            });\n          } // checkbox\n\n\n          if (this.rowSelectionType === 'checkbox' && checkboxColumn) {\n            _col = Object.assign(_col, checkboxColumn, {\n              type: 'checkbox'\n            });\n          }\n\n          _innerColumns.unshift(_col);\n        } // 是否可展开行\n\n\n        if (rowExpand) {\n          var _width2 = 40;\n\n          if (this.statistics.has && !dragSort) {\n            _width2 = 60;\n          }\n\n          var _col2 = {\n            type: 'expand',\n            title: '',\n            width: _width2,\n            fixed: 'left',\n            align: 'center',\n            slots: {\n              content: 'expandContent'\n            }\n          };\n\n          if (expandColumn) {\n            _col2 = Object.assign(_col2, expandColumn, {\n              type: 'expand'\n            });\n          }\n\n          _innerColumns.unshift(_col2);\n        } // 是否可拖动排序\n\n\n        if (dragSort) {\n          var _width3 = 40;\n\n          if (this.statistics.has) {\n            _width3 = 60;\n          }\n\n          var _col3 = {\n            type: JVXETypes.rowDragSort,\n            title: '',\n            width: _width3,\n            fixed: 'left',\n            align: 'center',\n            cellRender: {\n              name: JVXETypes._prefix + JVXETypes.rowDragSort\n            }\n          };\n\n          if (dragSortColumn) {\n            _col3 = Object.assign(_col3, dragSortColumn, {\n              type: JVXETypes.rowDragSort\n            });\n          }\n\n          _innerColumns.unshift(_col3);\n        }\n\n        this._innerColumns = _innerColumns;\n        this._innerEditRules = _innerEditRules;\n      }\n    },\n    // watch linkageConfig\n    // 整理多级联动配置\n    linkageConfig: {\n      immediate: true,\n      handler: function handler() {\n        var _this7 = this;\n\n        if (Array.isArray(this.linkageConfig) && this.linkageConfig.length > 0) {\n          // 获取联动的key顺序\n          var getLcKeys = function getLcKeys(key, arr) {\n            var col = _this7._innerColumns.find(function (col) {\n              return col.key === key;\n            });\n\n            if (col) {\n              arr.push(col.key);\n\n              if (col.linkageKey) {\n                return getLcKeys(col.linkageKey, arr);\n              }\n            }\n\n            return arr;\n          };\n\n          var configMap = new Map();\n          this.linkageConfig.forEach(function (lc) {\n            var keys = getLcKeys(lc.key, []); // 多个key共享一个，引用地址\n\n            var configItem = _objectSpread(_objectSpread({}, lc), {}, {\n              keys: keys,\n              optionsMap: new Map()\n            });\n\n            keys.forEach(function (k) {\n              return configMap.set(k, configItem);\n            });\n          });\n          this._innerLinkageConfig = configMap;\n        } else {\n          this._innerLinkageConfig = null;\n        }\n      }\n    }\n  },\n  created: function created() {},\n  mounted: function mounted() {\n    this.handleTabsChange();\n  },\n  methods: {\n    /**\n     * 自动判断父级是否是 <a-tabs/> 组件，然后添加事件监听，自动重置表格\n     */\n    handleTabsChange: function handleTabsChange() {\n      var _this8 = this;\n\n      // 获取父级\n      var tabs = getVmParentByName(this, 'ATabs');\n      var tabPane = getVmParentByName(this, 'ATabPane');\n\n      if (tabs && tabPane) {\n        // 用户自定义的 key\n        var currentKey = tabPane.$vnode.key; // 添加 activeKey 监听\n\n        var unwatch = tabs.$children[0].$watch('$data._activeKey', /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(key) {\n            return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    if (!(currentKey === key)) {\n                      _context2.next = 7;\n                      break;\n                    }\n\n                    _context2.next = 3;\n                    return _this8.$nextTick();\n\n                  case 3:\n                    _context2.next = 5;\n                    return _this8.refreshScroll();\n\n                  case 5:\n                    _context2.next = 7;\n                    return _this8.recalculate();\n\n                  case 7:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2);\n          }));\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }()); // 当前实例销毁时取消监听\n\n        this.$on('beforeDestroy', function () {\n          return unwatch();\n        });\n      }\n    },\n    handleVxeScroll: function handleVxeScroll(event) {\n      var $refs = this.$refs,\n          scroll = this.scroll; // 记录滚动条的位置\n\n      scroll.top = event.scrollTop;\n      scroll.left = event.scrollLeft;\n      $refs.subPopover ? $refs.subPopover.close() : null;\n      this.scrolling = true;\n      this.closeScrolling();\n    },\n    // 当手动勾选单选时触发的事件\n    handleVxeRadioChange: function handleVxeRadioChange(event) {\n      var row = event.$table.getRadioRecord();\n      this.selectedRows = row ? [row] : [];\n      this.handleSelectChange('radio', this.selectedRows, event);\n    },\n    // 当手动勾选全选时触发的事件\n    handleVxeCheckboxAll: function handleVxeCheckboxAll(event) {\n      this.selectedRows = event.$table.getCheckboxRecords();\n      this.handleSelectChange('checkbox-all', this.selectedRows, event);\n    },\n    // 当手动勾选并且值发生改变时触发的事件\n    handleVxeCheckboxChange: function handleVxeCheckboxChange(event) {\n      this.selectedRows = event.$table.getCheckboxRecords();\n      this.handleSelectChange('checkbox', this.selectedRows, event);\n    },\n    // 行选择change事件\n    handleSelectChange: function handleSelectChange(type, selectedRows, $event) {\n      var action;\n\n      if (type === 'radio') {\n        action = 'selected';\n      } else if (type === 'checkbox') {\n        action = selectedRows.includes($event.row) ? 'selected' : 'unselected';\n      } else {\n        action = 'selected-all';\n      }\n\n      this.selectedRowIds = selectedRows.map(function (row) {\n        return row.id;\n      });\n      this.trigger('selectRowChange', {\n        type: type,\n        action: action,\n        $event: $event,\n        row: $event.row,\n        selectedRows: this.selectedRows,\n        selectedRowIds: this.selectedRowIds\n      });\n    },\n    // 点击单元格时触发的事件\n    handleCellClick: function handleCellClick(event) {\n      var row = event.row,\n          column = event.column,\n          $event = event.$event,\n          $table = event.$table;\n      var $refs = this.$refs; // 点击了可编辑的\n\n      if (column.editRender) {\n        $refs.subPopover ? $refs.subPopover.close() : null;\n        return;\n      } // 显示详细信息\n\n\n      if (column.own.showDetails) {\n        // 两个如果同时存在的话会出现死循环\n        $refs.subPopover ? $refs.subPopover.close() : null;\n        $refs.detailsModal ? $refs.detailsModal.open(event) : null;\n      } else if ($refs.subPopover) {\n        $refs.subPopover.toggle(event);\n      } else if (this.clickSelectRow) {\n        var className = $event.target.className || '';\n        className = typeof className === 'string' ? className : className.toString(); // 点击的是expand，不做处理\n\n        if (className.includes('vxe-table--expand-btn')) {\n          return;\n        } // 点击的是checkbox，不做处理\n\n\n        if (className.includes('vxe-checkbox--icon') || className.includes('vxe-cell--checkbox')) {\n          return;\n        } // 点击的是radio，不做处理\n\n\n        if (className.includes('vxe-radio--icon') || className.includes('vxe-cell--radio')) {\n          return;\n        }\n\n        if (this.rowSelectionType === 'radio') {\n          $table.setRadioRow(row);\n          this.handleVxeRadioChange(event);\n        } else {\n          $table.toggleCheckboxRow(row);\n          this.handleVxeCheckboxChange(event);\n        }\n      }\n    },\n    // 单元格编辑状态下被关闭时会触发该事件\n    handleEditClosed: function handleEditClosed(_ref2) {\n      var column = _ref2.column;\n      // 执行增强\n      getEnhancedMixins(column.own.$type, 'aopEvents').editClosed.apply(this, arguments);\n    },\n    // 单元格被激活编辑时会触发该事件\n    handleEditActived: function handleEditActived(_ref3) {\n      var column = _ref3.column;\n      // 执行增强\n      getEnhancedMixins(column.own.$type, 'aopEvents').editActived.apply(this, arguments);\n    },\n\n    /** 表尾数据处理方法，用于显示统计信息 */\n    handleFooterMethod: function handleFooterMethod(_ref4) {\n      var columns = _ref4.columns,\n          data = _ref4.data;\n      var statistics = this.statistics;\n      var footers = [];\n\n      if (statistics.has) {\n        if (statistics.sum.length > 0) {\n          footers.push(this.getFooterStatisticsMap({\n            columns: columns,\n            title: '合计',\n            checks: statistics.sum,\n            method: function method(column) {\n              return XEUtils.sum(data, column.property);\n            }\n          }));\n        }\n\n        if (statistics.average.length > 0) {\n          footers.push(this.getFooterStatisticsMap({\n            columns: columns,\n            title: '平均',\n            checks: statistics.average,\n            method: function method(column) {\n              return XEUtils.mean(data, column.property);\n            }\n          }));\n        }\n      }\n\n      return footers;\n    },\n    getFooterStatisticsMap: function getFooterStatisticsMap(_ref5) {\n      var columns = _ref5.columns,\n          title = _ref5.title,\n          checks = _ref5.checks,\n          method = _ref5.method;\n      return columns.map(function (column, columnIndex) {\n        if (columnIndex === 0) {\n          return title;\n        }\n\n        if (checks.includes(column.property)) {\n          return method(column, columnIndex);\n        }\n\n        return null;\n      });\n    },\n\n    /** 表尾单元格合并方法 */\n    handleFooterSpanMethod: function handleFooterSpanMethod(event) {\n      if (event.columnIndex === 0) {\n        return {\n          colspan: 2\n        };\n      }\n    },\n\n    /*--- 外部可调用接口方法 ---*/\n\n    /**\n     * 重置滚动条Top位置\n     * @param top 新top位置，留空则滚动到上次记录的位置，用于解决切换tab选项卡时导致白屏以及自动将滚动条滚动到顶部的问题\n     */\n    resetScrollTop: function resetScrollTop(top) {\n      this.scrollTo(null, top == null || top === '' ? this.scroll.top : top);\n    },\n\n    /**\n     * 加载新数据，和 loadData 不同的是，用该方法加载的数据都是相当于点新增按钮新增的数据。\n     * 适用于不是数据库里查出来的没有id的临时数据\n     * @param dataSource\n     */\n    loadNewData: function () {\n      var _loadNewData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dataSource) {\n        var _this9 = this;\n\n        var xTable;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!Array.isArray(dataSource)) {\n                  _context3.next = 5;\n                  break;\n                }\n\n                xTable = this.$refs.vxe.$refs.xTable; // issues/2784\n                // 先清空所有数据\n\n                xTable.loadData([]);\n                dataSource.forEach(function (data, idx) {\n                  // 开启了排序就自动计算排序值\n                  if (_this9.dragSort) {\n                    _this9.$set(data, _this9.dragSortKey, idx + 1);\n                  } // 处理联动回显数据\n\n\n                  if (_this9._innerLinkageConfig != null) {\n                    var _iterator4 = _createForOfIteratorHelper(_this9._innerLinkageConfig.values()),\n                        _step4;\n\n                    try {\n                      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                        var configItem = _step4.value;\n\n                        _this9.autoSetLinkageOptionsByData(data, '', configItem, 0);\n                      }\n                    } catch (err) {\n                      _iterator4.e(err);\n                    } finally {\n                      _iterator4.f();\n                    }\n                  }\n                }); // 再新增\n\n                return _context3.abrupt(\"return\", xTable.insertAt(dataSource));\n\n              case 5:\n                return _context3.abrupt(\"return\", []);\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadNewData(_x2) {\n        return _loadNewData.apply(this, arguments);\n      }\n\n      return loadNewData;\n    }(),\n    // 校验table，失败返回errMap，成功返回null\n    validateTable: function () {\n      var _validateTable = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var errMap;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.validate().catch(function (errMap) {\n                  return errMap;\n                });\n\n              case 2:\n                errMap = _context4.sent;\n                return _context4.abrupt(\"return\", errMap ? errMap : null);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function validateTable() {\n        return _validateTable.apply(this, arguments);\n      }\n\n      return validateTable;\n    }(),\n    // 完整校验\n    fullValidateTable: function () {\n      var _fullValidateTable = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var errMap;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.fullValidate().catch(function (errMap) {\n                  return errMap;\n                });\n\n              case 2:\n                errMap = _context5.sent;\n                return _context5.abrupt(\"return\", errMap ? errMap : null);\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function fullValidateTable() {\n        return _fullValidateTable.apply(this, arguments);\n      }\n\n      return fullValidateTable;\n    }(),\n\n    /** 设置某行某列的值 */\n    setValues: function setValues(values) {\n      var _this10 = this;\n\n      if (!Array.isArray(values)) {\n        console.warn(\"JVxeTable.setValues\\uFF1A\\u5FC5\\u987B\\u4F20\\u9012\\u6570\\u7EC4\");\n        return;\n      } // 是否更新了数据\n\n\n      var updated = false;\n      values.forEach(function (item, idx) {\n        var rowKey = item.rowKey,\n            record = item.values;\n\n        var _this10$getIfRowById = _this10.getIfRowById(rowKey),\n            row = _this10$getIfRowById.row;\n\n        if (!row) {\n          return;\n        }\n\n        Object.keys(record).forEach(function (colKey) {\n          var column = _this10.getColumnByKey(colKey);\n\n          if (column) {\n            var oldValue = row[colKey];\n            var newValue = record[colKey];\n\n            if (newValue !== oldValue) {\n              updated = true;\n\n              _this10.$set(row, colKey, newValue); // 触发 valueChange 事件\n\n\n              _this10.trigger('valueChange', {\n                type: column.own.$type,\n                value: newValue,\n                oldValue: oldValue,\n                col: column.own,\n                column: column,\n                isSetValues: true\n              });\n            }\n          } else {\n            console.warn(\"JVxeTable.setValues\\uFF1A\\u6CA1\\u6709\\u627E\\u5230key\\u4E3A\\\"\".concat(colKey, \"\\\"\\u7684\\u5217\"));\n          }\n        });\n      }); // 【issues/3828】数据更新后，重新计算统计列 \n\n      if (updated && this.statistics.has) {\n        this.$nextTick( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n          var xTable;\n          return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  xTable = _this10.$refs.vxe.$refs.xTable;\n                  _context6.next = 3;\n                  return xTable.updateCache(true);\n\n                case 3:\n                  _context6.next = 5;\n                  return xTable.updateData();\n\n                case 5:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6);\n        })));\n      }\n    },\n\n    /** 获取所有的数据，包括values、deleteIds */\n    getAll: function getAll() {\n      return {\n        tableData: this.getTableData(),\n        deleteData: this.getDeleteData()\n      };\n    },\n\n    /** 获取表格表单里的值 */\n    getValues: function getValues(callback, rowIds) {\n      var tableData = this.getTableData({\n        rowIds: rowIds\n      });\n      callback('', tableData);\n    },\n\n    /** 获取表格数据 */\n    getTableData: function getTableData() {\n      var _this11 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var rowIds = options.rowIds;\n      var tableData; // 仅查询指定id的行\n\n      if (Array.isArray(rowIds) && rowIds.length > 0) {\n        tableData = [];\n        rowIds.forEach(function (rowId) {\n          var _this11$getIfRowById = _this11.getIfRowById(rowId),\n              row = _this11$getIfRowById.row;\n\n          if (row) {\n            tableData.push(row);\n          }\n        });\n      } else {\n        // 查询所有行\n        tableData = this.$refs.vxe.getTableData().fullData;\n      }\n\n      return this.filterNewRows(tableData, false);\n    },\n\n    /** 仅获取新增的数据 */\n    getNewData: function getNewData() {\n      var newData = cloneObject(this.$refs.vxe.getInsertRecords());\n      newData.forEach(function (row) {\n        return delete row.id;\n      });\n      return newData;\n    },\n\n    /** 仅获取新增的数据,带有id */\n    getNewDataWithId: function getNewDataWithId() {\n      var newData = cloneObject(this.$refs.vxe.getInsertRecords());\n      return newData;\n    },\n\n    /** 根据ID获取行，新增的行也能查出来 */\n    getIfRowById: function getIfRowById(id) {\n      var row = this.getRowById(id),\n          isNew = false;\n\n      if (!row) {\n        row = this.getNewRowById(id);\n\n        if (!row) {\n          console.warn(\"JVxeTable.getIfRowById\\uFF1A\\u6CA1\\u6709\\u627E\\u5230id\\u4E3A\\\"\".concat(id, \"\\\"\\u7684\\u884C\"));\n          return {\n            row: null\n          };\n        }\n\n        isNew = true;\n      }\n\n      return {\n        row: row,\n        isNew: isNew\n      };\n    },\n\n    /** 通过临时ID获取新增的行 */\n    getNewRowById: function getNewRowById(id) {\n      var records = this.getInsertRecords();\n\n      var _iterator5 = _createForOfIteratorHelper(records),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var record = _step5.value;\n\n          if (record.id === id) {\n            return record;\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n\n      return null;\n    },\n\n    /** 仅获取被删除的数据（新增又被删除的数据不会被获取到） */\n    getDeleteData: function getDeleteData() {\n      return cloneObject(this.$refs.vxe.getRemoveRecords());\n    },\n\n    /**\n     * 添加一行或多行\n     *\n     * @param rows\n     * @param isOnlJs 是否是onlineJS增强触发的\n     * @return\n     */\n    addRows: function () {\n      var _addRows = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n        var rows,\n            isOnlJs,\n            _args7 = arguments;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                rows = _args7.length > 0 && _args7[0] !== undefined ? _args7[0] : {};\n                isOnlJs = _args7.length > 1 ? _args7[1] : undefined;\n                return _context7.abrupt(\"return\", this._addOrInsert(rows, -1, 'added', isOnlJs));\n\n              case 3:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function addRows() {\n        return _addRows.apply(this, arguments);\n      }\n\n      return addRows;\n    }(),\n\n    /**\n     * 添加一行或多行\n     *\n     * @param rows\n     * @param index 添加下标，数字，必填\n     * @return\n     */\n    insertRows: function () {\n      var _insertRows = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(rows, index) {\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                if (!(typeof index !== 'number' || index < 0)) {\n                  _context8.next = 3;\n                  break;\n                }\n\n                console.warn(\"\\u3010JVXETable\\u3011insertRows\\uFF1Aindex\\u5FC5\\u987B\\u4F20\\u9012\\u6570\\u5B57\\uFF0C\\u4E14\\u5927\\u4E8E-1\");\n                return _context8.abrupt(\"return\");\n\n              case 3:\n                return _context8.abrupt(\"return\", this._addOrInsert(rows, index, 'inserted'));\n\n              case 4:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function insertRows(_x3, _x4) {\n        return _insertRows.apply(this, arguments);\n      }\n\n      return insertRows;\n    }(),\n\n    /**\n     * 添加一行或多行临时数据，不会填充默认值，传什么就添加进去什么\n     * @param rows\n     * @param options 选项\n     * @param options.setActive 是否激活最后一行的编辑模式\n     */\n    pushRows: function () {\n      var _pushRows = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        var rows,\n            options,\n            xTable,\n            setActive,\n            index,\n            result,\n            _args9 = arguments;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                rows = _args9.length > 0 && _args9[0] !== undefined ? _args9[0] : {};\n                options = _args9.length > 1 && _args9[1] !== undefined ? _args9[1] : {};\n                xTable = this.$refs.vxe.$refs.xTable;\n                setActive = options.setActive, index = options.index;\n                setActive = setActive == null ? false : !!setActive;\n                index = index == null ? -1 : index;\n                index = index === -1 ? index : xTable.tableFullData[index]; // 插入行\n\n                _context9.next = 9;\n                return xTable.insertAt(rows, index);\n\n              case 9:\n                result = _context9.sent;\n\n                if (setActive) {\n                  // 激活最后一行的编辑模式\n                  xTable.setActiveRow(result.rows[result.rows.length - 1]);\n                }\n\n                _context9.next = 13;\n                return this._recalcSortNumber();\n\n              case 13:\n                return _context9.abrupt(\"return\", result);\n\n              case 14:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function pushRows() {\n        return _pushRows.apply(this, arguments);\n      }\n\n      return pushRows;\n    }(),\n\n    /** 清空选择行 */\n    clearSelection: function clearSelection() {\n      var event = {\n        $table: this.$refs.vxe,\n        target: this\n      };\n\n      if (this.rowSelectionType === JVXETypes.rowRadio) {\n        this.$refs.vxe.clearRadioRow();\n        this.handleVxeRadioChange(event);\n      } else {\n        this.$refs.vxe.clearCheckboxRow();\n        this.handleVxeCheckboxChange(event);\n      }\n    },\n\n    /** 删除一行或多行数据 */\n    removeRows: function () {\n      var _removeRows = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(rows) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return this._remove(rows);\n\n              case 2:\n                res = _context10.sent;\n                _context10.next = 5;\n                return this._recalcSortNumber();\n\n              case 5:\n                return _context10.abrupt(\"return\", res);\n\n              case 6:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function removeRows(_x5) {\n        return _removeRows.apply(this, arguments);\n      }\n\n      return removeRows;\n    }(),\n\n    /** 根据id删除一行或多行 */\n    removeRowsById: function removeRowsById(rowId) {\n      var _this12 = this;\n\n      var rowIds;\n\n      if (Array.isArray(rowId)) {\n        rowIds = rowId;\n      } else {\n        rowIds = [rowId];\n      }\n\n      var rows = rowIds.map(function (id) {\n        var _this12$getIfRowById = _this12.getIfRowById(id),\n            row = _this12$getIfRowById.row;\n\n        if (!row) {\n          return;\n        }\n\n        if (row) {\n          return row;\n        } else {\n          console.warn(\"\\u3010JVXETable\\u3011removeRowsById\\uFF1A\".concat(id, \"\\u4E0D\\u5B58\\u5728\"));\n          return null;\n        }\n      }).filter(function (row) {\n        return row != null;\n      });\n      return this.removeRows(rows);\n    },\n    getColumnByKey: function getColumnByKey() {\n      return this.$refs.vxe.getColumnByField.apply(this.$refs.vxe, arguments);\n    },\n\n    /* --- 辅助方法 ---*/\n    // 触发事件\n    trigger: function trigger(name) {\n      var event = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      event.$target = this;\n      event.$table = this.$refs.vxe; //online增强参数兼容\n\n      event.target = this;\n      this.$emit(name, event);\n    },\n\n    /** 【多级联动】获取同级联动下拉选项 */\n    getLinkageOptionsSibling: function getLinkageOptionsSibling(row, col, config, request) {\n      // 如果当前列不是顶级列\n      var key = '';\n\n      if (col.key !== config.key) {\n        // 就找出联动上级列\n        var idx = config.keys.findIndex(function (k) {\n          return col.key === k;\n        });\n        var parentKey = config.keys[idx - 1];\n        key = row[parentKey]; // 如果联动上级列没有选择数据，就直接返回空数组\n\n        if (key === '' || key == null) {\n          return [];\n        }\n      } else {\n        key = 'root';\n      }\n\n      var options = config.optionsMap.get(key);\n\n      if (!Array.isArray(options)) {\n        if (request) {\n          var parent = key === 'root' ? '' : key;\n          return this.getLinkageOptionsAsync(config, parent);\n        } else {\n          options = [];\n        }\n      }\n\n      return options;\n    },\n\n    /** 【多级联动】获取联动下拉选项（异步） */\n    getLinkageOptionsAsync: function getLinkageOptionsAsync(config, parent) {\n      return new Promise(function (resolve) {\n        var key = parent ? parent : 'root';\n        var options;\n\n        if (config.optionsMap.has(key)) {\n          options = config.optionsMap.get(key);\n\n          if (options instanceof Promise) {\n            options.then(function (opt) {\n              config.optionsMap.set(key, opt);\n              resolve(opt);\n            });\n          } else {\n            resolve(options);\n          }\n        } else if (typeof config.requestData === 'function') {\n          // 调用requestData方法，通过传入parent来获取子级\n          var promise = config.requestData(parent);\n          config.optionsMap.set(key, promise);\n          promise.then(function (opt) {\n            config.optionsMap.set(key, opt);\n            resolve(opt);\n          });\n        } else {\n          resolve([]);\n        }\n      });\n    },\n    // 【多级联动】 用于回显数据，自动填充 optionsMap\n    autoSetLinkageOptionsByData: function autoSetLinkageOptionsByData(data, parent, config, level) {\n      if (level === 0) {\n        this.getLinkageOptionsAsync(config, '');\n      } else {\n        this.getLinkageOptionsAsync(config, parent);\n      }\n\n      if (config.keys.length - 1 > level) {\n        var value = data[config.keys[level]];\n\n        if (value) {\n          this.autoSetLinkageOptionsByData(data, value, config, level + 1);\n        }\n      }\n    },\n    // 【多级联动】联动组件change时，清空下级组件\n    linkageSelectChange: function linkageSelectChange(row, col, config, value) {\n      if (col.linkageKey) {\n        this.getLinkageOptionsAsync(config, value);\n        var idx = config.keys.findIndex(function (k) {\n          return k === col.key;\n        });\n        var values = {};\n\n        for (var i = idx; i < config.keys.length; i++) {\n          values[config.keys[i]] = '';\n        } // 清空后几列的数据\n\n\n        this.setValues([{\n          rowKey: row.id,\n          values: values\n        }]);\n      }\n    },\n\n    /** 加载数据字典并合并到 options */\n    _loadDictConcatToOptions: function _loadDictConcatToOptions(column) {\n      var _this13 = this;\n\n      initDictOptions(column.dictCode).then(function (res) {\n        if (res.success) {\n          var newOptions = column.options || []; // .concat(res.result)\n\n          res.result.forEach(function (item) {\n            // 过滤重复数据\n            var _iterator6 = _createForOfIteratorHelper(newOptions),\n                _step6;\n\n            try {\n              for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                var option = _step6.value;\n                if (option.value === item.value) return;\n              }\n            } catch (err) {\n              _iterator6.e(err);\n            } finally {\n              _iterator6.f();\n            }\n\n            newOptions.push(item);\n          });\n\n          _this13.$set(column, 'options', newOptions);\n        } else {\n          console.group(\"JVxeTable \\u67E5\\u8BE2\\u5B57\\u5178(\".concat(column.dictCode, \")\\u53D1\\u751F\\u5F02\\u5E38\"));\n          console.warn(res.message);\n          console.groupEnd();\n        }\n      });\n    },\n    //options自定义赋值 刷新\n    virtualRefresh: function virtualRefresh() {\n      this.scrolling = true;\n      this.closeScrolling();\n    },\n    // 设置 this.scrolling 防抖模式\n    closeScrolling: simpleDebounce(function () {\n      this.scrolling = false;\n    }, 100),\n\n    /**\n     * 过滤添加的行\n     * @param rows 要筛选的行数据\n     * @param remove true = 删除新增，false=只删除id\n     * @param handler function\n     */\n    filterNewRows: function filterNewRows(rows) {\n      var remove = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var handler = arguments.length > 2 ? arguments[2] : undefined;\n      var insertRecords = this.$refs.vxe.getInsertRecords();\n      var records = [];\n\n      var _iterator7 = _createForOfIteratorHelper(rows),\n          _step7;\n\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var row = _step7.value;\n          var item = cloneObject(row);\n\n          if (insertRecords.includes(row)) {\n            handler ? handler({\n              item: item,\n              row: row,\n              insertRecords: insertRecords\n            }) : null;\n\n            if (remove) {\n              continue;\n            }\n\n            delete item.id;\n          }\n\n          records.push(item);\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n\n      return records;\n    },\n    // 删除选中的数据\n    removeSelection: function () {\n      var _removeSelection = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.next = 2;\n                return this._remove(this.selectedRows);\n\n              case 2:\n                res = _context11.sent;\n                this.clearSelection();\n                _context11.next = 6;\n                return this._recalcSortNumber();\n\n              case 6:\n                return _context11.abrupt(\"return\", res);\n\n              case 7:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function removeSelection() {\n        return _removeSelection.apply(this, arguments);\n      }\n\n      return removeSelection;\n    }(),\n\n    /**\n     * 【删除指定行数据】（重写vxeTable的内部方法，添加了从keepSource中删除）\n     * 如果传 row 则删除一行\n     * 如果传 rows 则删除多行\n     * 如果为空则删除所有\n     */\n    _remove: function _remove(rows) {\n      var xTable = this.$refs.vxe.$refs.xTable;\n      var afterFullData = xTable.afterFullData,\n          tableFullData = xTable.tableFullData,\n          tableSourceData = xTable.tableSourceData,\n          editStore = xTable.editStore,\n          treeConfig = xTable.treeConfig,\n          checkboxOpts = xTable.checkboxOpts,\n          selection = xTable.selection,\n          isInsertByRow = xTable.isInsertByRow,\n          scrollYLoad = xTable.scrollYLoad;\n      var actived = editStore.actived,\n          removeList = editStore.removeList,\n          insertList = editStore.insertList;\n      var property = checkboxOpts.checkField;\n      var rest = [];\n      var nowData = afterFullData;\n\n      if (treeConfig) {\n        throw new Error(UtilTools.getLog('vxe.error.noTree', ['remove']));\n      }\n\n      if (!rows) {\n        rows = tableFullData;\n      } else if (!XEUtils.isArray(rows)) {\n        rows = [rows];\n      } // 如果是新增，则保存记录\n\n\n      rows.forEach(function (row) {\n        if (!isInsertByRow(row)) {\n          removeList.push(row);\n        }\n      }); // 如果绑定了多选属性，则更新状态\n\n      if (!property) {\n        XEUtils.remove(selection, function (row) {\n          return rows.indexOf(row) > -1;\n        });\n      } // 从数据源中移除\n\n\n      if (tableFullData === rows) {\n        rows = rest = tableFullData.slice(0);\n        tableFullData.length = 0;\n        nowData.length = 0;\n      } else {\n        rest = XEUtils.remove(tableFullData, function (row) {\n          return rows.indexOf(row) > -1;\n        });\n        XEUtils.remove(nowData, function (row) {\n          return rows.indexOf(row) > -1;\n        });\n      } // 【从keepSource中删除】\n\n\n      if (xTable.keepSource) {\n        var rowIdSet = new Set(rows.map(function (row) {\n          return row.id;\n        }));\n        XEUtils.remove(tableSourceData, function (row) {\n          return rowIdSet.has(row.id);\n        });\n      } // 如果当前行被激活编辑，则清除激活状态\n\n\n      if (actived.row && rows.indexOf(actived.row) > -1) {\n        xTable.clearActived();\n      } // 从新增中移除已删除的数据\n\n\n      XEUtils.remove(insertList, function (row) {\n        return rows.indexOf(row) > -1;\n      });\n      xTable.handleTableData();\n      xTable.updateFooter();\n      xTable.updateCache();\n      xTable.checkSelectionStatus();\n\n      if (scrollYLoad) {\n        xTable.updateScrollYSpace();\n      }\n\n      return xTable.$nextTick().then(function () {\n        xTable.recalculate();\n        return {\n          row: rest.length ? rest[rest.length - 1] : null,\n          rows: rest\n        };\n      });\n    },\n\n    /** 行重新排序 */\n    rowResort: function () {\n      var _rowResort = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(oldIndex, newIndex) {\n        var xTable, sort;\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                xTable = this.$refs.vxe.$refs.xTable;\n                window.xTable = xTable;\n\n                sort = function sort(array) {\n                  // 存储旧数据，并删除旧项目\n                  var row = array.splice(oldIndex, 1)[0]; // 向新项目里添加旧数据\n\n                  array.splice(newIndex, 0, row);\n                };\n\n                sort(xTable.tableFullData);\n\n                if (xTable.keepSource) {\n                  sort(xTable.tableSourceData);\n                }\n\n                _context12.next = 7;\n                return this.$nextTick();\n\n              case 7:\n                _context12.next = 9;\n                return this._recalcSortNumber();\n\n              case 9:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function rowResort(_x6, _x7) {\n        return _rowResort.apply(this, arguments);\n      }\n\n      return rowResort;\n    }(),\n\n    /** 重新计算排序字段的数值 */\n    _recalcSortNumber: function () {\n      var _recalcSortNumber2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13() {\n        var _this14 = this;\n\n        var xTable;\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                xTable = this.$refs.vxe.$refs.xTable;\n\n                if (this.dragSort) {\n                  xTable.tableFullData.forEach(function (data, idx) {\n                    return data[_this14.dragSortKey] = idx + 1;\n                  });\n                }\n\n                _context13.next = 4;\n                return xTable.updateCache(true);\n\n              case 4:\n                _context13.next = 6;\n                return xTable.updateData();\n\n              case 6:\n                return _context13.abrupt(\"return\", _context13.sent);\n\n              case 7:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function _recalcSortNumber() {\n        return _recalcSortNumber2.apply(this, arguments);\n      }\n\n      return _recalcSortNumber;\n    }(),\n    _addOrInsert: function () {\n      var _addOrInsert2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14() {\n        var _this15 = this;\n\n        var rows,\n            index,\n            triggerName,\n            isOnlJs,\n            xTable,\n            records,\n            result,\n            i,\n            row,\n            _args14 = arguments;\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                rows = _args14.length > 0 && _args14[0] !== undefined ? _args14[0] : {};\n                index = _args14.length > 1 ? _args14[1] : undefined;\n                triggerName = _args14.length > 2 ? _args14[2] : undefined;\n                isOnlJs = _args14.length > 3 ? _args14[3] : undefined;\n                xTable = this.$refs.vxe.$refs.xTable;\n\n                if (Array.isArray(rows)) {\n                  records = rows;\n                } else {\n                  records = [rows];\n                } // 遍历添加默认值\n\n\n                records.forEach(function (record) {\n                  return _this15._createRow(record);\n                });\n                _context14.next = 9;\n                return this.pushRows(records, {\n                  index: index,\n                  setActive: true\n                });\n\n              case 9:\n                result = _context14.sent;\n\n                // 遍历插入的行\n                // update--begin--autor:lvdandan-----date:20201117------for:LOWCOD-987 【新行编辑】js增强附表内置方法调用问题 #1819\n                // online js增强时以传过来值为准，不再赋默认值\n                if (isOnlJs != true) {\n                  for (i = 0; i < result.rows.length; i++) {\n                    row = result.rows[i];\n                    this.trigger(triggerName, {\n                      row: row,\n                      $table: xTable,\n                      target: this\n                    });\n                  }\n                } // update--end--autor:lvdandan-----date:20201117------for:LOWCOD-987 【新行编辑】js增强附表内置方法调用问题 #1819\n\n\n                return _context14.abrupt(\"return\", result);\n\n              case 12:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function _addOrInsert() {\n        return _addOrInsert2.apply(this, arguments);\n      }\n\n      return _addOrInsert;\n    }(),\n    // 创建新行，自动添加默认值\n    _createRow: function _createRow() {\n      var _this16 = this;\n\n      var record = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var xTable = this.$refs.vxe.$refs.xTable; // 添加默认值\n\n      xTable.tableFullColumn.forEach(function (column) {\n        var col = column.own;\n\n        if (col.key && (record[col.key] == null || record[col.key] === '')) {\n          // 设置默认值\n          var createValue = getEnhancedMixins(col.$type || col.type, 'createValue');\n          record[col.key] = createValue({\n            row: record,\n            column: column,\n            $table: xTable\n          });\n        } // update-begin--author:sunjianlei---date:20210819------for: 处理联动列，联动列只能作用于 select 组件\n\n\n        if (col.$type === JVXETypes.select && _this16._innerLinkageConfig != null) {\n          // 判断当前列是否是联动列\n          if (_this16._innerLinkageConfig.has(col.key)) {\n            var configItem = _this16._innerLinkageConfig.get(col.key);\n\n            _this16.getLinkageOptionsAsync(configItem, '');\n          }\n        } // update-end--author:sunjianlei---date:20210819------for: 处理联动列，联动列只能作用于 select 组件\n\n      });\n      return record;\n    },\n\n    /*--- 渲染函数 ---*/\n    // 渲染 vxe\n    renderVxeGrid: function renderVxeGrid(h) {\n      return h('vxe-grid', {\n        ref: 'vxe',\n        class: ['j-vxe-table'],\n        props: this.vxeProps,\n        on: this.vxeEvents,\n        // 作用域插槽的格式为\n        scopedSlots: this.$scopedSlots\n      });\n    },\n    // 渲染工具栏\n    renderToolbar: function renderToolbar(h) {\n      var _this17 = this;\n\n      if (this.toolbar) {\n        return h('j-vxe-toolbar', {\n          props: {\n            toolbarConfig: this.toolbarConfig,\n            excludeCode: this.excludeCode,\n            size: this.size,\n            disabled: this.disabled,\n            disabledRows: this.disabledRows,\n            selectedRowIds: this.selectedRowIds\n          },\n          on: {\n            // 新增事件\n            add: function add() {\n              return _this17.addRows();\n            },\n            // 保存事件\n            save: function save() {\n              return _this17.trigger('save', {\n                $table: _this17.$refs.vxe,\n                target: _this17\n              });\n            },\n            // 删除事件\n            remove: function remove() {\n              var $table = _this17.$refs.vxe;\n\n              var deleteRows = _this17.filterNewRows(_this17.selectedRows); // 触发删除事件\n\n\n              if (deleteRows.length > 0) {\n                var removeEvent = {\n                  deleteRows: deleteRows,\n                  $table: $table,\n                  target: _this17\n                };\n\n                if (_this17.asyncRemove) {\n                  // 确认删除，只有调用这个方法才会真删除\n                  removeEvent.confirmRemove = function () {\n                    return _this17.removeSelection();\n                  };\n                } else {\n                  _this17.removeSelection();\n                }\n\n                _this17.trigger('remove', removeEvent);\n              } else {\n                _this17.removeSelection();\n              }\n            },\n            // 清除选择事件\n            clearSelection: this.clearSelection\n          },\n          scopedSlots: {\n            toolbarPrefix: this.$scopedSlots.toolbarPrefix,\n            toolbarSuffix: this.$scopedSlots.toolbarSuffix\n          }\n        });\n      }\n\n      return null;\n    },\n    // 渲染 toolbarAfter 插槽\n    renderToolbarAfterSlot: function renderToolbarAfterSlot() {\n      if (this.$scopedSlots['toolbarAfter']) {\n        return this.$scopedSlots['toolbarAfter']();\n      }\n\n      return null;\n    },\n    // 渲染点击时弹出的子表\n    renderSubPopover: function renderSubPopover(h) {\n      if (this.clickRowShowSubForm && this.$scopedSlots.subForm) {\n        return h('j-vxe-sub-popover', {\n          ref: 'subPopover',\n          scopedSlots: {\n            subForm: this.$scopedSlots.subForm\n          }\n        });\n      }\n\n      return null;\n    },\n    // 渲染点击时弹出的详细信息\n    renderDetailsModal: function renderDetailsModal(h) {\n      if (this.clickRowShowMainForm && this.$scopedSlots.mainForm) {\n        return h('j-vxe-details-modal', {\n          ref: 'detailsModal',\n          scopedSlots: {\n            subForm: this.clickRowShowSubForm ? this.$scopedSlots.subForm : null,\n            mainForm: this.$scopedSlots.mainForm\n          }\n        });\n      }\n    },\n    // 渲染分页器\n    renderPagination: function renderPagination(h) {\n      var _this18 = this;\n\n      if (this.pagination && Object.keys(this.pagination).length > 0) {\n        return h('j-vxe-pagination', {\n          props: {\n            size: this.size,\n            disabled: this.disabled,\n            pagination: this.pagination\n          },\n          on: {\n            change: function change(e) {\n              return _this18.trigger('pageChange', e);\n            }\n          }\n        });\n      }\n\n      return null;\n    },\n    loadExcludeCode: function loadExcludeCode() {\n      if (!this.authPre || this.authPre.length == 0) {\n        this.excludeCode = [];\n      } else {\n        var pre = this.authPre;\n\n        if (!pre.endsWith(':')) {\n          pre += ':';\n        }\n\n        this.excludeCode = getNoAuthCols(pre);\n      }\n    }\n  },\n  render: function render(h) {\n    return h('div', {\n      class: ['j-vxe-table-box', \"size--\".concat(this.size)]\n    }, [this.renderSubPopover(h), this.renderDetailsModal(h), this.renderToolbar(h), this.renderToolbarAfterSlot(), this.renderVxeGrid(h), this.renderPagination(h)]);\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.$emit('beforeDestroy');\n  }\n}; // 兼容 online 的规则\n\nvar fooPatterns = [{\n  title: '非空',\n  value: '*',\n  pattern: /^.+$/\n}, {\n  title: '6到16位数字',\n  value: 'n6-16',\n  pattern: /^\\d{6,16}$/\n}, {\n  title: '6到16位任意字符',\n  value: '*6-16',\n  pattern: /^.{6,16}$/\n}, {\n  title: '6到18位字母',\n  value: 's6-18',\n  pattern: /^[a-z|A-Z]{6,18}$/\n}, {\n  title: '网址',\n  value: 'url',\n  pattern: /^(?:([A-Za-z]+):)?(\\/{0,3})([0-9.\\-A-Za-z]+)(?::(\\d+))?(?:\\/([^?#]*))?(?:\\?([^#]*))?(?:#(.*))?$/\n}, {\n  title: '电子邮件',\n  value: 'e',\n  pattern: /^([\\w]+\\.*)([\\w]+)@[\\w]+\\.\\w{3}(\\.\\w{2}|)$/\n}, {\n  title: '手机号码',\n  value: 'm',\n  pattern: /^1[3456789]\\d{9}$/\n}, {\n  title: '邮政编码',\n  value: 'p',\n  pattern: /^[0-9]{6}$/\n}, {\n  title: '字母',\n  value: 's',\n  pattern: /^[A-Z|a-z]+$/\n}, {\n  title: '数字',\n  value: 'n',\n  pattern: /^-?\\d+(\\.?\\d+|\\d?)$/\n}, {\n  title: '整数',\n  value: 'z',\n  pattern: /^-?\\d+$/\n}, {\n  title: '金额',\n  value: 'money',\n  pattern: /^(([1-9][0-9]*)|([0]\\.\\d{0,2}|[1-9][0-9]*\\.\\d{0,5}))$/\n}];\n/** 旧版handler转为新版Validator */\n\nfunction handlerConvertToValidator(event) {\n  var _this19 = this;\n\n  var column = event.column,\n      rule = event.rule;\n  return new Promise(function (resolve, reject) {\n    rule.handler(event, function (flag, msg) {\n      var message = rule.message;\n\n      if (typeof msg === 'string') {\n        message = replaceProps(column.own, msg);\n      }\n\n      if (flag == null) {\n        resolve(message);\n      } else if (!!flag) {\n        resolve(message);\n      } else {\n        reject(new Error(message));\n      }\n    }, _this19, event);\n  });\n}\n/** 唯一校验器 */\n\n\nfunction uniqueValidator(event) {\n  var cellValue = event.cellValue,\n      column = event.column,\n      rule = event.rule;\n  var tableData = this.getTableData();\n  var findCount = 0;\n\n  var _iterator8 = _createForOfIteratorHelper(tableData),\n      _step8;\n\n  try {\n    for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n      var rowData = _step8.value;\n\n      if (rowData[column.own.key] === cellValue) {\n        if (++findCount >= 2) {\n          return Promise.reject(new Error(rule.message));\n        }\n      }\n    }\n  } catch (err) {\n    _iterator8.e(err);\n  } finally {\n    _iterator8.f();\n  }\n\n  return Promise.resolve();\n}",{"version":3,"sources":["D:/云晟/前端/ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326/src/components/jeecg/JVxeTable/components/JVxeTable.js"],"names":["XEUtils","PropTypes","JVXETypes","VxeWebSocketMixins","initDictOptions","getRefPromise","getEnhancedMixins","replaceProps","JVxeToolbar","JVxeSubPopover","JVxeDetailsModal","JVxePagination","cloneObject","getVmParentByName","pushIfNotExist","randomString","simpleDebounce","UtilTools","getNoAuthCols","name","provide","superTrigger","event","trigger","mixins","components","props","rowKey","string","def","columns","type","Array","required","dataSource","authPre","String","default","toolbar","bool","toolbarConfig","object","slots","btns","rowNumber","rowSelection","rowSelectionType","oneOf","rowExpand","expandConfig","loading","height","instanceOf","Number","maxHeight","disabledRows","disabled","dragSort","dragSortKey","size","bordered","pagination","clickRowShowSubForm","clickRowShowMainForm","clickSelectRow","reloadEffect","editRules","asyncRemove","alwaysEdit","linkageConfig","array","data","isJVXETable","caseId","_innerColumns","_innerEditRules","scroll","top","left","scrolling","defaultVxeProps","mode","showStatus","iconClose","iconOpen","highlight","selectedRows","selectedRowIds","statistics","has","sum","average","reloadEffectRowKeysMap","excludeCode","_innerLinkageConfig","computed","vxeColumns","forEach","column","renderOptions","listeners","cellListeners","$type","rowDragSort","slot","$scopedSlots","hasOwnProperty","slotName","target","select","key","linkage","config","get","getLinkageOptionsSibling","getLinkageOptionsAsync","linkageSelectChange","editRender","Object","assign","cellRender","file","image","width","endsWith","parseInt","substr","length","datetime","userSelect","departSelect","date","vxeEditRules","vxeProps","showFooter","$attrs","border","footerMethod","handleFooterMethod","vxeEvents","events","handleVxeScroll","handleCellClick","handleEditClosed","handleEditActived","handleVxeRadioChange","handleVxeCheckboxAll","handleVxeCheckboxChange","keys","$listeners","listen","isArray","push","valueChange","rowMoveUp","rowIndex","rowResort","rowMoveDown","rowInsertDown","insertRows","watch","immediate","handler","vxe","idx","$set","values","configItem","autoSetLinkageOptionsByData","loadData","loadExcludeCode","expandColumn","seqColumn","checkboxColumn","radioColumn","dragSortColumn","indexOf","col","enhanced","rowCheckbox","rowRadio","field","renderName","_prefix","hidden","visible","switches","normal","dictCode","_loadDictConcatToOptions","validateRules","rules","rule","replace","message","unique","pattern","validator","uniqueValidator","bind","fooPatterns","value","foo","handlerConvertToValidator","item","arr","toLowerCase","title","fixed","align","unshift","content","getLcKeys","find","linkageKey","configMap","Map","lc","optionsMap","k","set","created","mounted","handleTabsChange","methods","tabs","tabPane","currentKey","$vnode","unwatch","$children","$watch","$nextTick","refreshScroll","recalculate","$on","$refs","scrollTop","scrollLeft","subPopover","close","closeScrolling","row","$table","getRadioRecord","handleSelectChange","getCheckboxRecords","$event","action","includes","map","id","own","showDetails","detailsModal","open","toggle","className","toString","setRadioRow","toggleCheckboxRow","editClosed","apply","arguments","editActived","footers","getFooterStatisticsMap","checks","method","property","mean","columnIndex","handleFooterSpanMethod","colspan","resetScrollTop","scrollTo","loadNewData","xTable","insertAt","validateTable","validate","catch","errMap","fullValidateTable","fullValidate","setValues","console","warn","updated","record","getIfRowById","colKey","getColumnByKey","oldValue","newValue","isSetValues","updateCache","updateData","getAll","tableData","getTableData","deleteData","getDeleteData","getValues","callback","rowIds","options","rowId","fullData","filterNewRows","getNewData","newData","getInsertRecords","getNewDataWithId","getRowById","isNew","getNewRowById","records","getRemoveRecords","addRows","rows","isOnlJs","_addOrInsert","index","pushRows","setActive","tableFullData","result","setActiveRow","_recalcSortNumber","clearSelection","clearRadioRow","clearCheckboxRow","removeRows","_remove","res","removeRowsById","filter","getColumnByField","$target","$emit","request","findIndex","parentKey","parent","Promise","resolve","then","opt","requestData","promise","level","i","success","newOptions","option","group","groupEnd","virtualRefresh","remove","insertRecords","removeSelection","afterFullData","tableSourceData","editStore","treeConfig","checkboxOpts","selection","isInsertByRow","scrollYLoad","actived","removeList","insertList","checkField","rest","nowData","Error","getLog","slice","keepSource","rowIdSet","Set","clearActived","handleTableData","updateFooter","checkSelectionStatus","updateScrollYSpace","oldIndex","newIndex","window","sort","splice","triggerName","_createRow","tableFullColumn","createValue","renderVxeGrid","h","ref","class","on","scopedSlots","renderToolbar","add","save","deleteRows","removeEvent","confirmRemove","toolbarPrefix","toolbarSuffix","renderToolbarAfterSlot","renderSubPopover","subForm","renderDetailsModal","mainForm","renderPagination","change","e","pre","render","beforeDestroy","reject","flag","msg","cellValue","findCount","rowData"],"mappings":"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","sourcesContent":["import XEUtils from 'xe-utils'\nimport PropTypes from 'ant-design-vue/es/_util/vue-types'\nimport { JVXETypes } from '@/components/jeecg/JVxeTable/jvxeTypes'\nimport VxeWebSocketMixins from '../mixins/vxe.web.socket.mixins'\nimport { initDictOptions } from '@/components/dict/JDictSelectUtil'\n\nimport { getRefPromise } from '../utils/vxeUtils'\nimport { getEnhancedMixins, replaceProps } from '../utils/cellUtils'\n\nimport JVxeToolbar from './JVxeToolbar'\nimport JVxeSubPopover from './JVxeSubPopover'\nimport JVxeDetailsModal from './JVxeDetailsModal'\nimport JVxePagination from './JVxePagination'\nimport { cloneObject, getVmParentByName, pushIfNotExist, randomString, simpleDebounce } from '@/utils/util'\nimport { UtilTools } from 'vxe-table/packages/tools/src/utils'\nimport { getNoAuthCols } from '@/utils/authFilter'\n\nexport default {\n  name: 'JVxeTable',\n  provide() {\n    return {\n      superTrigger: (name, event) => this.trigger(name, event)\n    }\n  },\n  mixins: [VxeWebSocketMixins],\n  components: {JVxeToolbar, JVxeSubPopover, JVxeDetailsModal, JVxePagination},\n  props: {\n    rowKey: PropTypes.string.def('id'),\n    // 列信息\n    columns: {\n      type: Array,\n      required: true\n    },\n    // 数据源\n    dataSource: {\n      type: Array,\n      required: true\n    },\n    authPre: {\n      type: String,\n      required: false,\n      default: ''\n    },\n    // 是否显示工具栏\n    toolbar: PropTypes.bool.def(false),\n    // 工具栏配置\n    toolbarConfig: PropTypes.object.def(() => ({\n      // prefix 前缀；suffix 后缀；\n      slots: ['prefix', 'suffix'],\n      // add 新增按钮；remove 删除按钮；clearSelection 清空选择按钮；collapse 展开收起\n      btns: ['add', 'remove', 'clearSelection'],\n    })),\n    // 是否显示行号\n    rowNumber: PropTypes.bool.def(false),\n    // 是否可选择行\n    rowSelection: PropTypes.bool.def(false),\n    // 选择行类型\n    rowSelectionType: PropTypes.oneOf(['checkbox', 'radio']).def('checkbox'),\n    // 是否可展开行\n    rowExpand: PropTypes.bool.def(false),\n    // 展开行配置\n    expandConfig: PropTypes.object.def(() => ({})),\n    // 页面是否在加载中\n    loading: PropTypes.bool.def(false),\n    height: PropTypes.instanceOf([Number, String]).def('auto'),\n    // 最大高度\n    maxHeight: {\n      type: Number,\n      default: () => null,\n    },\n    // 要禁用的行 TODO 未实现\n    disabledRows: PropTypes.object.def(() => ({})),\n    // 是否禁用全部组件\n    disabled: PropTypes.bool.def(false),\n    // 是否可拖拽排序 TODO 仅实现上下排序，未实现拖拽排序（可能无法实现或较为困难）\n    dragSort: PropTypes.bool.def(false),\n    // 排序字段保存的Key\n    dragSortKey: PropTypes.string.def('orderNum'),\n    // 大小，可选值有：medium（中）、small（小）、mini（微）、tiny（非常小）\n    size: PropTypes.oneOf(['medium', 'small', 'mini', 'tiny']).def('medium'),\n    // 是否显示边框线\n    bordered: PropTypes.bool.def(false),\n    // 分页器参数，设置了即可显示分页器\n    pagination: PropTypes.object.def(() => ({})),\n    // 点击行时是否显示子表单\n    clickRowShowSubForm: PropTypes.bool.def(false),\n    // 点击行时是否显示主表单\n    clickRowShowMainForm: PropTypes.bool.def(false),\n    // 是否点击选中行，优先级最低\n    clickSelectRow: PropTypes.bool.def(false),\n    // 是否开启 reload 数据效果\n    reloadEffect: PropTypes.bool.def(false),\n    // 校验规则\n    editRules: PropTypes.object.def(() => ({})),\n    // 是否异步删除行，如果你要实现异步删除，那么需要把这个选项开启，\n    // 在remove事件里调用confirmRemove方法才会真正删除（除非删除的全是新增的行）\n    asyncRemove: PropTypes.bool.def(false),\n    // 是否一直显示组件，如果为false则只有点击的时候才出现组件\n    // 注：该参数不能动态修改；如果行、列字段多的情况下，会根据机器性能造成不同程度的卡顿。\n    alwaysEdit: PropTypes.bool.def(false),\n    // 联动配置，数组，详情配置见文档\n    linkageConfig: PropTypes.array.def(() => []),\n  },\n  data() {\n    return {\n      isJVXETable: true,\n      // caseId，表格唯一标识\n      caseId: `_j-vxe-${randomString(8)}_`,\n      // 内置columns\n      _innerColumns: [],\n      // 内置 EditRules\n      _innerEditRules: [],\n      // 记录滚动条位置\n      scroll: {top: 0, left: 0},\n      // 当前是否正在滚动\n      scrolling: false,\n      // vxe 默认配置\n      defaultVxeProps: {\n        'row-id': this.rowKey,\n        // 高亮hover的行\n        'highlight-hover-row': true,\n        // 溢出隐藏并显示tooltip\n        'show-overflow': true,\n        // 表头溢出隐藏并显示tooltip\n        'show-header-overflow': true,\n        'show-footer-overflow': true,\n        // 可编辑配置\n        'edit-config': {trigger: 'click', mode: 'cell', showStatus: true},\n        'expand-config': {\n          iconClose: 'ant-table-row-expand-icon ant-table-row-collapsed',\n          iconOpen: 'ant-table-row-expand-icon ant-table-row-expanded'\n        },\n        // 虚拟滚动配置，y轴大于30条数据时启用虚拟滚动\n        // 'scroll-y': {\n        //   gt: 30\n        // },\n        // 'scroll-x': {\n        //   gt: 15\n        // },\n        'radio-config': {highlight: true},\n        'checkbox-config': {highlight: true},\n      },\n      // 绑定左侧选择框\n      selectedRows: [],\n      // 绑定左侧选择框已选择的id\n      selectedRowIds: [],\n      // 统计列配置\n      statistics: {\n        has: false,\n        sum: [],\n        average: [],\n      },\n      // 允许执行刷新特效的行ID\n      reloadEffectRowKeysMap: {},\n      //配置了但是没有授权的按钮和列 集合\n      excludeCode:[],\n      // 联动下拉选项（用于隔离不同的下拉选项）\n      // 内部联动配置，map\n      _innerLinkageConfig: null,\n    }\n  },\n  computed: {\n\n    // vxe 最终 columns\n    vxeColumns() {\n      this._innerColumns.forEach(column => {\n        let renderOptions = {\n          caseId: this.caseId,\n          bordered: this.bordered,\n          disabled: this.disabled,\n          scrolling: this.scrolling,\n          reloadEffect: this.reloadEffect,\n          reloadEffectRowKeysMap: this.reloadEffectRowKeysMap,\n          listeners: this.cellListeners,\n        }\n        if (column.$type === JVXETypes.rowDragSort) {\n          renderOptions.dragSortKey = this.dragSortKey\n        }\n        // slot 组件特殊处理\n        if (column.$type === JVXETypes.slot) {\n          if (this.$scopedSlots.hasOwnProperty(column.slotName)) {\n            renderOptions.slot = this.$scopedSlots[column.slotName]\n            renderOptions.target = this\n          }\n        }\n        // 处理联动列，联动列只能作用于 select 组件\n        if (column.$type === JVXETypes.select && this._innerLinkageConfig != null) {\n          // 判断当前列是否是联动列\n          if (this._innerLinkageConfig.has(column.key)) {\n            renderOptions.linkage = {\n              config: this._innerLinkageConfig.get(column.key),\n              getLinkageOptionsSibling: this.getLinkageOptionsSibling,\n              getLinkageOptionsAsync: this.getLinkageOptionsAsync,\n              linkageSelectChange: this.linkageSelectChange,\n            }\n          }\n        }\n        if (column.editRender) {\n          Object.assign(column.editRender, renderOptions)\n        }\n        if (column.cellRender) {\n          Object.assign(column.cellRender, renderOptions)\n        }\n        // update--begin--autor:lvdandan-----date:20201019------for:LOWCOD-882 【新行编辑】列表上带按钮的遮挡问题\n        if (column.$type === JVXETypes.file || column.$type === JVXETypes.image) {\n          if (column.width && column.width.endsWith('px')) {\n            column.width = Number.parseInt(column.width.substr(0,column.width.length-2))+Number.parseInt(1)+'px';\n          }\n        }\n        // update--begin--autor:lvdandan-----date:20201019------for:LOWCOD-882 【新行编辑】列表上带按钮的遮挡问题\n\n        // update--begin--autor:lvdandan-----date:20201211------for:JT-118 【online】 日期、时间控件长度较小\n        if (column.$type === JVXETypes.datetime || column.$type === JVXETypes.userSelect || column.$type === JVXETypes.departSelect) {\n          let width = column.width && column.width.endsWith('px')?Number.parseInt(column.width.substr(0,column.width.length-2)):0;\n          if(width <= 190){\n            column.width = '190px'\n          }\n        }\n        if (column.$type === JVXETypes.date) {\n          let width = column.width && column.width.endsWith('px')?Number.parseInt(column.width.substr(0,column.width.length-2)):0;\n          if(width <= 135){\n            column.width = '135px'\n          }\n        }\n        // update--end--autor:lvdandan-----date:20201211------for:JT-118 【online】 日期、时间控件长度较小\n      })\n      return this._innerColumns\n    },\n    // vxe 最终 editRules\n    vxeEditRules() {\n      return Object.assign({}, this.editRules, this._innerEditRules)\n    },\n    // vxe 最终 props\n    vxeProps() {\n      let expandConfig = Object.assign({}, this.defaultVxeProps['expand-config'], this.expandConfig)\n\n      return Object.assign({}, this.defaultVxeProps, {\n        showFooter: this.statistics.has,\n      }, this.$attrs, {\n        loading: this.loading,\n        columns: this.vxeColumns,\n        editRules: this.vxeEditRules,\n        // data: this.dataSource,\n        height: this.height === 'auto' ? null : this.height,\n        maxHeight: this.maxHeight,\n        border: this.bordered,\n        expandConfig: expandConfig,\n        footerMethod: this.handleFooterMethod,\n        // footerSpanMethod: this.handleFooterSpanMethod,\n      })\n    },\n    // vxe 最终 events\n    vxeEvents() {\n      // 内置事件\n      let events = {\n        'scroll': this.handleVxeScroll,\n        'cell-click': this.handleCellClick,\n        'edit-closed': this.handleEditClosed,\n        'edit-actived': this.handleEditActived,\n        'radio-change': this.handleVxeRadioChange,\n        'checkbox-all': this.handleVxeCheckboxAll,\n        'checkbox-change': this.handleVxeCheckboxChange,\n      }\n      // 用户传递的事件，进行合并操作\n      Object.keys(this.$listeners).forEach(key => {\n        let listen = this.$listeners[key]\n        if (events.hasOwnProperty(key)) {\n          if (Array.isArray(listen)) {\n            listen.push(events[key])\n          } else {\n            listen = [events[key], listen]\n          }\n        }\n        events[key] = listen\n      })\n      return events\n    },\n    // 组件监听事件\n    cellListeners() {\n      return {\n        trigger: (name, event) => this.trigger(name, event),\n        valueChange: event => this.trigger('valueChange', event),\n        /** 当前行向上移一位 */\n        rowMoveUp: rowIndex => this.rowResort(rowIndex, rowIndex - 1),\n        /** 当前行向下移一位 */\n        rowMoveDown: rowIndex => this.rowResort(rowIndex, rowIndex + 1),\n        /** 在当前行下面插入一行 */\n        rowInsertDown: rowIndex => this.insertRows({}, rowIndex + 1),\n      }\n    },\n  },\n  watch: {\n    dataSource: {\n      //   deep: true,\n      immediate: true,\n      async handler() {\n        let vxe = await getRefPromise(this, 'vxe')\n\n        this.dataSource.forEach((data, idx) => {\n          // 开启了排序就自动计算排序值\n          if (this.dragSort) {\n            this.$set(data, this.dragSortKey, idx + 1)\n          }\n          // 处理联动回显数据\n          if (this._innerLinkageConfig != null) {\n            for (let configItem of this._innerLinkageConfig.values()) {\n              this.autoSetLinkageOptionsByData(data, '', configItem, 0)\n            }\n          }\n        })\n\n        // 阻断vue监听大数据，提高性能\n        vxe.loadData(this.dataSource)\n\n        // TODO 解析disabledRows\n        // let disabled = false\n        //\n        // let disabledRowIds = (this.disabledRowIds || [])\n        // // 解析disabledRows\n        // Object.keys(this.disabledRows).forEach(disabledColKey => {\n        //   // 判断是否有该属性\n        //   if (data.hasOwnProperty(disabledColKey)) {\n        //     if (disabled !== true) {\n        //       let temp = this.disabledRows[disabledColKey]\n        //       // 禁用规则可以是一个数组\n        //       if (Array.isArray(temp)) {\n        //         disabled = temp.includes(data[disabledColKey])\n        //       } else {\n        //         disabled = (temp === data[disabledColKey])\n        //       }\n        //       if (disabled) {\n        //         disabledRowIds.push(row.id)\n        //       }\n        //     }\n        //   }\n        // })\n      },\n    },\n    columns: {\n      immediate: true,\n      handler(columns) {\n        //获取不需要显示列\n        this.loadExcludeCode()\n        let _innerColumns = []\n        let _innerEditRules = {}\n        let {rowNumber, rowSelection, rowExpand, dragSort} = this\n        let expandColumn, seqColumn, checkboxColumn, radioColumn, dragSortColumn\n        if (Array.isArray(columns)) {\n          this.statistics.has = false\n          this.statistics.sum = []\n          this.statistics.average = []\n\n          // 处理成vxe可识别的columns\n          columns.forEach(column => {\n            if(this.excludeCode.indexOf(column.key)>=0){\n              return false\n            }\n            let col = {...column}\n            let {type} = col\n            const enhanced = getEnhancedMixins(type)\n            if (type === JVXETypes.rowNumber) {\n              seqColumn = col\n            } else if (type === JVXETypes.rowCheckbox) {\n              checkboxColumn = col\n            } else if (type === JVXETypes.rowRadio) {\n              radioColumn = col\n            } else if (type === JVXETypes.rowExpand) {\n              expandColumn = col\n            } else if (type === JVXETypes.rowDragSort) {\n              dragSortColumn = col\n            } else {\n              col.field = col.key\n              // 防止和vxeTable自带的type起冲突\n              col.$type = col.type\n              delete col.type\n              let renderName = 'cellRender', renderOptions = {name: JVXETypes._prefix + type}\n              if (type) {\n                // hidden 是特殊的组件\n                if (type === JVXETypes.hidden) {\n                  col.visible = false\n                } else if (enhanced.switches.editRender) {\n                  renderName = 'editRender'\n                  renderOptions.type = (enhanced.switches.visible || this.alwaysEdit) ? 'visible' : 'default'\n                }\n              } else {\n                renderOptions.name = JVXETypes._prefix + JVXETypes.normal\n              }\n              col[renderName] = renderOptions\n              // 处理字典\n              if (col.dictCode) {\n                this._loadDictConcatToOptions(col)\n              }\n              // 处理校验\n              if (col.validateRules) {\n                let rules = []\n                if (Array.isArray(col.validateRules)) {\n                  for (let rule of col.validateRules) {\n                    let replace = {\n                      message: replaceProps(col, rule.message)\n                    }\n                    if (rule.unique || rule.pattern === 'only') {\n                      // 唯一校验器\n                      rule.validator = uniqueValidator.bind(this)\n                    } else if (rule.pattern) {\n                      // 非空\n                      if (rule.pattern === fooPatterns[0].value) {\n                        rule.required = true\n                        delete rule.pattern\n                      } else {\n                        // 兼容Online表单的特殊规则\n                        for (let foo of fooPatterns) {\n                          if (foo.value === rule.pattern) {\n                            rule.pattern = foo.pattern\n                            break\n                          }\n                        }\n                      }\n                    } else if (typeof rule.handler === 'function') {\n                      // 自定义函数校验\n                      rule.validator = handlerConvertToValidator.bind(this)\n                    }\n                    rules.push(Object.assign({}, rule, replace))\n                  }\n                }\n                _innerEditRules[col.key] = rules\n              }\n              // 处理统计列\n              // sum = 求和、average = 平均值\n              if (Array.isArray(col.statistics)) {\n                this.statistics.has = true\n                col.statistics.forEach(item => {\n                  let arr = this.statistics[item.toLowerCase()]\n                  if (Array.isArray(arr)) {\n                    pushIfNotExist(arr, col.key)\n                  }\n                })\n              }\n              _innerColumns.push(col)\n            }\n          })\n        }\n        // 判断是否开启了序号\n        if (rowNumber) {\n          let col = {type: 'seq', title: '#', width: 60, fixed: 'left', align: 'center'}\n          if (seqColumn) {\n            col = Object.assign(col, seqColumn, {type: 'seq'})\n          }\n          _innerColumns.unshift(col)\n        }\n        // 判断是否开启了可选择行\n        if (rowSelection) {\n          let width = 40\n          if (this.statistics.has && !rowExpand && !dragSort) {\n            width = 60\n          }\n          let col = {type: this.rowSelectionType, width, fixed: 'left', align: 'center'}\n          // radio\n          if (this.rowSelectionType === 'radio' && radioColumn) {\n            col = Object.assign(col, radioColumn, {type: 'radio'})\n          }\n          // checkbox\n          if (this.rowSelectionType === 'checkbox' && checkboxColumn) {\n            col = Object.assign(col, checkboxColumn, {type: 'checkbox'})\n          }\n          _innerColumns.unshift(col)\n        }\n        // 是否可展开行\n        if (rowExpand) {\n          let width = 40\n          if (this.statistics.has && !dragSort) {\n            width = 60\n          }\n          let col = {type: 'expand', title: '', width, fixed: 'left', align: 'center', slots: {content: 'expandContent'}}\n          if (expandColumn) {\n            col = Object.assign(col, expandColumn, {type: 'expand'})\n          }\n          _innerColumns.unshift(col)\n        }\n        // 是否可拖动排序\n        if (dragSort) {\n          let width = 40\n          if (this.statistics.has) {\n            width = 60\n          }\n          let col = {type: JVXETypes.rowDragSort, title: '', width, fixed: 'left', align: 'center', cellRender: {name: JVXETypes._prefix + JVXETypes.rowDragSort}}\n          if (dragSortColumn) {\n            col = Object.assign(col, dragSortColumn, {type: JVXETypes.rowDragSort})\n          }\n          _innerColumns.unshift(col)\n        }\n\n        this._innerColumns = _innerColumns\n        this._innerEditRules = _innerEditRules\n      }\n    },\n    // watch linkageConfig\n    // 整理多级联动配置\n    linkageConfig: {\n      immediate: true,\n      handler() {\n        if (Array.isArray(this.linkageConfig) && this.linkageConfig.length > 0) {\n          // 获取联动的key顺序\n          let getLcKeys = (key, arr) => {\n            let col = this._innerColumns.find(col => col.key === key)\n            if (col) {\n              arr.push(col.key)\n              if (col.linkageKey) {\n                return getLcKeys(col.linkageKey, arr)\n              }\n            }\n            return arr\n          }\n          let configMap = new Map()\n          this.linkageConfig.forEach(lc => {\n            let keys = getLcKeys(lc.key, [])\n            // 多个key共享一个，引用地址\n            let configItem = {\n              ...lc, keys,\n              optionsMap: new Map()\n            }\n            keys.forEach(k => configMap.set(k, configItem))\n          })\n          this._innerLinkageConfig = configMap\n        } else {\n          this._innerLinkageConfig = null\n        }\n      }\n    },\n  },\n  created() {\n  },\n  mounted() {\n    this.handleTabsChange()\n  },\n  methods: {\n\n    /**\n     * 自动判断父级是否是 <a-tabs/> 组件，然后添加事件监听，自动重置表格\n     */\n    handleTabsChange() {\n      // 获取父级\n      const tabs = getVmParentByName(this, 'ATabs')\n      const tabPane = getVmParentByName(this, 'ATabPane')\n      if (tabs && tabPane) {\n        // 用户自定义的 key\n        const currentKey = tabPane.$vnode.key\n        // 添加 activeKey 监听\n        const unwatch = tabs.$children[0].$watch('$data._activeKey', async (key) => {\n          // 切换到自己时重新计算\n          if (currentKey === key) {\n            await this.$nextTick()\n            await this.refreshScroll()\n            await this.recalculate()\n          }\n        })\n        // 当前实例销毁时取消监听\n        this.$on('beforeDestroy', () => unwatch())\n      }\n    },\n\n    handleVxeScroll(event) {\n      let {$refs, scroll} = this\n\n      // 记录滚动条的位置\n      scroll.top = event.scrollTop\n      scroll.left = event.scrollLeft\n\n      $refs.subPopover ? $refs.subPopover.close() : null\n      this.scrolling = true\n      this.closeScrolling()\n    },\n    // 当手动勾选单选时触发的事件\n    handleVxeRadioChange(event) {\n      let row = event.$table.getRadioRecord()\n      this.selectedRows = row ? [row] : []\n      this.handleSelectChange('radio', this.selectedRows, event)\n    },\n    // 当手动勾选全选时触发的事件\n    handleVxeCheckboxAll(event) {\n      this.selectedRows = event.$table.getCheckboxRecords()\n      this.handleSelectChange('checkbox-all', this.selectedRows, event)\n    },\n    // 当手动勾选并且值发生改变时触发的事件\n    handleVxeCheckboxChange(event) {\n      this.selectedRows = event.$table.getCheckboxRecords()\n      this.handleSelectChange('checkbox', this.selectedRows, event)\n    },\n    // 行选择change事件\n    handleSelectChange(type, selectedRows, $event) {\n      let action\n      if (type === 'radio') {\n        action = 'selected'\n      } else if (type === 'checkbox') {\n        action = selectedRows.includes($event.row) ? 'selected' : 'unselected'\n      } else {\n        action = 'selected-all'\n      }\n\n      this.selectedRowIds = selectedRows.map(row => row.id)\n      this.trigger('selectRowChange', {\n        type: type,\n        action: action,\n        $event: $event,\n        row: $event.row,\n        selectedRows: this.selectedRows,\n        selectedRowIds: this.selectedRowIds\n      })\n    },\n\n    // 点击单元格时触发的事件\n    handleCellClick(event) {\n      let {row, column, $event, $table} = event\n      let {$refs} = this\n\n      // 点击了可编辑的\n      if (column.editRender) {\n        $refs.subPopover ? $refs.subPopover.close() : null\n        return\n      }\n\n      // 显示详细信息\n      if (column.own.showDetails) {\n        // 两个如果同时存在的话会出现死循环\n        $refs.subPopover ? $refs.subPopover.close() : null\n        $refs.detailsModal ? $refs.detailsModal.open(event) : null\n      } else if ($refs.subPopover) {\n        $refs.subPopover.toggle(event)\n      } else if (this.clickSelectRow) {\n        let className = $event.target.className || ''\n        className = typeof className === 'string' ? className : className.toString()\n        // 点击的是expand，不做处理\n        if (className.includes('vxe-table--expand-btn')) {\n          return\n        }\n        // 点击的是checkbox，不做处理\n        if (className.includes('vxe-checkbox--icon') || className.includes('vxe-cell--checkbox')) {\n          return\n        }\n        // 点击的是radio，不做处理\n        if (className.includes('vxe-radio--icon') || className.includes('vxe-cell--radio')) {\n          return\n        }\n        if (this.rowSelectionType === 'radio') {\n          $table.setRadioRow(row)\n          this.handleVxeRadioChange(event)\n        } else {\n          $table.toggleCheckboxRow(row)\n          this.handleVxeCheckboxChange(event)\n        }\n      }\n    },\n\n    // 单元格编辑状态下被关闭时会触发该事件\n    handleEditClosed({column}) {\n      // 执行增强\n      getEnhancedMixins(column.own.$type, 'aopEvents').editClosed.apply(this, arguments)\n    },\n\n    // 单元格被激活编辑时会触发该事件\n    handleEditActived({column}) {\n      // 执行增强\n      getEnhancedMixins(column.own.$type, 'aopEvents').editActived.apply(this, arguments)\n    },\n\n    /** 表尾数据处理方法，用于显示统计信息 */\n    handleFooterMethod({columns, data}) {\n      const {statistics} = this\n      let footers = []\n      if (statistics.has) {\n        if (statistics.sum.length > 0) {\n          footers.push(this.getFooterStatisticsMap({\n            columns: columns,\n            title: '合计',\n            checks: statistics.sum,\n            method: (column) => XEUtils.sum(data, column.property)\n          }))\n        }\n        if (statistics.average.length > 0) {\n          footers.push(this.getFooterStatisticsMap({\n            columns: columns,\n            title: '平均',\n            checks: statistics.average,\n            method: (column) => XEUtils.mean(data, column.property)\n          }))\n        }\n      }\n      return footers\n    },\n\n    getFooterStatisticsMap({columns, title, checks, method}) {\n      return columns.map((column, columnIndex) => {\n        if (columnIndex === 0) {\n          return title\n        }\n        if (checks.includes(column.property)) {\n          return method(column, columnIndex)\n        }\n        return null\n      })\n    },\n\n    /** 表尾单元格合并方法 */\n    handleFooterSpanMethod(event) {\n      if (event.columnIndex === 0) {\n        return {colspan: 2}\n      }\n    },\n\n    /*--- 外部可调用接口方法 ---*/\n\n    /**\n     * 重置滚动条Top位置\n     * @param top 新top位置，留空则滚动到上次记录的位置，用于解决切换tab选项卡时导致白屏以及自动将滚动条滚动到顶部的问题\n     */\n    resetScrollTop(top) {\n      this.scrollTo(null, (top == null || top === '') ? this.scroll.top : top)\n    },\n\n    /**\n     * 加载新数据，和 loadData 不同的是，用该方法加载的数据都是相当于点新增按钮新增的数据。\n     * 适用于不是数据库里查出来的没有id的临时数据\n     * @param dataSource\n     */\n    async loadNewData(dataSource) {\n      if (Array.isArray(dataSource)) {\n        let {xTable} = this.$refs.vxe.$refs\n        // issues/2784\n        // 先清空所有数据\n        xTable.loadData([])\n\n        dataSource.forEach((data, idx) => {\n          // 开启了排序就自动计算排序值\n          if (this.dragSort) {\n            this.$set(data, this.dragSortKey, idx + 1)\n          }\n          // 处理联动回显数据\n          if (this._innerLinkageConfig != null) {\n            for (let configItem of this._innerLinkageConfig.values()) {\n              this.autoSetLinkageOptionsByData(data, '', configItem, 0)\n            }\n          }\n        })\n        // 再新增\n        return xTable.insertAt(dataSource)\n      }\n      return []\n    },\n\n    // 校验table，失败返回errMap，成功返回null\n    async validateTable() {\n      const errMap = await this.validate().catch(errMap => errMap)\n      return errMap ? errMap : null\n    },\n    // 完整校验\n    async fullValidateTable() {\n      const errMap = await this.fullValidate().catch(errMap => errMap)\n      return errMap ? errMap : null\n    },\n\n    /** 设置某行某列的值 */\n    setValues(values) {\n      if (!Array.isArray(values)) {\n        console.warn(`JVxeTable.setValues：必须传递数组`)\n        return\n      }\n      // 是否更新了数据\n      let updated = false\n      values.forEach((item, idx) => {\n        let {rowKey, values: record} = item\n        let {row} = this.getIfRowById(rowKey)\n        if (!row) {\n          return\n        }\n        Object.keys(record).forEach(colKey => {\n          let column = this.getColumnByKey(colKey)\n          if (column) {\n            let oldValue = row[colKey]\n            let newValue = record[colKey]\n            if (newValue !== oldValue) {\n              updated = true\n              this.$set(row, colKey, newValue)\n              // 触发 valueChange 事件\n              this.trigger('valueChange', {\n                type: column.own.$type,\n                value: newValue,\n                oldValue: oldValue,\n                col: column.own,\n                column: column,\n                isSetValues: true,\n              })\n            }\n          } else {\n            console.warn(`JVxeTable.setValues：没有找到key为\"${colKey}\"的列`)\n          }\n        })\n      })\n      // 【issues/3828】数据更新后，重新计算统计列 \n      if (updated && this.statistics.has) {\n        this.$nextTick(async () => {\n          let {xTable} = this.$refs.vxe.$refs;\n          await xTable.updateCache(true);\n          await xTable.updateData();\n        });\n      }\n    },\n\n    /** 获取所有的数据，包括values、deleteIds */\n    getAll() {\n      return {\n        tableData: this.getTableData(),\n        deleteData: this.getDeleteData()\n      }\n    },\n    /** 获取表格表单里的值 */\n    getValues(callback, rowIds) {\n      let tableData = this.getTableData({rowIds: rowIds})\n      callback('', tableData)\n    },\n    /** 获取表格数据 */\n    getTableData(options = {}) {\n      let {rowIds} = options\n      let tableData\n      // 仅查询指定id的行\n      if (Array.isArray(rowIds) && rowIds.length > 0) {\n        tableData = []\n        rowIds.forEach(rowId => {\n          let {row} = this.getIfRowById(rowId)\n          if (row) {\n            tableData.push(row)\n          }\n        })\n      } else {\n        // 查询所有行\n        tableData = this.$refs.vxe.getTableData().fullData\n      }\n      return this.filterNewRows(tableData, false)\n    },\n    /** 仅获取新增的数据 */\n    getNewData() {\n      let newData = cloneObject(this.$refs.vxe.getInsertRecords())\n      newData.forEach(row => delete row.id)\n      return newData\n    },\n    /** 仅获取新增的数据,带有id */\n    getNewDataWithId() {\n      let newData = cloneObject(this.$refs.vxe.getInsertRecords())\n      return newData\n    },\n    /** 根据ID获取行，新增的行也能查出来 */\n    getIfRowById(id) {\n      let row = this.getRowById(id), isNew = false\n      if (!row) {\n        row = this.getNewRowById(id)\n        if (!row) {\n          console.warn(`JVxeTable.getIfRowById：没有找到id为\"${id}\"的行`)\n          return {row: null}\n        }\n        isNew = true\n      }\n      return {row, isNew}\n    },\n    /** 通过临时ID获取新增的行 */\n    getNewRowById(id) {\n      let records = this.getInsertRecords()\n      for (let record of records) {\n        if (record.id === id) {\n          return record\n        }\n      }\n      return null\n    },\n    /** 仅获取被删除的数据（新增又被删除的数据不会被获取到） */\n    getDeleteData() {\n      return cloneObject(this.$refs.vxe.getRemoveRecords())\n    },\n    /**\n     * 添加一行或多行\n     *\n     * @param rows\n     * @param isOnlJs 是否是onlineJS增强触发的\n     * @return\n     */\n    async addRows(rows = {}, isOnlJs) {\n      return this._addOrInsert(rows, -1, 'added', isOnlJs)\n    },\n\n    /**\n     * 添加一行或多行\n     *\n     * @param rows\n     * @param index 添加下标，数字，必填\n     * @return\n     */\n    async insertRows(rows, index) {\n      if (typeof index !== 'number' || index < 0) {\n        console.warn(`【JVXETable】insertRows：index必须传递数字，且大于-1`)\n        return\n      }\n      return this._addOrInsert(rows, index, 'inserted')\n    },\n    /**\n     * 添加一行或多行临时数据，不会填充默认值，传什么就添加进去什么\n     * @param rows\n     * @param options 选项\n     * @param options.setActive 是否激活最后一行的编辑模式\n     */\n    async pushRows(rows = {}, options = {}) {\n      let {xTable} = this.$refs.vxe.$refs\n      let {setActive, index} = options\n      setActive = setActive == null ? false : !!setActive\n      index = index == null ? -1 : index\n      index = index === -1 ? index : xTable.tableFullData[index]\n      // 插入行\n      let result = await xTable.insertAt(rows, index)\n      if (setActive) {\n        // 激活最后一行的编辑模式\n        xTable.setActiveRow(result.rows[result.rows.length - 1])\n      }\n      await this._recalcSortNumber()\n      return result\n    },\n\n    /** 清空选择行 */\n    clearSelection() {\n      let event = {$table: this.$refs.vxe, target: this}\n      if (this.rowSelectionType === JVXETypes.rowRadio) {\n        this.$refs.vxe.clearRadioRow()\n        this.handleVxeRadioChange(event)\n      } else {\n        this.$refs.vxe.clearCheckboxRow()\n        this.handleVxeCheckboxChange(event)\n      }\n    },\n\n    /** 删除一行或多行数据 */\n    async removeRows(rows) {\n      const res = await this._remove(rows)\n      await this._recalcSortNumber()\n      return res\n    },\n\n    /** 根据id删除一行或多行 */\n    removeRowsById(rowId) {\n      let rowIds\n      if (Array.isArray(rowId)) {\n        rowIds = rowId\n      } else {\n        rowIds = [rowId]\n      }\n      let rows = rowIds.map((id) => {\n        let {row} = this.getIfRowById(id)\n        if (!row) {\n          return\n        }\n        if (row) {\n          return row\n        } else {\n          console.warn(`【JVXETable】removeRowsById：${id}不存在`)\n          return null\n        }\n      }).filter((row) => row != null)\n      return this.removeRows(rows)\n    },\n\n    getColumnByKey() {\n      return this.$refs.vxe.getColumnByField.apply(this.$refs.vxe, arguments)\n    },\n\n    /* --- 辅助方法 ---*/\n\n    // 触发事件\n    trigger(name, event = {}) {\n      event.$target = this\n      event.$table = this.$refs.vxe\n      //online增强参数兼容\n      event.target = this\n      this.$emit(name, event)\n    },\n\n    /** 【多级联动】获取同级联动下拉选项 */\n    getLinkageOptionsSibling(row, col, config, request) {\n      // 如果当前列不是顶级列\n      let key = ''\n      if (col.key !== config.key) {\n        // 就找出联动上级列\n        let idx = config.keys.findIndex(k => col.key === k)\n        let parentKey = config.keys[idx - 1]\n        key = row[parentKey]\n        // 如果联动上级列没有选择数据，就直接返回空数组\n        if (key === '' || key == null) {\n          return []\n        }\n      } else {\n        key = 'root'\n      }\n      let options = config.optionsMap.get(key)\n      if (!Array.isArray(options)) {\n        if (request) {\n          let parent = key === 'root' ? '' : key\n          return this.getLinkageOptionsAsync(config, parent)\n        } else {\n          options = []\n        }\n      }\n      return options\n    },\n    /** 【多级联动】获取联动下拉选项（异步） */\n    getLinkageOptionsAsync(config, parent) {\n      return new Promise(resolve => {\n        let key = parent ? parent : 'root'\n        let options\n        if (config.optionsMap.has(key)) {\n          options = config.optionsMap.get(key)\n          if (options instanceof Promise) {\n            options.then(opt => {\n              config.optionsMap.set(key, opt)\n              resolve(opt)\n            })\n          } else {\n            resolve(options)\n          }\n        } else if (typeof config.requestData === 'function') {\n          // 调用requestData方法，通过传入parent来获取子级\n          let promise = config.requestData(parent)\n          config.optionsMap.set(key, promise)\n          promise.then(opt => {\n            config.optionsMap.set(key, opt)\n            resolve(opt)\n          })\n        } else {\n          resolve([])\n        }\n      })\n    },\n    // 【多级联动】 用于回显数据，自动填充 optionsMap\n    autoSetLinkageOptionsByData(data, parent, config, level) {\n      if (level === 0) {\n        this.getLinkageOptionsAsync(config, '')\n      } else {\n        this.getLinkageOptionsAsync(config, parent)\n      }\n      if (config.keys.length - 1 > level) {\n        let value = data[config.keys[level]]\n        if (value) {\n          this.autoSetLinkageOptionsByData(data, value, config, level + 1)\n        }\n      }\n    },\n    // 【多级联动】联动组件change时，清空下级组件\n    linkageSelectChange(row, col, config, value) {\n      if (col.linkageKey) {\n        this.getLinkageOptionsAsync(config, value)\n        let idx = config.keys.findIndex(k => k === col.key)\n        let values = {}\n        for (let i = idx; i < config.keys.length; i++) {\n          values[config.keys[i]] = ''\n        }\n        // 清空后几列的数据\n        this.setValues([{rowKey: row.id, values}])\n      }\n    },\n\n    /** 加载数据字典并合并到 options */\n    _loadDictConcatToOptions(column) {\n      initDictOptions(column.dictCode).then((res) => {\n        if (res.success) {\n          let newOptions = (column.options || [])// .concat(res.result)\n          res.result.forEach(item => {\n            // 过滤重复数据\n            for (let option of newOptions) if (option.value === item.value) return\n            newOptions.push(item)\n          })\n          this.$set(column, 'options', newOptions)\n        } else {\n          console.group(`JVxeTable 查询字典(${column.dictCode})发生异常`)\n          console.warn(res.message)\n          console.groupEnd()\n        }\n      })\n    },\n    //options自定义赋值 刷新\n    virtualRefresh(){\n      this.scrolling = true\n      this.closeScrolling()\n    },\n    // 设置 this.scrolling 防抖模式\n    closeScrolling: simpleDebounce(function () {\n      this.scrolling = false\n    }, 100),\n\n    /**\n     * 过滤添加的行\n     * @param rows 要筛选的行数据\n     * @param remove true = 删除新增，false=只删除id\n     * @param handler function\n     */\n    filterNewRows(rows, remove = true, handler) {\n      let insertRecords = this.$refs.vxe.getInsertRecords()\n      let records = []\n      for (let row of rows) {\n        let item = cloneObject(row)\n        if (insertRecords.includes(row)) {\n          handler ? handler({item, row, insertRecords}) : null\n\n          if (remove) {\n            continue\n          }\n          delete item.id\n        }\n        records.push(item)\n      }\n      return records\n    },\n\n    // 删除选中的数据\n    async removeSelection() {\n      let res = await this._remove(this.selectedRows)\n      this.clearSelection()\n      await this._recalcSortNumber()\n      return res\n    },\n\n    /**\n     * 【删除指定行数据】（重写vxeTable的内部方法，添加了从keepSource中删除）\n     * 如果传 row 则删除一行\n     * 如果传 rows 则删除多行\n     * 如果为空则删除所有\n     */\n    _remove(rows) {\n      const xTable = this.$refs.vxe.$refs.xTable\n\n      const {afterFullData, tableFullData, tableSourceData, editStore, treeConfig, checkboxOpts, selection, isInsertByRow, scrollYLoad} = xTable\n      const {actived, removeList, insertList} = editStore\n      const {checkField: property} = checkboxOpts\n      let rest = []\n      const nowData = afterFullData\n      if (treeConfig) {\n        throw new Error(UtilTools.getLog('vxe.error.noTree', ['remove']))\n      }\n      if (!rows) {\n        rows = tableFullData\n      } else if (!XEUtils.isArray(rows)) {\n        rows = [rows]\n      }\n      // 如果是新增，则保存记录\n      rows.forEach(row => {\n        if (!isInsertByRow(row)) {\n          removeList.push(row)\n        }\n      })\n      // 如果绑定了多选属性，则更新状态\n      if (!property) {\n        XEUtils.remove(selection, row => rows.indexOf(row) > -1)\n      }\n      // 从数据源中移除\n      if (tableFullData === rows) {\n        rows = rest = tableFullData.slice(0)\n        tableFullData.length = 0\n        nowData.length = 0\n      } else {\n        rest = XEUtils.remove(tableFullData, row => rows.indexOf(row) > -1)\n        XEUtils.remove(nowData, row => rows.indexOf(row) > -1)\n      }\n      // 【从keepSource中删除】\n      if (xTable.keepSource) {\n        let rowIdSet = new Set(rows.map(row => row.id))\n        XEUtils.remove(tableSourceData, row => rowIdSet.has(row.id))\n      }\n\n      // 如果当前行被激活编辑，则清除激活状态\n      if (actived.row && rows.indexOf(actived.row) > -1) {\n        xTable.clearActived()\n      }\n      // 从新增中移除已删除的数据\n      XEUtils.remove(insertList, row => rows.indexOf(row) > -1)\n      xTable.handleTableData()\n      xTable.updateFooter()\n      xTable.updateCache()\n      xTable.checkSelectionStatus()\n      if (scrollYLoad) {\n        xTable.updateScrollYSpace()\n      }\n      return xTable.$nextTick().then(() => {\n        xTable.recalculate()\n        return {row: rest.length ? rest[rest.length - 1] : null, rows: rest}\n      })\n    },\n\n    /** 行重新排序 */\n    async rowResort(oldIndex, newIndex) {\n      const xTable = this.$refs.vxe.$refs.xTable\n      window.xTable = xTable\n      const sort = (array) => {\n        // 存储旧数据，并删除旧项目\n        let row = array.splice(oldIndex, 1)[0]\n        // 向新项目里添加旧数据\n        array.splice(newIndex, 0, row)\n      }\n      sort(xTable.tableFullData)\n      if (xTable.keepSource) {\n        sort(xTable.tableSourceData)\n      }\n      await this.$nextTick()\n      await this._recalcSortNumber()\n    },\n\n    /** 重新计算排序字段的数值 */\n    async _recalcSortNumber() {\n      const xTable = this.$refs.vxe.$refs.xTable\n      if (this.dragSort) {\n        xTable.tableFullData.forEach((data, idx) => data[this.dragSortKey] = (idx + 1))\n      }\n      await xTable.updateCache(true)\n      return await xTable.updateData()\n    },\n\n    async _addOrInsert(rows = {}, index, triggerName, isOnlJs) {\n      let {xTable} = this.$refs.vxe.$refs\n      let records\n      if (Array.isArray(rows)) {\n        records = rows\n      } else {\n        records = [rows]\n      }\n      // 遍历添加默认值\n      records.forEach(record => this._createRow(record))\n      let result = await this.pushRows(records, {index: index, setActive: true})\n      // 遍历插入的行\n      // update--begin--autor:lvdandan-----date:20201117------for:LOWCOD-987 【新行编辑】js增强附表内置方法调用问题 #1819\n      // online js增强时以传过来值为准，不再赋默认值\n      if (isOnlJs != true) {\n        for (let i = 0; i < result.rows.length; i++) {\n          let row = result.rows[i]\n          this.trigger(triggerName, {\n            row: row,\n            $table: xTable,\n            target: this,\n          })\n        }\n      }\n      // update--end--autor:lvdandan-----date:20201117------for:LOWCOD-987 【新行编辑】js增强附表内置方法调用问题 #1819\n      return result\n    },\n    // 创建新行，自动添加默认值\n    _createRow(record = {}) {\n      let {xTable} = this.$refs.vxe.$refs\n      // 添加默认值\n      xTable.tableFullColumn.forEach(column => {\n        let col = column.own\n        if (col.key && (record[col.key] == null || record[col.key] === '')) {\n          // 设置默认值\n          let createValue = getEnhancedMixins(col.$type || col.type, 'createValue')\n          record[col.key] = createValue({row: record, column, $table: xTable})\n        }\n        // update-begin--author:sunjianlei---date:20210819------for: 处理联动列，联动列只能作用于 select 组件\n        if (col.$type === JVXETypes.select && this._innerLinkageConfig != null) {\n          // 判断当前列是否是联动列\n          if (this._innerLinkageConfig.has(col.key)) {\n            let configItem = this._innerLinkageConfig.get(col.key)\n            this.getLinkageOptionsAsync(configItem, '')\n          }\n        }\n        // update-end--author:sunjianlei---date:20210819------for: 处理联动列，联动列只能作用于 select 组件\n      })\n      return record\n    },\n\n    /*--- 渲染函数 ---*/\n\n    // 渲染 vxe\n    renderVxeGrid(h) {\n      return h('vxe-grid', {\n        ref: 'vxe',\n        class: ['j-vxe-table'],\n        props: this.vxeProps,\n        on: this.vxeEvents,\n        // 作用域插槽的格式为\n        scopedSlots: this.$scopedSlots,\n      })\n    },\n    // 渲染工具栏\n    renderToolbar(h) {\n      if (this.toolbar) {\n        return h('j-vxe-toolbar', {\n          props: {\n            toolbarConfig: this.toolbarConfig,\n            excludeCode: this.excludeCode,\n            size: this.size,\n            disabled: this.disabled,\n            disabledRows: this.disabledRows,\n            selectedRowIds: this.selectedRowIds,\n          },\n          on: {\n            // 新增事件\n            add: () => this.addRows(),\n            // 保存事件\n            save: () => this.trigger('save', {\n              $table: this.$refs.vxe,\n              target: this,\n            }),\n            // 删除事件\n            remove: () => {\n              let $table = this.$refs.vxe\n              let deleteRows = this.filterNewRows(this.selectedRows)\n              // 触发删除事件\n              if (deleteRows.length > 0) {\n                let removeEvent = {deleteRows, $table, target: this}\n                if (this.asyncRemove) {\n                  // 确认删除，只有调用这个方法才会真删除\n                  removeEvent.confirmRemove = () => this.removeSelection()\n                } else {\n                  this.removeSelection()\n                }\n                this.trigger('remove', removeEvent)\n              } else {\n                this.removeSelection()\n              }\n            },\n            // 清除选择事件\n            clearSelection: this.clearSelection\n          },\n          scopedSlots: {\n            toolbarPrefix: this.$scopedSlots.toolbarPrefix,\n            toolbarSuffix: this.$scopedSlots.toolbarSuffix,\n          },\n        })\n      }\n      return null\n    },\n    // 渲染 toolbarAfter 插槽\n    renderToolbarAfterSlot() {\n      if (this.$scopedSlots['toolbarAfter']) {\n        return this.$scopedSlots['toolbarAfter']()\n      }\n      return null\n    },\n    // 渲染点击时弹出的子表\n    renderSubPopover(h) {\n      if (this.clickRowShowSubForm && this.$scopedSlots.subForm) {\n        return h('j-vxe-sub-popover', {\n          ref: 'subPopover',\n          scopedSlots: {\n            subForm: this.$scopedSlots.subForm,\n          }\n        })\n      }\n      return null\n    },\n    // 渲染点击时弹出的详细信息\n    renderDetailsModal(h) {\n      if (this.clickRowShowMainForm && this.$scopedSlots.mainForm) {\n        return h('j-vxe-details-modal', {\n          ref: 'detailsModal',\n          scopedSlots: {\n            subForm: this.clickRowShowSubForm ? this.$scopedSlots.subForm : null,\n            mainForm: this.$scopedSlots.mainForm\n          }\n        })\n      }\n    },\n    // 渲染分页器\n    renderPagination(h) {\n      if (this.pagination && Object.keys(this.pagination).length > 0) {\n        return h('j-vxe-pagination', {\n          props: {\n            size: this.size,\n            disabled: this.disabled,\n            pagination: this.pagination\n          },\n          on: {\n            change: (e) => this.trigger('pageChange', e)\n          },\n        })\n      }\n      return null\n    },\n    loadExcludeCode(){\n      if(!this.authPre || this.authPre.length==0){\n        this.excludeCode = []\n      }else{\n        let pre = this.authPre\n        if(!pre.endsWith(':')){\n          pre += ':'\n        }\n        this.excludeCode = getNoAuthCols(pre)\n      }\n    }\n\n  },\n  render(h) {\n    return h('div', {\n      class: ['j-vxe-table-box', `size--${this.size}`]\n    }, [\n      this.renderSubPopover(h),\n      this.renderDetailsModal(h),\n      this.renderToolbar(h),\n      this.renderToolbarAfterSlot(),\n      this.renderVxeGrid(h),\n      this.renderPagination(h),\n    ])\n  },\n  beforeDestroy() {\n    this.$emit('beforeDestroy')\n  }\n}\n\n// 兼容 online 的规则\nconst fooPatterns = [\n  {title: '非空', value: '*', pattern: /^.+$/},\n  {title: '6到16位数字', value: 'n6-16', pattern: /^\\d{6,16}$/},\n  {title: '6到16位任意字符', value: '*6-16', pattern: /^.{6,16}$/},\n  {title: '6到18位字母', value: 's6-18', pattern: /^[a-z|A-Z]{6,18}$/},\n  {title: '网址', value: 'url', pattern: /^(?:([A-Za-z]+):)?(\\/{0,3})([0-9.\\-A-Za-z]+)(?::(\\d+))?(?:\\/([^?#]*))?(?:\\?([^#]*))?(?:#(.*))?$/},\n  {title: '电子邮件', value: 'e', pattern: /^([\\w]+\\.*)([\\w]+)@[\\w]+\\.\\w{3}(\\.\\w{2}|)$/},\n  {title: '手机号码', value: 'm', pattern: /^1[3456789]\\d{9}$/},\n  {title: '邮政编码', value: 'p', pattern: /^[0-9]{6}$/},\n  {title: '字母', value: 's', pattern: /^[A-Z|a-z]+$/},\n  {title: '数字', value: 'n', pattern: /^-?\\d+(\\.?\\d+|\\d?)$/},\n  {title: '整数', value: 'z', pattern: /^-?\\d+$/},\n  {title: '金额', value: 'money', pattern: /^(([1-9][0-9]*)|([0]\\.\\d{0,2}|[1-9][0-9]*\\.\\d{0,5}))$/},\n]\n\n/** 旧版handler转为新版Validator */\nfunction handlerConvertToValidator(event) {\n  const {column, rule} = event\n  return new Promise((resolve, reject) => {\n    rule.handler(event, (flag, msg) => {\n      let message = rule.message\n      if (typeof msg === 'string') {\n        message = replaceProps(column.own, msg)\n      }\n      if (flag == null) {\n        resolve(message)\n      } else if (!!flag) {\n        resolve(message)\n      } else {\n        reject(new Error(message))\n      }\n    }, this, event)\n  })\n}\n\n/** 唯一校验器 */\nfunction uniqueValidator(event) {\n  const {cellValue, column, rule} = event\n  let tableData = this.getTableData()\n  let findCount = 0\n  for (let rowData of tableData) {\n    if (rowData[column.own.key] === cellValue) {\n      if (++findCount >= 2) {\n        return Promise.reject(new Error(rule.message))\n      }\n    }\n  }\n  return Promise.resolve()\n}\n"]}]}