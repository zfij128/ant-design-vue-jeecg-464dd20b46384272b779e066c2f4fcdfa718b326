{"remainingRequest":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\babel-loader\\lib\\index.js!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\qiankun\\index.js","dependencies":[{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\qiankun\\index.js","mtime":1665386876000},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\babel-loader\\lib\\index.js","mtime":1665642924601},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1665642923347}],"contextDependencies":[],"result":["/**\n * qiankun配置\n */\nimport { registerMicroApps, setDefaultMountApp, start, runAfterFirstMounted, addGlobalUncaughtErrorHandler } from 'qiankun';\nimport { apps } from './apps';\nimport { getProps, initGlState } from './state';\n/**\n * 重构apps\n */\n\nfunction filterApps() {\n  apps.forEach(function (item) {\n    //主应用需要传递给微应用的数据。\n    item.props = getProps(); //微应用触发的路由规则\n\n    item.activeRule = genActiveRule('/' + item.activeRule);\n  });\n  return apps;\n}\n/**\n * 路由监听\n * @param {*} routerPrefix 前缀\n */\n\n\nfunction genActiveRule(routerPrefix) {\n  return function (location) {\n    return location.pathname.startsWith(routerPrefix);\n  };\n}\n/**\n * 微应用注册\n */\n\n\nfunction registerApps() {\n  var _apps = filterApps();\n\n  registerMicroApps(_apps, {\n    beforeLoad: [function (loadApp) {\n      console.log('before load', loadApp);\n    }],\n    beforeMount: [function (mountApp) {\n      console.log('before mount', mountApp);\n    }],\n    afterMount: [function (mountApp) {\n      console.log('before mount', mountApp);\n    }],\n    afterUnmount: [function (unloadApp) {\n      console.log('after unload', unloadApp);\n    }]\n  }); // 设置默认子应用,与 genActiveRule中的参数保持一致\n  // setDefaultMountApp();\n  // 第一个微应用 mount 后需要调用的方法，比如开启一些监控或者埋点脚本。\n\n  runAfterFirstMounted(function () {\n    return console.log('开启监控');\n  }); // 添加全局的未捕获异常处理器。\n\n  addGlobalUncaughtErrorHandler(function (event) {\n    return console.log(event);\n  }); // 定义全局状态\n\n  initGlState(); //启动qiankun\n\n  start({});\n}\n\nexport default registerApps;",{"version":3,"sources":["D:/云晟/前端/ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326/src/qiankun/index.js"],"names":["registerMicroApps","setDefaultMountApp","start","runAfterFirstMounted","addGlobalUncaughtErrorHandler","apps","getProps","initGlState","filterApps","forEach","item","props","activeRule","genActiveRule","routerPrefix","location","pathname","startsWith","registerApps","_apps","beforeLoad","loadApp","console","log","beforeMount","mountApp","afterMount","afterUnmount","unloadApp","event"],"mappings":"AAAA;;;AAGA,SAAQA,iBAAR,EAA2BC,kBAA3B,EAA+CC,KAA/C,EAAsDC,oBAAtD,EAA4EC,6BAA5E,QAAgH,SAAhH;AACA,SAAQC,IAAR,QAAmB,QAAnB;AACA,SAAQC,QAAR,EAAkBC,WAAlB,QAAoC,SAApC;AACA;;;;AAGA,SAASC,UAAT,GAAsB;AAClBH,EAAAA,IAAI,CAACI,OAAL,CAAa,UAACC,IAAD,EAAU;AACnB;AACAA,IAAAA,IAAI,CAACC,KAAL,GAAaL,QAAQ,EAArB,CAFmB,CAGnB;;AACAI,IAAAA,IAAI,CAACE,UAAL,GAAkBC,aAAa,CAAC,MAAMH,IAAI,CAACE,UAAZ,CAA/B;AACH,GALD;AAMA,SAAOP,IAAP;AACH;AAED;;;;;;AAIA,SAASQ,aAAT,CAAuBC,YAAvB,EAAqC;AACjC,SAAO,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,QAAT,CAAkBC,UAAlB,CAA6BH,YAA7B,CAAJ;AAAA,GAAf;AACH;AAED;;;;;AAGA,SAASI,YAAT,GAAwB;AACpB,MAAMC,KAAK,GAAGX,UAAU,EAAxB;;AACAR,EAAAA,iBAAiB,CAACmB,KAAD,EACb;AACIC,IAAAA,UAAU,EAAE,CACR,UAAAC,OAAO,EAAI;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,OAA3B;AACH,KAHO,CADhB;AAMIG,IAAAA,WAAW,EAAE,CACT,UAAAC,QAAQ,EAAI;AACRH,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BE,QAA5B;AACH,KAHQ,CANjB;AAWIC,IAAAA,UAAU,EAAE,CACR,UAAAD,QAAQ,EAAI;AACRH,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BE,QAA5B;AACH,KAHO,CAXhB;AAgBIE,IAAAA,YAAY,EAAE,CACV,UAAAC,SAAS,EAAI;AACTN,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BK,SAA5B;AACH,KAHS;AAhBlB,GADa,CAAjB,CAFoB,CAyBpB;AACA;AACA;;AACAzB,EAAAA,oBAAoB,CAAC;AAAA,WAAMmB,OAAO,CAACC,GAAR,CAAY,MAAZ,CAAN;AAAA,GAAD,CAApB,CA5BoB,CA6BpB;;AACAnB,EAAAA,6BAA6B,CAAC,UAAAyB,KAAK;AAAA,WAAIP,OAAO,CAACC,GAAR,CAAYM,KAAZ,CAAJ;AAAA,GAAN,CAA7B,CA9BoB,CA+BpB;;AACAtB,EAAAA,WAAW,GAhCS,CAiCpB;;AACAL,EAAAA,KAAK,CAAC,EAAD,CAAL;AACH;;AAED,eAAegB,YAAf","sourcesContent":["/**\n * qiankun配置\n */\nimport {registerMicroApps, setDefaultMountApp, start, runAfterFirstMounted, addGlobalUncaughtErrorHandler} from 'qiankun';\nimport {apps} from './apps';\nimport {getProps, initGlState} from './state';\n/**\n * 重构apps\n */\nfunction filterApps() {\n    apps.forEach((item) => {\n        //主应用需要传递给微应用的数据。\n        item.props = getProps();\n        //微应用触发的路由规则\n        item.activeRule = genActiveRule('/' + item.activeRule);\n    });\n    return apps;\n}\n\n/**\n * 路由监听\n * @param {*} routerPrefix 前缀\n */\nfunction genActiveRule(routerPrefix) {\n    return location => location.pathname.startsWith(routerPrefix);\n}\n\n/**\n * 微应用注册\n */\nfunction registerApps() {\n    const _apps = filterApps();\n    registerMicroApps(_apps,\n        {\n            beforeLoad: [\n                loadApp => {\n                    console.log('before load', loadApp);\n                }\n            ],\n            beforeMount: [\n                mountApp => {\n                    console.log('before mount', mountApp);\n                }\n            ],\n            afterMount: [\n                mountApp => {\n                    console.log('before mount', mountApp);\n                }\n            ],\n            afterUnmount: [\n                unloadApp => {\n                    console.log('after unload', unloadApp);\n                }\n            ]\n        });\n    // 设置默认子应用,与 genActiveRule中的参数保持一致\n    // setDefaultMountApp();\n    // 第一个微应用 mount 后需要调用的方法，比如开启一些监控或者埋点脚本。\n    runAfterFirstMounted(() => console.log('开启监控'));\n    // 添加全局的未捕获异常处理器。\n    addGlobalUncaughtErrorHandler(event => console.log(event));\n    // 定义全局状态\n    initGlState();\n    //启动qiankun\n    start({});\n}\n\nexport default registerApps;\n"]}]}