{"remainingRequest":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\babel-loader\\lib\\index.js!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\views\\system\\modules\\GateWayRouteModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\views\\system\\modules\\GateWayRouteModal.vue","mtime":1665386876000},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\babel-loader\\lib\\index.js","mtime":1665642924601},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js","mtime":1665642924058}],"contextDependencies":[],"result":["function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { postAction } from '@/api/manage';\nexport default {\n  name: 'GateWayRouteModal',\n  components: {},\n  data: function data() {\n    return {\n      layout: 'horizontal',\n      labelCol: {\n        span: 3\n      },\n      wrapperCol: {\n        span: 14\n      },\n      currentNameIndex: 0,\n      currentTagIndex: -1,\n      predicates: {},\n      filterArray: [{\n        key: 1,\n        name: '限流过滤器'\n      }],\n      //gateway对应的规则key\n      tagArray: [{\n        name: 'Path',\n        args: []\n      }, {\n        name: 'Header',\n        args: {\n          header: '',\n          regexp: ''\n        }\n      }, {\n        name: 'Query',\n        args: {\n          param: '',\n          regexp: ''\n        }\n      }, {\n        name: 'Method',\n        args: []\n      }, {\n        name: 'Host',\n        args: []\n      }, {\n        name: 'Cookie',\n        args: {\n          name: '',\n          regexp: ''\n        }\n      }, {\n        name: 'After',\n        args: []\n      }, {\n        name: 'Before',\n        args: []\n      }, {\n        name: 'Between',\n        args: []\n      }, {\n        name: 'RemoteAddr',\n        args: []\n      }],\n      inputVisible: false,\n      inputValue: '',\n      url: {\n        update: '/sys/gatewayRoute/updateAll',\n        clear: '/sys/gatewayRoute/clearRedis'\n      },\n      router: this.getRouter(),\n      title: '路由编辑',\n      visible: false,\n      loading: false,\n      genKeyRouter: [\"Path\", \"Host\", \"Method\", \"After\", \"Before\", \"Between\", \"RemoteAddr\"]\n    };\n  },\n  methods: {\n    getRouter: function getRouter() {\n      return {\n        routerId: '',\n        name: '',\n        uri: '',\n        predicates: [],\n        filters: []\n      };\n    },\n    show: function show(router) {\n      if (router) {\n        router.status = Boolean(router.status);\n        this.router = router;\n      } else {\n        this.router = this.getRouter();\n        this.inputValue = '';\n      }\n\n      this.visible = true;\n      this.currentTagIndex = -1;\n      this.currentNameIndex = -1;\n    },\n    close: function close() {\n      this.reset();\n      this.$emit('close');\n      this.$refs['form'].resetFields();\n      this.visible = false;\n    },\n    //删除路由条件配置项\n    removeTag: function removeTag(item, removedTag) {\n      var tags = item.args.filter(function (tag) {\n        return tag !== removedTag;\n      });\n      item.args = tags;\n    },\n    //添加路由选项\n    predicatesHandleMenuClick: function predicatesHandleMenuClick(e) {\n      this.router.predicates.push({\n        args: e.args,\n        name: e.name\n      });\n    },\n    editTag: function editTag(tag, tagIndex, index) {\n      this.currentNameIndex = index;\n      this.currentTagIndex = tagIndex;\n    },\n\n    /**\n     * 值修改事件\n     * @param e\n     * @param item\n     * @param key\n     */\n    valueChange: function valueChange(e, item, key) {\n      item[key] = e.target.value;\n    },\n    //显示输入框\n    showInput: function showInput(item, index) {\n      this.inputVisible = true;\n      this.currentNameIndex = index;\n    },\n    //路由选项输入框失去焦点事件\n    handleInputChange: function handleInputChange(e) {\n      this.inputValue = e.target.value;\n    },\n    //删除路由条件\n    removePredicate: function removePredicate(item, index) {\n      item.predicates.splice(index, 1);\n    },\n    //删除过滤器参数\n    removeFilterParams: function removeFilterParams(item, index) {\n      item.args.splice(index, 1);\n    },\n    //删除过滤器\n    removeFilter: function removeFilter(item, index) {\n      item.filters.splice(index, 1);\n    },\n    //添加过滤器参数\n    addFilterParams: function addFilterParams(item) {\n      item.args.push({\n        key: 'key' + item.args.length + 1,\n        value: ''\n      });\n    },\n    //过滤器添加事件\n    filterHandleMenuClick: function filterHandleMenuClick(e) {\n      if (e.key == 0) {\n        this.router.filters.push({\n          args: [{\n            key: 'name',\n            value: 'default'\n          }, {\n            key: 'fallbackUri',\n            value: 'forward:/fallback'\n          }],\n          name: 'Hystrix',\n          title: this.filterArray[0].name\n        });\n      }\n\n      if (e.key == 1) {\n        this.router.filters.push({\n          args: [{\n            key: 'key-resolver',\n            value: '#{@ipKeyResolver}'\n          }, {\n            key: 'redis-rate-limiter.replenishRate',\n            value: 20\n          }, {\n            key: 'redis-rate-limiter.burstCapacity',\n            value: 20\n          }],\n          name: \"RequestRateLimiter\",\n          title: this.filterArray[0].name\n        });\n      }\n    },\n    //输入框确认\n    handleInputConfirm: function handleInputConfirm(item) {\n      var inputValue = this.inputValue;\n      var tags = item.args;\n\n      if (inputValue && tags.indexOf(inputValue) === -1) {\n        item.args = [].concat(_toConsumableArray(tags), [inputValue]);\n      }\n\n      console.log(tags);\n      Object.assign(this, {\n        tags: tags,\n        inputVisible: false,\n        inputValue: ''\n      });\n      this.currentTagIndex = -1;\n    },\n    //输入框确认\n    handleInputEditConfirm: function handleInputEditConfirm(item, tag, index) {\n      if (this.inputValue) {\n        var inputValue = this.inputValue;\n        item.args[index] = inputValue;\n      }\n\n      this.currentTagIndex = -1;\n    },\n    reset: function reset() {\n      this.expandedKeysss = [];\n      this.checkedKeys = [];\n      this.defaultCheckedKeys = [];\n      this.loading = false;\n    },\n    //关闭弹窗\n    handleCancel: function handleCancel() {\n      this.close();\n    },\n    //提交路由\n    handleSubmit: function handleSubmit() {\n      var _this = this;\n\n      var _this$router = this.router,\n          predicates = _this$router.predicates,\n          filters = _this$router.filters,\n          other = _objectWithoutProperties(_this$router, [\"predicates\", \"filters\"]);\n\n      var router = other;\n      router.predicates = JSON.stringify(this.router.predicates);\n      router.filters = JSON.stringify(this.router.filters);\n      postAction(this.url.update, {\n        router: router\n      }).then(function (res) {\n        if (res.success) {\n          _this.close();\n\n          _this.$emit('ok');\n\n          _this.$message.success(res.message);\n        } else {\n          _this.$message.error(res.message);\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["GateWayRouteModal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <a-drawer\n    :title=\"title\"\n    :maskClosable=\"true\"\n    width=\"45%\"\n    placement=\"right\"\n    v-if=\"visible\"\n    :closable=\"true\"\n    @close=\"handleCancel\"\n    :visible=\"visible\"\n    style=\"overflow: auto;padding-bottom: 53px;\">\n    <a-form-model ref=\"form\" :layout=\"layout\" :label-col=\"labelCol\" :wrapper-col=\"wrapperCol\" :model=\"router\">\n      <a-form-model-item label=\"路由ID\">\n        <a-input v-model=\"router.routerId\" placeholder=\"路由唯一ID\"/>\n      </a-form-model-item>\n      <a-form-model-item label=\"路由名称\">\n        <a-input v-model=\"router.name\" placeholder=\"路由名称\"/>\n      </a-form-model-item>\n      <a-form-model-item label=\"路由URI\">\n        <a-input v-model=\"router.uri\" placeholder=\"路由URL\"/>\n      </a-form-model-item>\n      <a-form-model-item label=\"路由状态\" prop=\"status\">\n        <a-switch default-checked v-model=\"router.status\"/>\n      </a-form-model-item>\n\n      <a-form-model-item prop=\"predicates\" label=\"路由条件\">\n        <div v-for=\"(item,index) in router.predicates\">\n          <a-divider>{{item.name}}\n            <a-icon type=\"delete\" size=\"22\" @click=\"removePredicate(router,index)\"/>\n          </a-divider>\n          <!--当name在 genKeyRouter 时不需要指定key，后台自动拼key -->\n          <div v-if=\"genKeyRouter.includes(item.name)\">\n            <template v-for=\"(tag, tagIndex) in item.args\">\n              <a-input v-if=\"tagIndex==currentTagIndex&&index==currentNameIndex\" ref=\"input\" type=\"text\" size=\"small\"\n                       :style=\"{ width: '190px' }\"\n                       :value=\"tag\"\n                       @change=\"handleInputChange\" @blur=\"handleInputEditConfirm(item,tag,tagIndex)\"\n                       @keyup.enter=\"handleInputEditConfirm(item,tag,tagIndex)\"/>\n              <a-tag v-else :key=\"tag\" :closable=\"true\" @close=\"() => removeTag(item,tag)\" @click=\"editTag(tag,tagIndex,index)\">\n                {{ tag }}\n              </a-tag>\n            </template>\n            <a-input v-if=\"inputVisible&&index==currentNameIndex\" ref=\"input\" type=\"text\" size=\"small\"\n                     :style=\"{ width: '100px' }\"\n                     :value=\"inputValue\"\n                     @change=\"handleInputChange\" @blur=\"handleInputConfirm(item)\"\n                     @keyup.enter=\"handleInputConfirm(item)\"/>\n            <a-tag v-else style=\"background: #fff; borderStyle: dashed;\" @click=\"showInput(item,index)\">\n              <a-icon type=\"plus\"/>\n              新建{{item.name}}\n            </a-tag>\n          </div>\n          <!--当name不在 genKeyRouter 时需要指定key-->\n          <div v-if=\"!genKeyRouter.includes(item.name)\">\n            <template v-for=\"(value, key) in item.args\">\n              <a-row>\n                <a-col :span=\"5\" style=\"margin-top:2px\">\n                  <span v-if=\"key=='header'\" >Header名称</span>\n                  <span v-if=\"key=='regexp'\">参数值</span>\n                  <span v-if=\"key=='param'\">参数名</span>\n                  <span v-if=\"key=='name'\">Cookie名称</span>\n                </a-col>\n                <a-col :span=\"18\">\n                  <a-input :defaultValue=\"value\" placeholder=\"参数值\" style=\"width: 70%; margin-right: 8px;margin-top: 3px\" @change=\"(e)=>valueChange(e,item.args,key)\"/>\n                </a-col>\n              </a-row>\n            </template>\n          </div>\n        </div>\n        <p class=\"btn\" style=\"padding-top: 10px\">\n          <a-dropdown>\n            <a-menu slot=\"overlay\">\n              <a-menu-item :key=\"item.name\" v-for=\"item in tagArray\" @click=\"predicatesHandleMenuClick(item)\">{{item.name}}</a-menu-item>\n            </a-menu>\n            <a-button type=\"dashed\" style=\"margin-left: 8px;width:100%\"> 添加路由条件\n              <a-icon type=\"down\"/>\n            </a-button>\n          </a-dropdown>\n        </p>\n      </a-form-model-item>\n      <a-form-model-item prop=\"predicates\" label=\"过滤器\">\n        <div v-for=\"(item,index) in router.filters\">\n          <a-divider>{{item.name}}\n            <a-icon type=\"delete\" size=\"22\" @click=\"removeFilter(router,index)\"/>\n          </a-divider>\n          <div v-for=\"(tag, index) in item.args\" :key=\"tag.key\">\n            <a-input v-model=\"tag.key\" placeholder=\"参数键\" style=\"width: 45%; margin-right: 8px\"/>\n            <a-input v-model=\"tag.value\" placeholder=\"参数值\" style=\"width: 40%; margin-right: 8px\"/>\n            <a-icon class=\"dynamic-delete-button\" type=\"minus-circle-o\" @click=\"removeFilterParams(item,index)\"/>\n          </div>\n          <a-button type=\"dashed\" style=\"margin-left:28%;width: 30%\" size=\"small\" @click=\"addFilterParams(item)\">\n            <a-icon type=\"plus\"/>\n            添加参数\n          </a-button>\n        </div>\n        <p class=\"btn\" style=\"padding-top: 10px\">\n          <a-dropdown>\n            <a-menu slot=\"overlay\" @click=\"filterHandleMenuClick\">\n              <a-menu-item :key=\"item.key\" :name=\"item.name\" v-for=\"item in filterArray\">{{item.name}}</a-menu-item>\n            </a-menu>\n            <a-button type=\"dashed\" style=\"margin-left: 8px;width:100%\"> 添加过滤器\n              <a-icon type=\"down\"/>\n            </a-button>\n          </a-dropdown>\n        </p>\n      </a-form-model-item>\n      <a-row :style=\"{textAlign:'right'}\" class=\"drawer-bootom-button\">\n        <a-button :style=\"{marginRight: '8px'}\" @click=\"handleCancel\">\n          关闭\n        </a-button>\n        <a-button @click=\"handleSubmit\" type=\"primary\">确定</a-button>\n      </a-row>\n    </a-form-model>\n\n  </a-drawer>\n\n</template>\n<script>\n\n  import { postAction } from '@/api/manage'\n\n  export default {\n    name: 'GateWayRouteModal',\n    components: {},\n    data() {\n      return {\n        layout: 'horizontal',\n        labelCol: { span: 3 },\n        wrapperCol: { span: 14 },\n        currentNameIndex: 0,\n        currentTagIndex:-1,\n        predicates: {},\n        filterArray: [ { key: 1, name: '限流过滤器' }],\n        //gateway对应的规则key\n        tagArray: [\n          {\n            name:'Path',\n            args:[]\n          },\n          {\n            name:'Header',\n            args:{\n              header:'',\n              regexp:''\n            }\n          },\n          {\n            name:'Query',\n            args:{\n              param:'',\n              regexp:''\n            }\n          },\n          {\n            name:'Method',\n            args:[]\n          },\n          {\n            name:'Host',\n            args:[]\n          },\n          {\n            name:'Cookie',\n            args:{\n              name:'',\n              regexp:''\n            }\n          },\n          {\n            name:'After',\n            args:[]\n          },\n          {\n            name:'Before',\n            args:[]\n          },\n          {\n            name:'Between',\n            args:[]\n          },\n          {\n            name:'RemoteAddr',\n            args:[]\n          }\n        ],\n        inputVisible: false,\n        inputValue: '',\n        url: {\n          update: '/sys/gatewayRoute/updateAll',\n          clear: '/sys/gatewayRoute/clearRedis'\n        },\n        router: this.getRouter(),\n        title: '路由编辑',\n        visible: false,\n        loading: false,\n        genKeyRouter:[\"Path\",\"Host\",\"Method\",\"After\",\"Before\",\"Between\",\"RemoteAddr\"]\n      }\n    },\n    methods: {\n      getRouter() {\n        return {\n          routerId: '',\n          name: '',\n          uri: '',\n          predicates: [],\n          filters: []\n        }\n      },\n      show(router) {\n        if (router) {\n          router.status=Boolean(router.status)\n          this.router = router\n        } else {\n          this.router = this.getRouter()\n          this.inputValue=''\n        }\n        this.visible = true\n        this.currentTagIndex=-1\n        this.currentNameIndex=-1\n      },\n      close() {\n        this.reset()\n        this.$emit('close')\n        this.$refs['form'].resetFields()\n        this.visible = false\n      },\n      //删除路由条件配置项\n      removeTag(item, removedTag) {\n        const tags = item.args.filter(tag => tag !== removedTag)\n        item.args = tags\n      },\n      //添加路由选项\n      predicatesHandleMenuClick(e) {\n        this.router.predicates.push({\n          args: e.args,\n          name: e.name,\n        })\n      },\n      editTag(tag, tagIndex,index){\n        this.currentNameIndex = index;\n        this.currentTagIndex=tagIndex\n      },\n      /**\n       * 值修改事件\n       * @param e\n       * @param item\n       * @param key\n       */\n      valueChange(e,item,key){\n         item[key]=e.target.value\n      },\n      //显示输入框\n      showInput(item, index) {\n        this.inputVisible = true\n        this.currentNameIndex = index\n      },\n      //路由选项输入框失去焦点事件\n      handleInputChange(e) {\n        this.inputValue = e.target.value\n      },\n      //删除路由条件\n      removePredicate(item, index) {\n        item.predicates.splice(index, 1)\n      },\n      //删除过滤器参数\n      removeFilterParams(item, index) {\n        item.args.splice(index, 1)\n      },\n      //删除过滤器\n      removeFilter(item, index) {\n        item.filters.splice(index, 1)\n      },\n      //添加过滤器参数\n      addFilterParams(item) {\n        item.args.push({\n          key: 'key' + item.args.length + 1,\n          value: ''\n        })\n      },\n      //过滤器添加事件\n      filterHandleMenuClick(e) {\n        if (e.key == 0) {\n          this.router.filters.push({\n            args: [  {\n              key: 'name',\n              value: 'default'\n            },{\n              key: 'fallbackUri',\n              value: 'forward:/fallback'\n            }],\n            name:'Hystrix',\n            title: this.filterArray[0].name\n          })\n        }\n        if (e.key == 1) {\n          this.router.filters.push({\n            args: [ {\n              key: 'key-resolver',\n              value: '#{@ipKeyResolver}'\n            }, {\n              key: 'redis-rate-limiter.replenishRate',\n              value: 20\n            }, {\n              key: 'redis-rate-limiter.burstCapacity',\n              value: 20\n            }],\n            name:\"RequestRateLimiter\",\n            title: this.filterArray[0].name\n          })\n        }\n      },\n      //输入框确认\n      handleInputConfirm(item) {\n        const inputValue = this.inputValue\n        let tags = item.args\n        if (inputValue && tags.indexOf(inputValue) === -1) {\n          item.args = [...tags, inputValue]\n        }\n        console.log(tags)\n        Object.assign(this, {\n          tags,\n          inputVisible: false,\n          inputValue: ''\n        })\n        this.currentTagIndex=-1\n      },\n      //输入框确认\n      handleInputEditConfirm(item,tag,index) {\n        if(this.inputValue)\n        {\n          const inputValue = this.inputValue\n          item.args[index]=inputValue\n        }\n        this.currentTagIndex=-1\n\n      },\n      reset() {\n        this.expandedKeysss = []\n        this.checkedKeys = []\n        this.defaultCheckedKeys = []\n        this.loading = false\n      },\n      //关闭弹窗\n      handleCancel() {\n        this.close()\n      },\n      //提交路由\n      handleSubmit() {\n        let { predicates, filters, ...other } = this.router\n        let router = other\n        router.predicates = JSON.stringify(this.router.predicates)\n        router.filters = JSON.stringify(this.router.filters)\n        postAction(this.url.update, {\n          router\n        }).then(res => {\n          if (res.success) {\n            this.close()\n            this.$emit('ok')\n            this.$message.success(res.message)\n          } else {\n            this.$message.error(res.message)\n          }\n        })\n\n      }\n    }\n  }\n\n</script>\n<style lang=\"less\" scoped>\n  .drawer-bootom-button {\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n    border-top: 1px solid #e8e8e8;\n    padding: 10px 16px;\n    text-align: right;\n    left: 0;\n    background: #fff;\n    border-radius: 0 0 2px 2px;\n  }\n</style>"],"sourceRoot":"src/views/system/modules"}]}