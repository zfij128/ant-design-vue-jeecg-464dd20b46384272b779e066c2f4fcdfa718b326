{"remainingRequest":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\babel-loader\\lib\\index.js!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\components\\jeecg\\JVxeTable\\components\\cells\\JVxeSelectCell.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\components\\jeecg\\JVxeTable\\components\\cells\\JVxeSelectCell.vue","mtime":1665386876000},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\babel-loader\\lib\\index.js","mtime":1665642924601},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js","mtime":1665642924058}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"D:/\\u4E91\\u665F/\\u524D\\u7AEF/ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport JVxeCellMixins, { dispatchEvent } from '@/components/jeecg/JVxeTable/mixins/JVxeCellMixins';\nimport { JVXETypes } from '@comp/jeecg/JVxeTable/index';\nimport { filterDictText } from '@comp/dict/JDictSelectUtil';\nexport default {\n  name: 'JVxeSelectCell',\n  mixins: [JVxeCellMixins],\n  data: function data() {\n    return {\n      loading: false,\n      // 异步加载的options（用于多级联动）\n      asyncOptions: null\n    };\n  },\n  computed: {\n    selectProps: function selectProps() {\n      var props = _objectSpread({}, this.cellProps); // 判断select是否允许输入\n\n\n      var _this$originColumn = this.originColumn,\n          allowSearch = _this$originColumn.allowSearch,\n          allowInput = _this$originColumn.allowInput;\n\n      if (allowInput === true || allowSearch === true) {\n        props['showSearch'] = true;\n      }\n\n      return props;\n    },\n    // 下拉选项\n    selectOptions: function selectOptions() {\n      var _this = this;\n\n      if (this.asyncOptions) {\n        return this.asyncOptions;\n      }\n\n      var linkage = this.renderOptions.linkage;\n\n      if (linkage) {\n        var getLinkageOptionsSibling = linkage.getLinkageOptionsSibling,\n            config = linkage.config;\n        var res = getLinkageOptionsSibling(this.row, this.originColumn, config, true); // 当返回Promise时，说明是多级联动\n\n        if (res instanceof Promise) {\n          this.loading = true;\n          res.then(function (opt) {\n            _this.asyncOptions = opt;\n            _this.loading = false;\n          }).catch(function (e) {\n            console.error(e);\n            _this.loading = false;\n          });\n        } else {\n          this.asyncOptions = null;\n          return res;\n        }\n      }\n\n      return this.originColumn.options;\n    }\n  },\n  created: function created() {\n    var multiple = [JVXETypes.selectMultiple, JVXETypes.list_multi];\n    var search = [JVXETypes.selectSearch, JVXETypes.sel_search];\n\n    if (multiple.includes(this.$type)) {\n      // 处理多选\n      var props = this.originColumn.props || {};\n      props['mode'] = 'multiple';\n      props['maxTagCount'] = 1;\n      this.$set(this.originColumn, 'props', props);\n    } else if (search.includes(this.$type)) {\n      // 处理搜索\n      this.$set(this.originColumn, 'allowSearch', true);\n    }\n  },\n  methods: {\n    handleChange: function handleChange(value) {\n      // 处理下级联动\n      var linkage = this.renderOptions.linkage;\n\n      if (linkage) {\n        linkage.linkageSelectChange(this.row, this.originColumn, linkage.config, value);\n      }\n\n      this.handleChangeCommon(value);\n    },\n\n    /** 处理blur失去焦点事件 */\n    handleBlur: function handleBlur(value) {\n      var _this$originColumn2 = this.originColumn,\n          allowInput = _this$originColumn2.allowInput,\n          options = _this$originColumn2.options;\n\n      if (allowInput === true) {\n        // 删除无用的因搜索（用户输入）而创建的项\n        if (typeof value === 'string') {\n          var indexes = [];\n          options.forEach(function (option, index) {\n            if (option.value.toLocaleString() === value.toLocaleString()) {\n              delete option.searchAdd;\n            } else if (option.searchAdd === true) {\n              indexes.push(index);\n            }\n          }); // 翻转删除数组中的项\n\n          var _iterator = _createForOfIteratorHelper(indexes.reverse()),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var index = _step.value;\n              options.splice(index, 1);\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        }\n      }\n\n      this.handleBlurCommon(value);\n    },\n\n    /** 用于搜索下拉框中的内容 */\n    handleSelectFilterOption: function handleSelectFilterOption(input, option) {\n      var _this$originColumn3 = this.originColumn,\n          allowSearch = _this$originColumn3.allowSearch,\n          allowInput = _this$originColumn3.allowInput;\n\n      if (allowSearch === true || allowInput === true) {\n        //update-begin-author:taoyan date:20200820 for:【专项任务】大连项目反馈行编辑问题处理 下拉框搜索\n        return option.componentOptions.children[0].children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0; //update-end-author:taoyan date:20200820 for:【专项任务】大连项目反馈行编辑问题处理 下拉框搜索\n      }\n\n      return true;\n    },\n\n    /** select 搜索时的事件，用于动态添加options */\n    handleSearchSelect: function handleSearchSelect(value) {\n      var _this$originColumn4 = this.originColumn,\n          allowSearch = _this$originColumn4.allowSearch,\n          allowInput = _this$originColumn4.allowInput,\n          options = _this$originColumn4.options;\n\n      if (allowSearch !== true && allowInput === true) {\n        // 是否找到了对应的项，找不到则添加这一项\n        var flag = false;\n\n        var _iterator2 = _createForOfIteratorHelper(options),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var option = _step2.value;\n\n            if (option.value.toLocaleString() === value.toLocaleString()) {\n              flag = true;\n              break;\n            }\n          } // !!value ：不添加空值\n\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n\n        if (!flag && !!value) {\n          // searchAdd 是否是通过搜索添加的\n          options.push({\n            title: value,\n            value: value,\n            searchAdd: true\n          });\n        }\n      }\n    }\n  },\n  // 【组件增强】注释详见：JVxeCellMixins.js\n  enhanced: {\n    aopEvents: {\n      editActived: function editActived(event) {\n        dispatchEvent.call(this, event, 'ant-select');\n      }\n    },\n    translate: {\n      enabled: true,\n      handler: function () {\n        var _handler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(value) {\n          var options, linkage, getLinkageOptionsSibling, config;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  linkage = this.renderOptions.linkage; // 判断是否是多级联动，如果是就通过接口异步翻译\n\n                  if (!linkage) {\n                    _context.next = 8;\n                    break;\n                  }\n\n                  getLinkageOptionsSibling = linkage.getLinkageOptionsSibling, config = linkage.config;\n                  options = getLinkageOptionsSibling(this.row, this.originColumn, config, true);\n\n                  if (!(options instanceof Promise)) {\n                    _context.next = 6;\n                    break;\n                  }\n\n                  return _context.abrupt(\"return\", new Promise(function (resolve) {\n                    options.then(function (opt) {\n                      resolve(filterDictText(opt, value));\n                    });\n                  }));\n\n                case 6:\n                  _context.next = 9;\n                  break;\n\n                case 8:\n                  options = this.column.own.options;\n\n                case 9:\n                  return _context.abrupt(\"return\", filterDictText(options, value));\n\n                case 10:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n\n        function handler(_x) {\n          return _handler.apply(this, arguments);\n        }\n\n        return handler;\n      }()\n    },\n    getValue: function getValue(value) {\n      if (Array.isArray(value)) {\n        return value.join(',');\n      } else {\n        return value;\n      }\n    },\n    setValue: function setValue(value) {\n      var col = this.column.own,\n          $table = this.params.$table; // 判断是否是多选\n\n      if ((col.props || {})['mode'] === 'multiple') {\n        $table.$set(col.props, 'maxTagCount', 1);\n      }\n\n      if (value != null && value !== '') {\n        if (typeof value === 'string') {\n          return value === '' ? [] : value.split(',');\n        }\n\n        return value;\n      } else {\n        return undefined;\n      }\n    }\n  }\n};",{"version":3,"sources":["JVxeSelectCell.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <a-select\n    ref=\"select\"\n    :value=\"innerValue\"\n    allowClear\n    :filterOption=\"handleSelectFilterOption\"\n    v-bind=\"selectProps\"\n    style=\"width: 100%;\"\n    @blur=\"handleBlur\"\n    @change=\"handleChange\"\n    @search=\"handleSearchSelect\"\n  >\n\n    <div v-if=\"loading\" slot=\"notFoundContent\">\n      <a-icon type=\"loading\"  />\n      <span>&nbsp;加载中…</span>\n    </div>\n\n    <template v-for=\"option of selectOptions\">\n      <a-select-option :key=\"option.value\" :value=\"option.value\" :disabled=\"option.disabled\">\n        <span>{{option.text || option.label || option.title|| option.value}}</span>\n      </a-select-option>\n    </template>\n\n  </a-select>\n</template>\n\n<script>\n  import JVxeCellMixins, { dispatchEvent } from '@/components/jeecg/JVxeTable/mixins/JVxeCellMixins'\n  import { JVXETypes } from '@comp/jeecg/JVxeTable/index'\n  import { filterDictText } from '@comp/dict/JDictSelectUtil'\n\n  export default {\n    name: 'JVxeSelectCell',\n    mixins: [JVxeCellMixins],\n    data(){\n      return {\n        loading: false,\n        // 异步加载的options（用于多级联动）\n        asyncOptions: null,\n      }\n    },\n    computed: {\n      selectProps() {\n        let props = {...this.cellProps}\n        // 判断select是否允许输入\n        let {allowSearch, allowInput} = this.originColumn\n        if (allowInput === true || allowSearch === true) {\n          props['showSearch'] = true\n        }\n        return props\n      },\n      // 下拉选项\n      selectOptions() {\n        if (this.asyncOptions) {\n          return this.asyncOptions\n        }\n        let {linkage} = this.renderOptions\n        if (linkage) {\n          let {getLinkageOptionsSibling, config} = linkage\n          let res = getLinkageOptionsSibling(this.row, this.originColumn, config, true)\n          // 当返回Promise时，说明是多级联动\n          if (res instanceof Promise) {\n            this.loading = true\n            res.then(opt => {\n              this.asyncOptions = opt\n              this.loading = false\n            }).catch(e => {\n              console.error(e)\n              this.loading = false\n            })\n          } else {\n            this.asyncOptions = null\n            return res\n          }\n        }\n        return this.originColumn.options\n      },\n    },\n    created() {\n      let multiple = [JVXETypes.selectMultiple, JVXETypes.list_multi]\n      let search = [JVXETypes.selectSearch, JVXETypes.sel_search]\n      if (multiple.includes(this.$type)) {\n        // 处理多选\n        let props = this.originColumn.props || {}\n        props['mode'] = 'multiple'\n        props['maxTagCount'] = 1\n        this.$set(this.originColumn, 'props', props)\n      } else if (search.includes(this.$type)) {\n        // 处理搜索\n        this.$set(this.originColumn, 'allowSearch', true)\n      }\n    },\n    methods: {\n\n      handleChange(value) {\n        // 处理下级联动\n        let linkage = this.renderOptions.linkage\n        if (linkage) {\n          linkage.linkageSelectChange(this.row, this.originColumn, linkage.config, value)\n        }\n        this.handleChangeCommon(value)\n      },\n\n      /** 处理blur失去焦点事件 */\n      handleBlur(value) {\n        let {allowInput, options} = this.originColumn\n\n        if (allowInput === true) {\n          // 删除无用的因搜索（用户输入）而创建的项\n          if (typeof value === 'string') {\n            let indexes = []\n            options.forEach((option, index) => {\n              if (option.value.toLocaleString() === value.toLocaleString()) {\n                delete option.searchAdd\n              } else if (option.searchAdd === true) {\n                indexes.push(index)\n              }\n            })\n            // 翻转删除数组中的项\n            for (let index of indexes.reverse()) {\n              options.splice(index, 1)\n            }\n          }\n        }\n\n        this.handleBlurCommon(value)\n      },\n\n      /** 用于搜索下拉框中的内容 */\n      handleSelectFilterOption(input, option) {\n        let {allowSearch, allowInput} = this.originColumn\n        if (allowSearch === true || allowInput === true) {\n          //update-begin-author:taoyan date:20200820 for:【专项任务】大连项目反馈行编辑问题处理 下拉框搜索\n          return option.componentOptions.children[0].children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\n          //update-end-author:taoyan date:20200820 for:【专项任务】大连项目反馈行编辑问题处理 下拉框搜索\n        }\n        return true\n      },\n\n      /** select 搜索时的事件，用于动态添加options */\n      handleSearchSelect(value) {\n        let {allowSearch, allowInput, options} = this.originColumn\n\n        if (allowSearch !== true && allowInput === true) {\n          // 是否找到了对应的项，找不到则添加这一项\n          let flag = false\n          for (let option of options) {\n            if (option.value.toLocaleString() === value.toLocaleString()) {\n              flag = true\n              break\n            }\n          }\n          // !!value ：不添加空值\n          if (!flag && !!value) {\n            // searchAdd 是否是通过搜索添加的\n            options.push({title: value, value: value, searchAdd: true})\n          }\n\n        }\n      },\n\n    },\n    // 【组件增强】注释详见：JVxeCellMixins.js\n    enhanced: {\n      aopEvents: {\n        editActived(event) {\n          dispatchEvent.call(this, event, 'ant-select')\n        },\n      },\n      translate: {\n        enabled: true,\n        async handler(value,) {\n          let options\n          let {linkage} = this.renderOptions\n          // 判断是否是多级联动，如果是就通过接口异步翻译\n          if (linkage) {\n            let {getLinkageOptionsSibling, config} = linkage\n            options = getLinkageOptionsSibling(this.row, this.originColumn, config, true)\n            if (options instanceof Promise) {\n              return new Promise(resolve => {\n                options.then(opt => {\n                  resolve(filterDictText(opt, value))\n                })\n              })\n            }\n          } else {\n            options = this.column.own.options\n          }\n          return filterDictText(options, value)\n        },\n      },\n      getValue(value) {\n        if (Array.isArray(value)) {\n          return value.join(',')\n        } else {\n          return value\n        }\n      },\n      setValue(value) {\n        let {column: {own: col}, params: {$table}} = this\n        // 判断是否是多选\n        if ((col.props || {})['mode'] === 'multiple') {\n          $table.$set(col.props, 'maxTagCount', 1)\n        }\n        if (value != null && value !== '') {\n          if (typeof value === 'string') {\n            return value === '' ? [] : value.split(',')\n          }\n          return value\n        } else {\n          return undefined\n        }\n      }\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>"],"sourceRoot":"src/components/jeecg/JVxeTable/components/cells"}]}