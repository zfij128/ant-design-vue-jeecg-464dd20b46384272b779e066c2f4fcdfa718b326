{"remainingRequest":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\babel-loader\\lib\\index.js!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\views\\jeecg\\TableOrderTotal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\views\\jeecg\\TableOrderTotal.vue","mtime":1665386876000},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\babel-loader\\lib\\index.js","mtime":1665642924601},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js","mtime":1665642924058}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"D:/\\u4E91\\u665F/\\u524D\\u7AEF/ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'TableTotal',\n  data: function data() {\n    return {\n      columns: [{\n        title: '#',\n        width: '180px',\n        align: 'center',\n        dataIndex: 'rowIndex',\n        customRender: function customRender(text, r, index) {\n          return text !== '总计' ? parseInt(index) + 1 : text;\n        }\n      }, {\n        title: '姓名',\n        dataIndex: 'name',\n        width: 180\n      }, {\n        title: '贡献点',\n        dataIndex: 'point',\n        width: 180\n      }, {\n        title: '等级',\n        dataIndex: 'level',\n        width: 180\n      }, {\n        title: '更新时间',\n        dataIndex: 'updateTime',\n        width: 180\n      }],\n\n      /* 分页参数 */\n      ipagination: {\n        current: 1,\n        pageSize: 10\n      },\n      dataSource: [{\n        id: \"1\",\n        name: '张三',\n        point: 23,\n        level: 3,\n        updateTime: '2019-8-14'\n      }, {\n        name: '小王',\n        point: 6,\n        level: 1,\n        updateTime: '2019-8-13'\n      }, {\n        name: '李四',\n        point: 53,\n        level: 8,\n        updateTime: '2019-8-12'\n      }, {\n        name: '小红',\n        point: 44,\n        level: 5,\n        updateTime: '2019-8-11'\n      }, {\n        name: '王五',\n        point: 97,\n        level: 10,\n        updateTime: '2019-8-10'\n      }, {\n        name: '小明',\n        point: 33,\n        level: 2,\n        updateTime: '2019-8-10'\n      }, {\n        name: '小张',\n        point: 33,\n        level: 2,\n        updateTime: '2019-8-10'\n      }, {\n        name: '小六',\n        point: 33,\n        level: 2,\n        updateTime: '2019-8-10'\n      }, {\n        name: '小五',\n        point: 33,\n        level: 2,\n        updateTime: '2019-8-10'\n      }, {\n        name: '小赵',\n        point: 33,\n        level: 2,\n        updateTime: '2019-8-10'\n      }, {\n        name: '李华',\n        point: 33,\n        level: 2,\n        updateTime: '2019-8-10'\n      }, {\n        name: '小康',\n        point: 33,\n        level: 2,\n        updateTime: '2019-8-10'\n      }, {\n        name: '小鹿',\n        point: 33,\n        level: 2,\n        updateTime: '2019-8-10'\n      }],\n      newArr: [],\n      newDataSource: [],\n      footerDataSource: [],\n      pageSwitch: true\n    };\n  },\n  computed: {\n    // 数据表格的固定属性\n    tableProps: function tableProps() {\n      var _this = this;\n\n      var tableProps = {\n        size: 'middle',\n        rowKey: 'rowIndex',\n        columns: this.columns,\n        scroll: {\n          x: true\n        }\n      };\n      var renderFooter = this.footerDataSource.length === 0 ? null : function () {\n        return _this.renderTableFooter(tableProps);\n      };\n      return _objectSpread(_objectSpread({}, tableProps), {}, {\n        ref: 'table',\n        class: 'chart-data-list',\n        pagination: this.pageSwitch ? this.ipagination : false,\n        columns: this.columns,\n        dataSource: this.dataSource,\n        footer: renderFooter\n      });\n    },\n    pageSwitchProps: function pageSwitchProps() {\n      return {\n        checkedChildren: '分页',\n        unCheckedChildren: '分页',\n        style: {\n          position: 'absolute',\n          right: '0px',\n          top: '-10px'\n        }\n      };\n    }\n  },\n  mounted: function mounted() {\n    // this.tableAddTotalRow(this.columns, this.dataSource)\n\n    /*新增分页合计方法*/\n    this.newDataSource = this.dataSource;\n    this.dataHandling(1, this.ipagination.pageSize);\n  },\n  watch: {\n    //update-begin---author:wangshuai ---date:20220209  for：[JTC-494]常用示例->表格合计写法改成新的写法------------\n    'pageSwitch': function pageSwitch(val) {\n      if (!val) {\n        this.dataHandling('-1', 0);\n      } else {\n        this.dataHandling(1, this.ipagination.pageSize);\n      }\n    },\n    'ipagination.current': function ipaginationCurrent(val) {\n      this.dataHandling(val, this.ipagination.pageSize);\n    },\n    //当合计行变化时，绑定滚动条\n    'footerDataSource': {\n      handler: function () {\n        var _handler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dataSource) {\n          var dom, footerDom;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (!(dataSource && dataSource.length > 0)) {\n                    _context.next = 6;\n                    break;\n                  }\n\n                  _context.next = 3;\n                  return this.$nextTick();\n\n                case 3:\n                  // 同步表与footer滚动\n                  dom = this.$refs.table.$el.querySelectorAll('.ant-table-body')[0];\n                  footerDom = this.$refs.footerTable.$el.querySelectorAll('.ant-table-body')[0];\n                  dom.addEventListener('scroll', function () {\n                    footerDom.scrollLeft = dom.scrollLeft;\n                  }, true);\n\n                case 6:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n\n        function handler(_x) {\n          return _handler.apply(this, arguments);\n        }\n\n        return handler;\n      }() //update-end---author:wangshuai ---date:20220209  for：[JTC-494]常用示例->表格合计写法改成新的写法------------\n\n    }\n  },\n  methods: {\n    /** 表格增加合计行 */\n    tableAddTotalRow: function tableAddTotalRow(columns, dataSource) {\n      var numKey = 'rowIndex';\n\n      var totalRow = _defineProperty({}, numKey, '合计');\n\n      columns.forEach(function (column) {\n        var key = column.key,\n            dataIndex = column.dataIndex;\n\n        if (![key, dataIndex].includes(numKey)) {\n          var total = 0;\n          dataSource.forEach(function (data) {\n            total += /^\\d+\\.?\\d?$/.test(data[dataIndex]) ? Number.parseInt(data[dataIndex]) : Number.NaN;\n            console.log(data[dataIndex], ':', /^\\d+\\.?\\d?$/.test(data[dataIndex]) ? Number.parseInt(data[dataIndex]) : Number.NaN);\n          });\n\n          if (Number.isNaN(total)) {\n            total = '-';\n          }\n\n          totalRow[dataIndex] = total;\n        }\n      });\n      dataSource.push(totalRow);\n    },\n    handleTableChange: function handleTableChange(pagination, filters, sorter) {\n      this.ipagination = pagination;\n    },\n    //update-begin---author:wangshuai ---date:20220209  for：[JTC-494]常用示例->表格合计写法改成新的写法------------\n\n    /*如果分页走这个方法*/\n    dataHandling: function dataHandling(pageNo, pageSize) {\n      //根据当前页数和每页显示条数分割数组\n      var arrs = []; //如果pageNo不是-1（不分页）,那么需要对数据进行分页计算\n\n      if (pageNo != -1) {\n        arrs = this.newDataSource.slice((pageNo - 1) * pageSize, pageNo * pageSize);\n      } else {\n        arrs = this.newDataSource;\n      }\n\n      var newDataSource = [];\n      var newArr = {};\n      newArr.rowIndex = \"总计\";\n      var level = 0;\n      var point = 0; //每一项的数值相加\n\n      for (var j = 0; j < arrs.length; j++) {\n        level += arrs[j].level;\n        point += arrs[j].point;\n      }\n\n      newArr.level = level;\n      newArr.point = point;\n      newDataSource.push(newArr); //给foot底部数组赋值\n\n      this.footerDataSource = newDataSource;\n    },\n    // 渲染表格底部合计行\n    renderTableFooter: function renderTableFooter(tableProps) {\n      var h = this.$createElement;\n      return h('a-table', {\n        ref: 'footerTable',\n        props: _objectSpread(_objectSpread({}, tableProps), {}, {\n          pagination: false,\n          dataSource: this.footerDataSource,\n          showHeader: false\n        })\n      }); //update-end---author:wangshuai ---date:20220209  for：[JTC-494]常用示例->表格合计写法改成新的写法------------\n    }\n  }\n};",{"version":3,"sources":["TableOrderTotal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <a-card :bordered=\"false\">\n    <a-row>\n      <a-col>\n        <a-switch v-bind=\"pageSwitchProps\" v-model=\"pageSwitch\"/>\n      </a-col>\n      <a-col>\n        <a-table\n            v-bind=\"tableProps\"\n            @change=\"handleTableChange\"\n            style=\"margin-top: 20px\"\n        >\n        </a-table>\n      </a-col>\n    </a-row>\n  </a-card>\n</template>\n\n<script>\n  export default {\n    name: 'TableTotal',\n    data() {\n      return {\n        columns: [\n          {\n            title: '#',\n            width: '180px',\n            align: 'center',\n            dataIndex: 'rowIndex',\n            customRender: function (text, r, index) {\n              return (text !== '总计') ? (parseInt(index) + 1) : text\n            }\n          },\n          {\n            title: '姓名',\n            dataIndex: 'name',\n            width: 180,\n          },\n          {\n            title: '贡献点',\n            dataIndex: 'point',\n            width: 180,\n          },\n          {\n            title: '等级',\n            dataIndex: 'level',\n            width: 180,\n          },\n          {\n            title: '更新时间',\n            dataIndex: 'updateTime',\n            width: 180,\n          },\n        ],\n        /* 分页参数 */\n        ipagination:{\n          current: 1,\n          pageSize: 10,\n        },\n        dataSource: [\n          { id:\"1\",name: '张三', point: 23, level: 3, updateTime: '2019-8-14' },\n          { name: '小王', point: 6, level: 1, updateTime: '2019-8-13' },\n          { name: '李四', point: 53, level: 8, updateTime: '2019-8-12' },\n          { name: '小红', point: 44, level: 5, updateTime: '2019-8-11' },\n          { name: '王五', point: 97, level: 10, updateTime: '2019-8-10' },\n          { name: '小明', point: 33, level: 2, updateTime: '2019-8-10' },\n          { name: '小张', point: 33, level: 2, updateTime: '2019-8-10' },\n          { name: '小六', point: 33, level: 2, updateTime: '2019-8-10' },\n          { name: '小五', point: 33, level: 2, updateTime: '2019-8-10' },\n          { name: '小赵', point: 33, level: 2, updateTime: '2019-8-10' },\n          { name: '李华', point: 33, level: 2, updateTime: '2019-8-10' },\n          { name: '小康', point: 33, level: 2, updateTime: '2019-8-10' },\n          { name: '小鹿', point: 33, level: 2, updateTime: '2019-8-10' },\n        ],\n        newArr:[],\n        newDataSource:[],\n        footerDataSource: [],\n        pageSwitch:true\n      }\n    },\n    computed:{\n      // 数据表格的固定属性\n      tableProps(){\n        let tableProps = {\n          size: 'middle',\n          rowKey:'rowIndex',\n          columns: this.columns,\n          scroll: {x: true},\n        }\n        let renderFooter = this.footerDataSource.length === 0 ? null : () => this.renderTableFooter(tableProps)\n        return {\n          ...tableProps,\n          ref: 'table',\n          class: 'chart-data-list',\n          pagination:this.pageSwitch?this.ipagination:false,\n          columns: this.columns,\n          dataSource: this.dataSource,\n          footer: renderFooter,\n        }\n      },\n      pageSwitchProps() {\n        return {\n          checkedChildren: '分页',\n          unCheckedChildren: '分页',\n          style: {\n            position: 'absolute',\n            right: '0px',\n            top: '-10px'\n          }\n        }\n      },\n    },\n    mounted() {\n      // this.tableAddTotalRow(this.columns, this.dataSource)\n      /*新增分页合计方法*/\n      this.newDataSource=this.dataSource\n      this.dataHandling(1,this.ipagination.pageSize)\n    },\n    watch:{\n      //update-begin---author:wangshuai ---date:20220209  for：[JTC-494]常用示例->表格合计写法改成新的写法------------\n      'pageSwitch':function(val){\n         if(!val){\n           this.dataHandling('-1',0)\n         }else{\n           this.dataHandling(1,this.ipagination.pageSize)\n         }\n      },\n      'ipagination.current':function(val) {\n        this.dataHandling(val,this.ipagination.pageSize)\n      },\n      //当合计行变化时，绑定滚动条\n      'footerDataSource': {\n        async handler(dataSource) {\n          // 当底部合计行有值，并且显示出来时，再同步滚动条\n          if (dataSource && dataSource.length > 0) {\n            await this.$nextTick()\n            // 同步表与footer滚动\n            let dom = this.$refs.table.$el.querySelectorAll('.ant-table-body')[0]\n            let footerDom = this.$refs.footerTable.$el.querySelectorAll('.ant-table-body')[0]\n            dom.addEventListener(\n                'scroll',\n                () => {\n                  footerDom.scrollLeft = dom.scrollLeft\n                },\n                true,\n            )\n          }\n        },\n        //update-end---author:wangshuai ---date:20220209  for：[JTC-494]常用示例->表格合计写法改成新的写法------------\n      }\n    },\n    methods: {\n      /** 表格增加合计行 */\n      tableAddTotalRow(columns, dataSource) {\n        let numKey = 'rowIndex'\n        let totalRow = { [numKey]: '合计' }\n        columns.forEach(column => {\n          let { key, dataIndex } = column\n          if (![key, dataIndex].includes(numKey)) {\n\n            let total = 0\n            dataSource.forEach(data => {\n              total += /^\\d+\\.?\\d?$/.test(data[dataIndex]) ? Number.parseInt(data[dataIndex]) : Number.NaN\n              console.log(data[dataIndex], ':', (/^\\d+\\.?\\d?$/.test(data[dataIndex]) ? Number.parseInt(data[dataIndex]) : Number.NaN))\n            })\n\n            if (Number.isNaN(total)) {\n              total = '-'\n            }\n            totalRow[dataIndex] = total\n          }\n        })\n\n        dataSource.push(totalRow)\n      },\n      handleTableChange(pagination, filters, sorter) {\n        this.ipagination = pagination;\n      },\n      //update-begin---author:wangshuai ---date:20220209  for：[JTC-494]常用示例->表格合计写法改成新的写法------------\n      /*如果分页走这个方法*/\n      dataHandling(pageNo,pageSize) {\n        //根据当前页数和每页显示条数分割数组\n        let arrs = [];\n        //如果pageNo不是-1（不分页）,那么需要对数据进行分页计算\n        if(pageNo!=-1){\n          arrs = this.newDataSource.slice((pageNo-1)*pageSize,pageNo*pageSize)\n        }else{\n          arrs = this.newDataSource\n        }\n        let newDataSource=[];\n        let newArr= { };\n        newArr.rowIndex=\"总计\"\n        let level=0;\n        let point=0;\n        //每一项的数值相加\n        for (let j=0;j<arrs.length;j++){\n          level+=arrs[j].level;\n          point+=arrs[j].point;\n        }\n        newArr.level=level;\n        newArr.point=point;\n        newDataSource.push(newArr);\n        //给foot底部数组赋值\n        this.footerDataSource = newDataSource;\n      },\n      // 渲染表格底部合计行\n      renderTableFooter(tableProps) {\n        let h = this.$createElement\n        return h('a-table', {\n          ref: 'footerTable',\n          props: {\n            ...tableProps,\n            pagination: false,\n            dataSource: this.footerDataSource,\n            showHeader: false,\n          },\n        })\n        //update-end---author:wangshuai ---date:20220209  for：[JTC-494]常用示例->表格合计写法改成新的写法------------\n      }\n    }\n  }\n</script>\n\n<style scoped lang=\"less\">\n/deep/ .chart-data-list .ant-table-footer .ant-table-body{\n  overflow: hidden !important;\n}\n/deep/ .ant-table-footer{\n  padding:0;\n}\n</style>"],"sourceRoot":"src/views/jeecg"}]}