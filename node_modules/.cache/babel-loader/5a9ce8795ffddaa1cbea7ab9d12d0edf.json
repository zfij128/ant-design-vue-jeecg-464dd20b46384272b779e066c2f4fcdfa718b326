{"remainingRequest":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\babel-loader\\lib\\index.js!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\components\\dict\\JSearchSelectTag.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\components\\dict\\JSearchSelectTag.vue","mtime":1665386876000},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\babel-loader\\lib\\index.js","mtime":1665642924601},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js","mtime":1665642924058}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { ajaxGetDictItems, getDictItemsFromCache } from '@/api/api';\nimport debounce from 'lodash/debounce';\nimport { getAction } from '../../api/manage';\nexport default {\n  name: 'JSearchSelectTag',\n  props: {\n    disabled: Boolean,\n    value: [String, Number],\n    dictOptions: Array,\n    async: Boolean,\n    placeholder: {\n      type: String,\n      default: \"请选择\",\n      required: false\n    },\n    dict: {\n      type: String,\n      default: '',\n      required: false\n    },\n    popContainer: {\n      type: String,\n      default: '',\n      required: false\n    },\n    pageSize: {\n      type: Number,\n      default: 10,\n      required: false\n    },\n    getPopupContainer: {\n      type: Function,\n      default: null\n    }\n  },\n  data: function data() {\n    this.loadData = debounce(this.loadData, 800); //消抖\n\n    this.lastLoad = 0;\n    return {\n      loading: false,\n      selectedValue: [],\n      selectedAsyncValue: [],\n      options: []\n    };\n  },\n  created: function created() {\n    this.initDictData();\n  },\n  watch: {\n    \"value\": {\n      immediate: true,\n      handler: function handler(val) {\n        if (!val) {\n          if (val == 0) {\n            this.initSelectValue();\n          } else {\n            this.selectedValue = [];\n            this.selectedAsyncValue = [];\n          }\n        } else {\n          this.initSelectValue();\n        }\n      }\n    },\n    \"dict\": {\n      handler: function handler() {\n        this.initDictData();\n      }\n    },\n    'dictOptions': {\n      deep: true,\n      handler: function handler(val) {\n        if (val && val.length > 0) {\n          this.options = _toConsumableArray(val);\n        }\n      }\n    }\n  },\n  methods: {\n    initSelectValue: function initSelectValue() {\n      var _this = this;\n\n      if (this.async) {\n        if (!this.selectedAsyncValue || !this.selectedAsyncValue.key || this.selectedAsyncValue.key != this.value) {\n          console.log(\"这才请求后台\"); //update-begin-author:taoyan date:20220112 for: 方法initSelectValue 根据下拉框实际值查询下拉框的显示的文本 因后台接口只处理3个参数，所以将过滤条件去掉\n          // TODO 隐患 查询效率问题 还是应该在后台作筛选\n\n          var itemDictStr = this.dict;\n          var arr = itemDictStr.split(',');\n\n          if (arr && arr.length == 4) {\n            // 删除最后一个元素\n            arr.pop();\n            itemDictStr = arr.join(',');\n          } //update-end-author:taoyan date:20220112 for: 方法initSelectValue 根据下拉框实际值查询下拉框的显示的文本 因后台接口只处理3个参数，所以将过滤条件去掉\n\n\n          getAction(\"/sys/dict/loadDictItem/\".concat(itemDictStr), {\n            key: this.value\n          }).then(function (res) {\n            if (res.success) {\n              var obj = {\n                key: _this.value,\n                label: res.result\n              };\n              _this.selectedAsyncValue = _objectSpread({}, obj);\n            }\n          });\n        }\n      } else {\n        this.selectedValue = this.value.toString();\n      }\n    },\n    loadData: function loadData(value) {\n      var _this2 = this;\n\n      console.log(\"数据加载\", value);\n      this.lastLoad += 1;\n      var currentLoad = this.lastLoad;\n      this.options = [];\n      this.loading = true; // 字典code格式：table,text,code\n\n      getAction(\"/sys/dict/loadDict/\".concat(this.dict), {\n        keyword: value,\n        pageSize: this.pageSize\n      }).then(function (res) {\n        _this2.loading = false;\n\n        if (res.success) {\n          if (currentLoad != _this2.lastLoad) {\n            return;\n          }\n\n          _this2.options = res.result;\n          console.log(\"我是第一个\", res);\n        } else {\n          _this2.$message.warning(res.message);\n        }\n      });\n    },\n    initDictData: function initDictData() {\n      var _this3 = this;\n\n      if (!this.async) {\n        //如果字典项集合有数据\n        if (this.dictOptions && this.dictOptions.length > 0) {\n          this.options = _toConsumableArray(this.dictOptions);\n        } else {\n          //根据字典Code, 初始化字典数组\n          var dictStr = '';\n\n          if (this.dict) {\n            var arr = this.dict.split(',');\n\n            if (arr[0].indexOf('where') > 0) {\n              var tbInfo = arr[0].split('where');\n              dictStr = tbInfo[0].trim() + ',' + arr[1] + ',' + arr[2] + ',' + encodeURIComponent(tbInfo[1]);\n            } else {\n              dictStr = this.dict;\n            }\n\n            if (this.dict.indexOf(\",\") == -1) {\n              //优先从缓存中读取字典配置\n              if (getDictItemsFromCache(this.dictCode)) {\n                this.options = getDictItemsFromCache(this.dictCode);\n                return;\n              }\n            }\n\n            ajaxGetDictItems(dictStr, null).then(function (res) {\n              if (res.success) {\n                _this3.options = res.result;\n              }\n            });\n          }\n        }\n      } else {\n        if (!this.dict) {\n          console.error('搜索组件未配置字典项');\n        } else {\n          //异步一开始也加载一点数据\n          this.loading = true;\n          getAction(\"/sys/dict/loadDict/\".concat(this.dict), {\n            pageSize: this.pageSize,\n            keyword: ''\n          }).then(function (res) {\n            _this3.loading = false;\n\n            if (res.success) {\n              _this3.options = res.result;\n            } else {\n              _this3.$message.warning(res.message);\n            }\n          });\n        }\n      }\n    },\n    filterOption: function filterOption(input, option) {\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    },\n    handleChange: function handleChange(selectedValue) {\n      console.log(\"selectedValue\", selectedValue);\n      this.selectedValue = selectedValue;\n      this.callback();\n    },\n    handleAsyncChange: function handleAsyncChange(selectedObj) {\n      //update-begin-author:scott date:20201222 for:【搜索】搜索查询组件，删除条件，默认下拉还是上次的缓存数据，不好 JT-191\n      if (selectedObj) {\n        this.selectedAsyncValue = selectedObj;\n        this.selectedValue = selectedObj.key;\n      } else {\n        this.selectedAsyncValue = null;\n        this.selectedValue = null;\n        this.options = null;\n        this.loadData(\"\");\n      }\n\n      this.callback(); //update-end-author:scott date:20201222 for:【搜索】搜索查询组件，删除条件，默认下拉还是上次的缓存数据，不好 JT-191\n    },\n    callback: function callback() {\n      this.$emit('change', this.selectedValue);\n    },\n    setCurrentDictOptions: function setCurrentDictOptions(dictOptions) {\n      this.options = dictOptions;\n    },\n    getCurrentDictOptions: function getCurrentDictOptions() {\n      return this.options;\n    },\n    getParentContainer: function getParentContainer(node) {\n      if (typeof this.getPopupContainer === 'function') {\n        return this.getPopupContainer(node);\n      } else if (!this.popContainer) {\n        return node.parentNode;\n      } else {\n        return document.querySelector(this.popContainer);\n      }\n    }\n  },\n  model: {\n    prop: 'value',\n    event: 'change'\n  }\n};",{"version":3,"sources":["JSearchSelectTag.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\n  <a-select\n    v-if=\"async\"\n    showSearch\n    labelInValue\n    :disabled=\"disabled\"\n    :getPopupContainer=\"getParentContainer\"\n    @search=\"loadData\"\n    :placeholder=\"placeholder\"\n    v-model=\"selectedAsyncValue\"\n    style=\"width: 100%\"\n    :filterOption=\"false\"\n    @change=\"handleAsyncChange\"\n    allowClear\n    :notFoundContent=\"loading ? undefined : null\"\n  >\n    <a-spin v-if=\"loading\" slot=\"notFoundContent\" size=\"small\"/>\n    <a-select-option v-for=\"d in options\" :key=\"d.value\" :value=\"d.value\">{{ d.text }}</a-select-option>\n  </a-select>\n\n  <a-select\n    v-else\n    :getPopupContainer=\"getParentContainer\"\n    showSearch\n    :disabled=\"disabled\"\n    :placeholder=\"placeholder\"\n    optionFilterProp=\"children\"\n    style=\"width: 100%\"\n    @change=\"handleChange\"\n    :filterOption=\"filterOption\"\n    v-model=\"selectedValue\"\n    allowClear\n    :notFoundContent=\"loading ? undefined : null\">\n    <a-spin v-if=\"loading\" slot=\"notFoundContent\" size=\"small\"/>\n    <a-select-option v-for=\"d in options\" :key=\"d.value\" :value=\"d.value\">{{ d.text }}</a-select-option>\n  </a-select>\n\n</template>\n\n<script>\n  import { ajaxGetDictItems,getDictItemsFromCache } from '@/api/api'\n  import debounce from 'lodash/debounce';\n  import { getAction } from '../../api/manage'\n\n  export default {\n    name: 'JSearchSelectTag',\n    props:{\n      disabled: Boolean,\n      value: [String, Number],\n      dictOptions: Array,\n      async: Boolean,\n      placeholder:{\n        type:String,\n        default:\"请选择\",\n        required:false\n      },\n      dict:{\n        type: String,\n        default: '',\n        required: false\n      },\n      popContainer:{\n        type:String,\n        default:'',\n        required:false\n      },\n      pageSize:{\n        type: Number,\n        default: 10,\n        required: false\n      },\n      getPopupContainer: {\n        type:Function,\n        default: null\n      },\n    },\n    data(){\n      this.loadData = debounce(this.loadData, 800);//消抖\n      this.lastLoad = 0;\n      return {\n        loading:false,\n        selectedValue:[],\n        selectedAsyncValue:[],\n        options: [],\n      }\n    },\n    created(){\n      this.initDictData();\n    },\n    watch:{\n      \"value\":{\n        immediate:true,\n        handler(val){\n          if(!val){\n            if(val==0){\n              this.initSelectValue()\n            }else{\n              this.selectedValue=[]\n              this.selectedAsyncValue=[]\n            }\n          }else{\n            this.initSelectValue()\n          }\n        }\n      },\n      \"dict\":{\n        handler(){\n          this.initDictData()\n        }\n      },\n      'dictOptions':{\n        deep: true,\n        handler(val){\n          if(val && val.length>0){\n            this.options = [...val]\n          }\n        }\n      }\n    },\n    methods:{\n      initSelectValue(){\n        if(this.async){\n          if(!this.selectedAsyncValue || !this.selectedAsyncValue.key || this.selectedAsyncValue.key!=this.value){\n            console.log(\"这才请求后台\")\n            //update-begin-author:taoyan date:20220112 for: 方法initSelectValue 根据下拉框实际值查询下拉框的显示的文本 因后台接口只处理3个参数，所以将过滤条件去掉\n            // TODO 隐患 查询效率问题 还是应该在后台作筛选\n            let itemDictStr = this.dict\n            let arr = itemDictStr.split(',')\n            if(arr && arr.length==4){\n              // 删除最后一个元素\n              arr.pop();\n              itemDictStr = arr.join(',')\n            }\n            //update-end-author:taoyan date:20220112 for: 方法initSelectValue 根据下拉框实际值查询下拉框的显示的文本 因后台接口只处理3个参数，所以将过滤条件去掉\n            getAction(`/sys/dict/loadDictItem/${itemDictStr}`,{key:this.value}).then(res=>{\n              if(res.success){\n                let obj = {\n                  key:this.value,\n                  label:res.result\n                }\n                this.selectedAsyncValue = {...obj}\n              }\n            })\n          }\n        }else{\n          this.selectedValue = this.value.toString()\n        }\n      },\n      loadData(value){\n        console.log(\"数据加载\",value)\n        this.lastLoad +=1\n        const currentLoad = this.lastLoad\n        this.options = []\n        this.loading=true\n        // 字典code格式：table,text,code\n        getAction(`/sys/dict/loadDict/${this.dict}`,{keyword:value, pageSize: this.pageSize}).then(res=>{\n          this.loading=false\n          if(res.success){\n            if(currentLoad!=this.lastLoad){\n              return\n            }\n            this.options = res.result\n            console.log(\"我是第一个\",res)\n          }else{\n            this.$message.warning(res.message)\n          }\n\n        })\n\n      },\n      initDictData(){\n        if(!this.async){\n          //如果字典项集合有数据\n          if(this.dictOptions && this.dictOptions.length>0){\n            this.options = [...this.dictOptions]\n          }else{\n            //根据字典Code, 初始化字典数组\n            let dictStr = ''\n            if(this.dict){\n                let arr = this.dict.split(',')\n                if(arr[0].indexOf('where')>0){\n                  let tbInfo = arr[0].split('where')\n                  dictStr = tbInfo[0].trim()+','+arr[1]+','+arr[2]+','+encodeURIComponent(tbInfo[1])\n                }else{\n                  dictStr = this.dict\n                }\n                if (this.dict.indexOf(\",\") == -1) {\n                  //优先从缓存中读取字典配置\n                  if (getDictItemsFromCache(this.dictCode)) {\n                    this.options = getDictItemsFromCache(this.dictCode);\n                    return\n                  }\n                }\n                ajaxGetDictItems(dictStr, null).then((res) => {\n                  if (res.success) {\n                    this.options = res.result;\n                  }\n                })\n            }\n          }\n        }else{\n          if(!this.dict){\n            console.error('搜索组件未配置字典项')\n          }else{\n            //异步一开始也加载一点数据\n            this.loading=true\n            getAction(`/sys/dict/loadDict/${this.dict}`,{pageSize: this.pageSize, keyword:''}).then(res=>{\n              this.loading=false\n              if(res.success){\n                this.options = res.result\n              }else{\n                this.$message.warning(res.message)\n              }\n            })\n          }\n        }\n      },\n      filterOption(input, option) {\n        return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      },\n      handleChange (selectedValue) {\n        console.log(\"selectedValue\",selectedValue)\n        this.selectedValue = selectedValue\n        this.callback()\n      },\n      handleAsyncChange(selectedObj){\n        //update-begin-author:scott date:20201222 for:【搜索】搜索查询组件，删除条件，默认下拉还是上次的缓存数据，不好 JT-191\n        if(selectedObj){\n          this.selectedAsyncValue = selectedObj\n          this.selectedValue = selectedObj.key\n        }else{\n          this.selectedAsyncValue = null\n          this.selectedValue = null\n          this.options = null\n          this.loadData(\"\")\n        }\n        this.callback()\n        //update-end-author:scott date:20201222 for:【搜索】搜索查询组件，删除条件，默认下拉还是上次的缓存数据，不好 JT-191\n      },\n      callback(){\n        this.$emit('change', this.selectedValue);\n      },\n      setCurrentDictOptions(dictOptions){\n        this.options = dictOptions\n      },\n      getCurrentDictOptions(){\n        return this.options\n      },\n      getParentContainer(node){\n        if(typeof this.getPopupContainer === 'function'){\n          return this.getPopupContainer(node)\n        } else if(!this.popContainer){\n          return node.parentNode\n        }else{\n          return document.querySelector(this.popContainer)\n        }\n      },\n\n    },\n    model: {\n      prop: 'value',\n      event: 'change'\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>"],"sourceRoot":"src/components/dict"}]}