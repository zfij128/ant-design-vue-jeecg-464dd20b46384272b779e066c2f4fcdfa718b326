{"remainingRequest":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\babel-loader\\lib\\index.js!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\views\\system\\modules\\DictItemModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\src\\views\\system\\modules\\DictItemModal.vue","mtime":1665386876000},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\babel-loader\\lib\\index.js","mtime":1665642924601},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665642925904},{"path":"D:\\云晟\\前端\\ant-design-vue-jeecg-464dd20b46384272b779e066c2f4fcdfa718b326\\node_modules\\vue-loader\\lib\\index.js","mtime":1665642924058}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport pick from 'lodash.pick';\nimport { addDictItem, editDictItem } from '@/api/api';\nimport { getAction } from '@api/manage';\nexport default {\n  name: \"DictItemModal\",\n  data: function data() {\n    return {\n      title: \"操作\",\n      visible: false,\n      visibleCheck: true,\n      model: {},\n      dictId: \"\",\n      status: 1,\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      confirmLoading: false,\n      validatorRules: {\n        itemText: [{\n          required: true,\n          message: '请输入名称!'\n        }],\n        itemValue: [{\n          required: true,\n          message: '请输入数据值!'\n        }, {\n          validator: this.validateItemValue\n        }]\n      }\n    };\n  },\n  created: function created() {},\n  methods: {\n    add: function add(dictId) {\n      this.dictId = dictId; //初始化默认值\n\n      this.edit({\n        sortOrder: 1,\n        status: 1\n      });\n    },\n    edit: function edit(record) {\n      if (record.id) {\n        this.dictId = record.dictId;\n      }\n\n      this.status = record.status;\n      this.visibleCheck = record.status == 1 ? true : false;\n      this.model = Object.assign({}, record);\n      this.model.dictId = this.dictId;\n      this.model.status = this.status;\n      this.visible = true;\n    },\n    onChose: function onChose(checked) {\n      if (checked) {\n        this.status = 1;\n        this.visibleCheck = true;\n      } else {\n        this.status = 0;\n        this.visibleCheck = false;\n      }\n    },\n    // 确定\n    handleOk: function handleOk() {\n      var _this = this;\n\n      var that = this; // 触发表单验证\n\n      this.$refs.form.validate(function (valid) {\n        if (valid) {\n          that.confirmLoading = true;\n          _this.model.itemText = (_this.model.itemText || '').trim();\n          _this.model.itemValue = (_this.model.itemValue || '').trim();\n          _this.model.description = (_this.model.description || '').trim();\n          _this.model.status = _this.status;\n          var obj;\n\n          if (!_this.model.id) {\n            obj = addDictItem(_this.model);\n          } else {\n            obj = editDictItem(_this.model);\n          }\n\n          obj.then(function (res) {\n            if (res.success) {\n              that.$message.success(res.message);\n              that.$emit('ok');\n            } else {\n              that.$message.warning(res.message);\n            }\n          }).finally(function () {\n            that.confirmLoading = false;\n            that.close();\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    // 关闭\n    handleCancel: function handleCancel() {\n      this.close();\n    },\n    close: function close() {\n      this.$emit('close');\n      this.visible = false;\n      this.$refs.form.resetFields();\n    },\n    validateItemValue: function validateItemValue(rule, value, callback) {\n      var param = {\n        itemValue: value,\n        dictId: this.dictId\n      };\n\n      if (this.model.id) {\n        param.id = this.model.id;\n      }\n\n      if (value) {\n        var reg = new RegExp(\"[`~!@#$^&*()=|{}'.<>《》/?！￥（）—【】‘；：”“。，、？]\");\n\n        if (reg.test(value)) {\n          callback(\"数据值不能包含特殊字符！\");\n        } else {\n          //update--begin--autor:lvdandan-----date:20201203------for：JT-27【数据字典】字典 - 数据值可重复\n          getAction(\"/sys/dictItem/dictItemCheck\", param).then(function (res) {\n            if (res.success) {\n              callback();\n            } else {\n              callback(res.message);\n            }\n          }); //update--end--autor:lvdandan-----date:20201203------for：JT-27【数据字典】字典 - 数据值可重复\n        }\n      } else {\n        callback();\n      }\n    }\n  }\n};",{"version":3,"sources":["DictItemModal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <a-modal\n    :title=\"title\"\n    :width=\"800\"\n    :visible=\"visible\"\n    :confirmLoading=\"confirmLoading\"\n    @ok=\"handleOk\"\n    @cancel=\"handleCancel\"\n    cancelText=\"关闭\"\n  >\n    <a-spin :spinning=\"confirmLoading\">\n      <a-form-model  ref=\"form\" :model=\"model\" :rules=\"validatorRules\">\n\n        <a-form-model-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          prop=\"itemText\"\n          label=\"名称\">\n          <a-input placeholder=\"请输入名称\" v-model=\"model.itemText\"/>\n        </a-form-model-item>\n\n        <a-form-model-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          prop=\"itemValue\"\n          label=\"数据值\">\n          <a-input placeholder=\"请输入数据值\" v-model=\"model.itemValue\" />\n        </a-form-model-item>\n\n        <a-form-model-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"描述\">\n          <a-input v-model=\"model.description\" />\n        </a-form-model-item>\n\n        <a-form-model-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"排序值\">\n          <a-input-number :min=\"1\" v-model=\"model.sortOrder\" />\n          值越小越靠前\n        </a-form-model-item>\n\n        <a-form-model-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"是否启用\"\n          hasFeedback>\n          <a-switch checkedChildren=\"启用\" unCheckedChildren=\"禁用\" @change=\"onChose\" v-model=\"visibleCheck\"/>\n        </a-form-model-item>\n\n      </a-form-model>\n    </a-spin>\n  </a-modal>\n</template>\n\n<script>\n  import pick from 'lodash.pick'\n  import {addDictItem, editDictItem} from '@/api/api'\n  import { getAction } from '@api/manage'\n\n  export default {\n    name: \"DictItemModal\",\n    data() {\n      return {\n        title: \"操作\",\n        visible: false,\n        visibleCheck: true,\n        model: {},\n        dictId: \"\",\n        status: 1,\n        labelCol: {\n          xs: {span: 24},\n          sm: {span: 5},\n        },\n        wrapperCol: {\n          xs: {span: 24},\n          sm: {span: 16},\n        },\n        confirmLoading: false,\n        validatorRules: {\n          itemText:  [{required: true, message: '请输入名称!'}],\n          itemValue:  [{required: true, message: '请输入数据值!'},{validator: this.validateItemValue}],\n        },\n      }\n    },\n    created() {\n    },\n    methods: {\n      add(dictId) {\n        this.dictId = dictId;\n        //初始化默认值\n        this.edit({sortOrder:1,status:1});\n      },\n      edit(record) {\n        if (record.id) {\n          this.dictId = record.dictId;\n        }\n        this.status = record.status;\n        this.visibleCheck = (record.status == 1) ? true : false;\n        this.model = Object.assign({}, record);\n        this.model.dictId = this.dictId;\n        this.model.status = this.status;\n        this.visible = true;\n      },\n      onChose(checked) {\n        if (checked) {\n          this.status = 1;\n          this.visibleCheck = true;\n        } else {\n          this.status = 0;\n          this.visibleCheck = false;\n        }\n      },\n      // 确定\n      handleOk() {\n        const that = this;\n        // 触发表单验证\n        this.$refs.form.validate(valid => {\n          if (valid) {\n            that.confirmLoading = true;\n            this.model.itemText = (this.model.itemText || '').trim()\n            this.model.itemValue = (this.model.itemValue || '').trim()\n            this.model.description = (this.model.description || '').trim()\n            this.model.status = this.status;\n            let obj;\n            if (!this.model.id) {\n              obj = addDictItem(this.model);\n            } else {\n              obj = editDictItem(this.model);\n            }\n            obj.then((res) => {\n              if (res.success) {\n                that.$message.success(res.message);\n                that.$emit('ok');\n              } else {\n                that.$message.warning(res.message);\n              }\n            }).finally(() => {\n              that.confirmLoading = false;\n              that.close();\n            })\n          }else{\n            return false;\n          }\n        })\n      },\n      // 关闭\n      handleCancel() {\n        this.close();\n      },\n      close() {\n        this.$emit('close');\n        this.visible = false;\n        this.$refs.form.resetFields();\n      },\n      validateItemValue(rule, value, callback){\n        let param = {\n          itemValue:value,\n          dictId:this.dictId,\n        }\n        if(this.model.id){\n          param.id = this.model.id\n        }\n        if(value){\n          let reg=new RegExp(\"[`~!@#$^&*()=|{}'.<>《》/?！￥（）—【】‘；：”“。，、？]\")\n          if(reg.test(value)){\n            callback(\"数据值不能包含特殊字符！\")\n          }else{\n            //update--begin--autor:lvdandan-----date:20201203------for：JT-27【数据字典】字典 - 数据值可重复\n            getAction(\"/sys/dictItem/dictItemCheck\",param).then((res)=>{\n              if(res.success){\n                callback()\n              }else{\n                callback(res.message);\n              }\n            });\n            //update--end--autor:lvdandan-----date:20201203------for：JT-27【数据字典】字典 - 数据值可重复\n          }\n        }else{\n          callback()\n        }\n      }\n    }\n  }\n</script>\n"],"sourceRoot":"src/views/system/modules"}]}